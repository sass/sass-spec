<===> and_descendant/input.scss
@use "sass:selector";
a {b: selector.unify(".c ~ .s1", ".c .s2")}

<===> and_descendant/output.css
a {
  b: .c .c ~ .s1.s2;
}

<===>
================================================================================
<===> and_child/input.scss
@use "sass:selector";
a {b: selector.unify(".c ~ .s1", ".c > .s2")}

<===> and_child/output.css
a {
  b: .c > .c ~ .s1.s2;
}

<===>
================================================================================
<===> and_sibling/distinct/input.scss
@use "sass:selector";
a {b: selector.unify(".c ~ .d", ".e ~ .f")}

<===> and_sibling/distinct/output.css
a {
  b: .c ~ .e ~ .d.f, .e ~ .c ~ .d.f, .c.e ~ .d.f;
}

<===>
================================================================================
<===> and_sibling/identical/input.scss
@use "sass:selector";
a {b: selector.unify(".c ~ .s1", ".c ~ .s2")}

<===> and_sibling/identical/output.css
a {
  b: .c ~ .s1.s2;
}

<===>
================================================================================
<===> and_sibling/superselector/input.scss
@use "sass:selector";
a {b: selector.unify(".c.s1-1 ~ .s1-2", ".c ~ .s2")}

<===> and_sibling/superselector/output.css
a {
  b: .c.s1-1 ~ .s1-2.s2;
}

<===>
================================================================================
<===> and_sibling/overlap/input.scss
@use "sass:selector";
a {b: selector.unify(".c.s1-1 ~ .s1-2", ".c.s2-1 ~ .s2-2")}

<===> and_sibling/overlap/output.css
a {
  b: .c.s1-1 ~ .c.s2-1 ~ .s1-2.s2-2, .c.s2-1 ~ .c.s1-1 ~ .s1-2.s2-2, .c.s1-1.s2-1 ~ .s1-2.s2-2;
}

<===>
================================================================================
<===> and_sibling/conflict/input.scss
@use "sass:selector";
a {b: selector.unify("#s1-1 ~ .s1-2", "#s2-1 ~ .s2-2")}

<===> and_sibling/conflict/output.css
a {
  b: #s1-1 ~ #s2-1 ~ .s1-2.s2-2, #s2-1 ~ #s1-1 ~ .s1-2.s2-2;
}

<===>
================================================================================
<===> and_next_sibling/distinct/input.scss
@use "sass:selector";
a {b: selector.unify(".c ~ .d", ".e + .f")}

<===> and_next_sibling/distinct/output.css
a {
  b: .c ~ .e + .d.f, .c.e + .d.f;
}

<===>
================================================================================
<===> and_next_sibling/identical/input.scss
@use "sass:selector";
a {b: selector.unify(".c ~ .s1", ".c + .s2")}

<===> and_next_sibling/identical/output.css
a {
  b: .c + .s1.s2;
}

<===>
================================================================================
<===> and_next_sibling/superselector/input.scss
@use "sass:selector";
a {b: selector.unify(".c.s1-1 ~ .s1-2", ".c + .s2")}

<===> and_next_sibling/superselector/output.css
a {
  b: .c.s1-1 ~ .c + .s1-2.s2, .c.s1-1 + .s1-2.s2;
}

<===>
================================================================================
<===> and_next_sibling/overlap/input.scss
@use "sass:selector";
a {b: selector.unify(".c.s1-1 ~ .s1-2", ".c.s2-1 + .s2-2")}

<===> and_next_sibling/overlap/output.css
a {
  b: .c.s1-1 ~ .c.s2-1 + .s1-2.s2-2, .c.s1-1.s2-1 + .s1-2.s2-2;
}

<===>
================================================================================
<===> and_next_sibling/conflict/input.scss
@use "sass:selector";
a {b: selector.unify("#s1-1 ~ .s1-2", "#s2-1 + .s2-2")}

<===> and_next_sibling/conflict/output.css
a {
  b: #s1-1 ~ #s2-1 + .s1-2.s2-2;
}
