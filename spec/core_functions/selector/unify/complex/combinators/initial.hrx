<===> README.md
The specific semantics of (explicit) combinators isn't considered when handling
initial combinators, so we cycle through possible combinators in these specs.
Any of these specs should pass with any combination of combinators.

<===>
================================================================================
<===> only_one/selector1/input.scss
@use "sass:selector";
a {b: selector.unify("> .c", ".d")}

<===> only_one/selector1/output.css
a {
  b: > .c.d;
}

<===>
================================================================================
<===> only_one/selector2/input.scss
@use "sass:selector";
a {b: selector.unify(".c", "~ .d")}

<===> only_one/selector2/output.css
a {
  b: ~ .c.d;
}

<===>
================================================================================
<===> same/input.scss
@use "sass:selector";
a {b: selector.unify("+ .c", "+ .d")}

<===> same/output.css
a {
  b: + .c.d;
}
