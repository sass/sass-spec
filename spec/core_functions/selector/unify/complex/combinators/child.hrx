<===> and_descendant/distinct/input.scss
@use "sass:selector";
a {b: selector.unify(".c > .d", ".e .f")}

<===> and_descendant/distinct/output.css
a {
  b: .e .c > .d.f;
}

<===>
================================================================================
<===> and_descendant/identical/input.scss
@use "sass:selector";
a {b: selector.unify(".c > .s1", ".c .s2")}

<===> and_descendant/identical/output.css
a {
  b: .c > .s1.s2;
}

<===>
================================================================================
<===> and_descendant/superselector/input.scss
@use "sass:selector";
a {b: selector.unify(".c.s1-1 > .s1-2", ".c .s2")}

<===> and_descendant/superselector/output.css
a {
  b: .c.s1-1 > .s1-2.s2;
}

<===>
================================================================================
<===> and_descendant/overlap/input.scss
@use "sass:selector";
a {b: selector.unify(".c.s1-1 > .s1-2", ".c.s2-1 .s2-2")}

<===> and_descendant/overlap/output.css
a {
  b: .c.s2-1 .c.s1-1 > .s1-2.s2-2;
}

<===>
================================================================================
<===> and_child/distinct/input.scss
@use "sass:selector";
a {b: selector.unify(".c > .d", ".e > .f")}

<===> and_child/distinct/output.css
a {
  b: .c.e > .d.f;
}

<===>
================================================================================
<===> and_child/superselector/input.scss
@use "sass:selector";
a {b: selector.unify(".c.s1-1 > .s1-2", ".c > .s2")}

<===> and_child/superselector/output.css
a {
  b: .c.s1-1 > .s1-2.s2;
}

<===>
================================================================================
<===> and_child/overlap/input.scss
@use "sass:selector";
a {b: selector.unify(".c.s1-1 > .s1-2", ".c.s2-1 > .s2-2")}

<===> and_child/overlap/output.css
a {
  b: .c.s1-1.s2-1 > .s1-2.s2-2;
}

<===>
================================================================================
<===> and_child/conflict/input.scss
@use "sass:meta";
@use "sass:selector";
a {b: meta.inspect(selector.unify("#s1-1 > .s1-2", "#s2-1 > .s2-2"))}

<===> and_child/conflict/output.css
a {
  b: null;
}

<===>
================================================================================
<===> and_sibling/input.scss
@use "sass:selector";
a {b: selector.unify(".c > .s1", ".c ~ .s2")}

<===> and_sibling/output.css
a {
  b: .c > .c ~ .s1.s2;
}

<===>
================================================================================
<===> and_next_sibling/input.scss
@use "sass:selector";
a {b: selector.unify(".c > .s1", ".c + .s2")}

<===> and_next_sibling/output.css
a {
  b: .c > .c + .s1.s2;
}
