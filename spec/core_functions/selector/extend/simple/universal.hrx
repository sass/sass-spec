<===> README.md
Although many of these extendees are subselectors of the targets, they're not
matched because this phase only cares about full structural equality.

<===>
================================================================================
<===> equal/options.yml
:ignore_for:
  - libsass

<===> equal/input.scss
a {b: selector-extend("*", "*", "c")}

<===> equal/output.css
a {
  b: *;
}

<===>
================================================================================
<===> and_type/input.scss
a {b: selector-extend("*", "c", "d")}

<===> and_type/output.css
a {
  b: *;
}

<===>
================================================================================
<===> and_class/input.scss
a {b: selector-extend("*", ".c", "d")}

<===> and_class/output.css
a {
  b: *;
}

<===>
================================================================================
<===> namespace/explicit/and_type/explicit/equal/input.scss
a {b: selector-extend("c|*", "c|d", "e")}

<===> namespace/explicit/and_type/explicit/equal/output.css
a {
  b: c|*;
}

<===>
================================================================================
<===> namespace/explicit/and_type/explicit/unequal/input.scss
a {b: selector-extend("c|*", "e|d", "e")}

<===> namespace/explicit/and_type/explicit/unequal/output.css
a {
  b: c|*;
}

<===>
================================================================================
<===> namespace/explicit/and_type/implicit/input.scss
a {b: selector-extend("c|*", "d", "e")}

<===> namespace/explicit/and_type/implicit/output.css
a {
  b: c|*;
}

<===>
================================================================================
<===> namespace/explicit/and_type/empty/input.scss
a {b: selector-extend("c|*", "|d", "e")}

<===> namespace/explicit/and_type/empty/output.css
a {
  b: c|*;
}

<===>
================================================================================
<===> namespace/explicit/and_universal/explicit/equal/input.scss
a {b: selector-extend("c|*", "c|*", "e")}

<===> namespace/explicit/and_universal/explicit/equal/output.css
a {
  b: c|*, e;
}

<===>
================================================================================
<===> namespace/explicit/and_universal/explicit/unequal/input.scss
a {b: selector-extend("c|*", "d|*", "e")}

<===> namespace/explicit/and_universal/explicit/unequal/output.css
a {
  b: c|*;
}

<===>
================================================================================
<===> namespace/explicit/and_universal/implicit/input.scss
a {b: selector-extend("c|*", "*", "e")}

<===> namespace/explicit/and_universal/implicit/output.css
a {
  b: c|*;
}

<===>
================================================================================
<===> namespace/explicit/and_universal/empty/input.scss
a {b: selector-extend("c|*", "|*", "e")}

<===> namespace/explicit/and_universal/empty/output.css
a {
  b: c|*;
}

<===>
================================================================================
<===> namespace/explicit/and_universal/universal/input.scss
a {b: selector-extend("c|*", "*|*", "e")}

<===> namespace/explicit/and_universal/universal/output.css
a {
  b: c|*;
}

<===>
================================================================================
<===> namespace/explicit/and_class/input.scss
a {b: selector-extend("c|*", ".d", "e")}

<===> namespace/explicit/and_class/output.css
a {
  b: c|*;
}

<===>
================================================================================
<===> namespace/empty/and_type/explicit/input.scss
a {b: selector-extend("|*", "c|d", "e")}

<===> namespace/empty/and_type/explicit/output.css
a {
  b: |*;
}

<===>
================================================================================
<===> namespace/empty/and_type/implicit/input.scss
a {b: selector-extend("|*", "d", "e")}

<===> namespace/empty/and_type/implicit/output.css
a {
  b: |*;
}

<===>
================================================================================
<===> namespace/empty/and_type/empty/input.scss
a {b: selector-extend("|*", "|d", "e")}

<===> namespace/empty/and_type/empty/output.css
a {
  b: |*;
}

<===>
================================================================================
<===> namespace/empty/and_universal/explicit/input.scss
a {b: selector-extend("|*", "c|*", "d")}

<===> namespace/empty/and_universal/explicit/output.css
a {
  b: |*;
}

<===>
================================================================================
<===> namespace/empty/and_universal/implicit/input.scss
a {b: selector-extend("|*", "*", "c")}

<===> namespace/empty/and_universal/implicit/output.css
a {
  b: |*;
}

<===>
================================================================================
<===> namespace/empty/and_universal/empty/input.scss
a {b: selector-extend("|*", "|*", "c")}

<===> namespace/empty/and_universal/empty/output.css
a {
  b: |*, c;
}

<===>
================================================================================
<===> namespace/empty/and_universal/universal/input.scss
a {b: selector-extend("|*", "*|*", "c")}

<===> namespace/empty/and_universal/universal/output.css
a {
  b: |*;
}

<===>
================================================================================
<===> namespace/empty/and_class/input.scss
a {b: selector-extend("|*", ".c", "d")}

<===> namespace/empty/and_class/output.css
a {
  b: |*;
}

<===>
================================================================================
<===> namespace/universal/and_type/explicit/input.scss
a {b: selector-extend("*|*", "c|d", "e")}

<===> namespace/universal/and_type/explicit/output.css
a {
  b: *|*;
}

<===>
================================================================================
<===> namespace/universal/and_type/implicit/input.scss
a {b: selector-extend("*|*", "c", "d")}

<===> namespace/universal/and_type/implicit/output.css
a {
  b: *|*;
}

<===>
================================================================================
<===> namespace/universal/and_type/empty/input.scss
a {b: selector-extend("*|*", "|c", "d")}

<===> namespace/universal/and_type/empty/output.css
a {
  b: *|*;
}

<===>
================================================================================
<===> namespace/universal/and_universal/explicit/input.scss
a {b: selector-extend("*|*", "c|*", "d")}

<===> namespace/universal/and_universal/explicit/output.css
a {
  b: *|*;
}

<===>
================================================================================
<===> namespace/universal/and_universal/implicit/input.scss
a {b: selector-extend("*|*", "*", "c")}

<===> namespace/universal/and_universal/implicit/output.css
a {
  b: *|*;
}

<===>
================================================================================
<===> namespace/universal/and_universal/empty/input.scss
a {b: selector-extend("*|*", "|*", "c")}

<===> namespace/universal/and_universal/empty/output.css
a {
  b: *|*;
}

<===>
================================================================================
<===> namespace/universal/and_universal/universal/options.yml
:ignore_for:
  - libsass

<===> namespace/universal/and_universal/universal/input.scss
a {b: selector-extend("*|*", "*|*", "c")}

<===> namespace/universal/and_universal/universal/output.css
a {
  b: *|*;
}

<===>
================================================================================
<===> namespace/universal/and_class/input.scss
a {b: selector-extend("*|*", ".c", "d")}

<===> namespace/universal/and_class/output.css
a {
  b: *|*;
}
