<===> parent/without_grandparent/simple/input.scss
@use "sass:selector";
a {b: selector.extend(".c.x .d", ".c", ".e")}

<===> parent/without_grandparent/simple/output.css
a {
  b: .c.x .d, .x.e .d;
}

<===>
================================================================================
<===> parent/without_grandparent/complex/input.scss
@use "sass:selector";
a {b: selector.extend(".c.x .d", ".c", ".e .f")}

<===> parent/without_grandparent/complex/output.css
a {
  b: .c.x .d, .e .x.f .d;
}

<===>
================================================================================
<===> parent/without_grandparent/list/input.scss
@use "sass:selector";
a {b: selector.extend(".c.x .d", ".c", ".e, .f")}

<===> parent/without_grandparent/list/output.css
a {
  b: .c.x .d, .x.e .d, .x.f .d;
}

<===>
================================================================================
<===> parent/with_grandparent/simple/input.scss
@use "sass:selector";
a {b: selector.extend(".c .d.x .e", ".d", ".f")}

<===> parent/with_grandparent/simple/output.css
a {
  b: .c .d.x .e, .c .x.f .e;
}

<===>
================================================================================
<===> parent/with_grandparent/complex/input.scss
@use "sass:selector";
a {b: selector.extend(".c .d.x .e", ".d", ".f .g")}

<===> parent/with_grandparent/complex/output.css
a {
  b: .c .d.x .e, .c .f .x.g .e, .f .c .x.g .e;
}

<===>
================================================================================
<===> parent/with_grandparent/list/input.scss
@use "sass:selector";
a {b: selector.extend(".c .d.x .e", ".d", ".f, .g")}

<===> parent/with_grandparent/list/output.css
a {
  b: .c .d.x .e, .c .x.f .e, .c .x.g .e;
}

<===>
================================================================================
<===> leading_combinator/selector/input.scss
@use "sass:selector";
a {b: selector.extend("> .c.x", ".c", ".d")}

<===> leading_combinator/selector/output.css
a {
  b: > .c.x, > .x.d;
}
