<===> selector/parent/input.scss
@use "sass:selector";
a {b: selector.extend("&", "c", "d")}

<===> selector/parent/error
Error: $selector: Parent selectors aren't allowed here.
  ,
1 | &
  | ^ 
  '
  ,--> input.scss
2 | a {b: selector.extend("&", "c", "d")}
  |       ============================== invocation
  '
  - 1:1  root stylesheet

<===>
================================================================================
<===> selector/combinator_only/input.scss
@use "sass:selector";
a {b: selector.extend("+", ".c", ".d")}

<===> selector/combinator_only/error
Error: $selector: Selectors that aren't valid on their own aren't allowed in this function.
  ,
1 | +
  | ^ 
  '
  ,--> input.scss
2 | a {b: selector.extend("+", ".c", ".d")}
  |       ================================ invocation
  '
  - 1:1  root stylesheet

<===>
================================================================================
<===> selector/trailing_combinator/input.scss
@use "sass:selector";
a {b: selector.extend(".a +", ".c", ".d")}

<===> selector/trailing_combinator/error
Error: $selector: Selectors that aren't valid on their own aren't allowed in this function.
  ,
1 | .a +
  | ^^^^ 
  '
  ,--> input.scss
2 | a {b: selector.extend(".a +", ".c", ".d")}
  |       =================================== invocation
  '
  - 1:1  root stylesheet

<===>
================================================================================
<===> selector/invalid/input.scss
@use "sass:selector";
a {b: selector.extend("[c", "d", "e")}

<===> selector/invalid/error
Error: $selector: expected more input.
  ,
1 | [c
  |   ^ 
  '
  ,--> input.scss
2 | a {b: selector.extend("[c", "d", "e")}
  |       =============================== invocation
  '
  - 1:3  root stylesheet

<===>
================================================================================
<===> selector/type/input.scss
@use "sass:selector";
a {b: selector.extend(1, "c", "d")}

<===> selector/type/error
Error: $selector: 1 is not a valid selector: it must be a string,
a list of strings, or a list of lists of strings.
  ,
2 | a {b: selector.extend(1, "c", "d")}
  |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  '
  input.scss 2:7  root stylesheet

<===>
================================================================================
<===> extendee/parent/input.scss
@use "sass:selector";
a {b: selector.extend("c", "&", "d")}

<===> extendee/parent/error
Error: $extendee: Parent selectors aren't allowed here.
  ,
1 | &
  | ^ 
  '
  ,--> input.scss
2 | a {b: selector.extend("c", "&", "d")}
  |       ============================== invocation
  '
  - 1:1  root stylesheet

<===>
================================================================================
<===> extendee/combinator_only/input.scss
@use "sass:selector";
a {b: selector.extend(".c", ">", ".a")}

<===> extendee/combinator_only/error
Error: $extendee: Selectors that aren't valid on their own aren't allowed in this function.
  ,
1 | >
  | ^ 
  '
  ,--> input.scss
2 | a {b: selector.extend(".c", ">", ".a")}
  |       ================================ invocation
  '
  - 1:1  root stylesheet

<===>
================================================================================
<===> extendee/leading_combinator/input.scss
@use "sass:selector";
a {b: selector.extend(".c", "> .c", ".a")}

<===> extendee/leading_combinator/error
Error: $extendee: Selectors that aren't valid on their own aren't allowed in this function.
  ,
1 | > .c
  | ^^^^ 
  '
  ,--> input.scss
2 | a {b: selector.extend(".c", "> .c", ".a")}
  |       =================================== invocation
  '
  - 1:1  root stylesheet

<===>
================================================================================
<===> extendee/trailing_combinator/input.scss
@use "sass:selector";
a {b: selector.extend(".c", ".c >", ".a")}

<===> extendee/trailing_combinator/error
Error: $extendee: Selectors that aren't valid on their own aren't allowed in this function.
  ,
1 | .c >
  | ^^^^ 
  '
  ,--> input.scss
2 | a {b: selector.extend(".c", ".c >", ".a")}
  |       =================================== invocation
  '
  - 1:1  root stylesheet

<===>
================================================================================
<===> extendee/complex/string/input.scss
@use "sass:selector";
a {b: selector.extend("c", "d e", "f")}

<===> extendee/complex/string/error
Error: Can't extend complex selector d e.
  ,
2 | a {b: selector.extend("c", "d e", "f")}
  |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  '
  input.scss 2:7  root stylesheet

<===>
================================================================================
<===> extendee/complex/list/input.scss
@use "sass:selector";
a {b: selector.extend("c", d e, "f")}

<===> extendee/complex/list/error
Error: Can't extend complex selector d e.
  ,
2 | a {b: selector.extend("c", d e, "f")}
  |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  '
  input.scss 2:7  root stylesheet

<===>
================================================================================
<===> extendee/invalid/input.scss
@use "sass:selector";
a {b: selector.extend("c", "[d", "e")}

<===> extendee/invalid/error
Error: $extendee: expected more input.
  ,
1 | [d
  |   ^ 
  '
  ,--> input.scss
2 | a {b: selector.extend("c", "[d", "e")}
  |       =============================== invocation
  '
  - 1:3  root stylesheet

<===>
================================================================================
<===> extendee/type/input.scss
@use "sass:selector";
a {b: selector.extend("c", 1, "d")}

<===> extendee/type/error
Error: $extendee: 1 is not a valid selector: it must be a string,
a list of strings, or a list of lists of strings.
  ,
2 | a {b: selector.extend("c", 1, "d")}
  |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  '
  input.scss 2:7  root stylesheet

<===>
================================================================================
<===> extender/parent/input.scss
@use "sass:selector";
a {b: selector.extend("c", "d", "&")}

<===> extender/parent/error
Error: $extender: Parent selectors aren't allowed here.
  ,
1 | &
  | ^ 
  '
  ,--> input.scss
2 | a {b: selector.extend("c", "d", "&")}
  |       ============================== invocation
  '
  - 1:1  root stylesheet


<===>
================================================================================
<===> extender/combinator_only/input.scss
@use "sass:selector";
a {b: selector.extend(".c", ".c", ">")}

<===> extender/combinator_only/error
Error: $extender: Selectors that aren't valid on their own aren't allowed in this function.
  ,
1 | >
  | ^ 
  '
  ,--> input.scss
2 | a {b: selector.extend(".c", ".c", ">")}
  |       ================================ invocation
  '
  - 1:1  root stylesheet


<===>
================================================================================
<===> extender/leading_combinator/input.scss
@use "sass:selector";
a {b: selector.extend(".c", ".c", "> .a")}

<===> extender/leading_combinator/error
Error: $extender: Selectors that aren't valid on their own aren't allowed in this function.
  ,
1 | > .a
  | ^^^^ 
  '
  ,--> input.scss
2 | a {b: selector.extend(".c", ".c", "> .a")}
  |       =================================== invocation
  '
  - 1:1  root stylesheet

<===>
================================================================================
<===> extender/trailing_combinator/input.scss
@use "sass:selector";
a {b: selector.extend(".c", ".c", ".a >")}

<===> extender/trailing_combinator/error
Error: $extender: Selectors that aren't valid on their own aren't allowed in this function.
  ,
1 | .a >
  | ^^^^ 
  '
  ,--> input.scss
2 | a {b: selector.extend(".c", ".c", ".a >")}
  |       =================================== invocation
  '
  - 1:1  root stylesheet

<===>
================================================================================
<===> extender/invalid/input.scss
@use "sass:selector";
a {b: selector.extend("c", "d", "[e")}

<===> extender/invalid/error
Error: $extender: expected more input.
  ,
1 | [e
  |   ^ 
  '
  ,--> input.scss
2 | a {b: selector.extend("c", "d", "[e")}
  |       =============================== invocation
  '
  - 1:3  root stylesheet

<===>
================================================================================
<===> extender/type/input.scss
@use "sass:selector";
a {b: selector.extend("c", "d", 1)}

<===> extender/type/error
Error: $extender: 1 is not a valid selector: it must be a string,
a list of strings, or a list of lists of strings.
  ,
2 | a {b: selector.extend("c", "d", 1)}
  |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  '
  input.scss 2:7  root stylesheet

<===>
================================================================================
<===> wrong_name/input.scss
@use "sass:selector";
a {b: selector.selector-extend(c, c, d)}

<===> wrong_name/error
Error: Undefined function.
  ,
2 | a {b: selector.selector-extend(c, c, d)}
  |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  '
  input.scss 2:7  root stylesheet

<===>
================================================================================
<===> too_many_args/input.scss
@use "sass:selector";
a {b: selector.extend("c", "d", "e", "f")}

<===> too_many_args/error
Error: Only 3 arguments allowed, but 4 were passed.
  ,--> input.scss
2 | a {b: selector.extend("c", "d", "e", "f")}
  |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invocation
  '
  ,--> sass:selector
1 | @function extend($selector, $extendee, $extender) {
  |           ======================================= declaration
  '
  input.scss 2:7  root stylesheet

<===>
================================================================================
<===> too_few_args/input.scss
@use "sass:selector";
a {b: selector.extend("c", "d")}

<===> too_few_args/error
Error: Missing argument $extender.
  ,--> input.scss
2 | a {b: selector.extend("c", "d")}
  |       ^^^^^^^^^^^^^^^^^^^^^^^^^ invocation
  '
  ,--> sass:selector
1 | @function extend($selector, $extendee, $extender) {
  |           ======================================= declaration
  '
  input.scss 2:7  root stylesheet
