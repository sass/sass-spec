<===> equal/input.scss
@use "sass:selector";
a {b: selector.is-superselector("*", "*")}

<===> equal/output.css
a {
  b: true;
}

<===>
================================================================================
<===> and_type/input.scss
@use "sass:selector";
a {b: selector.is-superselector("*", "c")}

<===> and_type/output.css
a {
  b: true;
}

<===>
================================================================================
<===> and_class/input.scss
@use "sass:selector";
a {b: selector.is-superselector("*", ".c")}

<===> and_class/output.css
a {
  b: true;
}

<===>
================================================================================
<===> namespace/explicit/and_type/explicit/equal/input.scss
@use "sass:selector";
a {b: selector.is-superselector("c|*", "c|d")}

<===> namespace/explicit/and_type/explicit/equal/output.css
a {
  b: true;
}

<===>
================================================================================
<===> namespace/explicit/and_type/explicit/unequal/input.scss
@use "sass:selector";
a {b: selector.is-superselector("c|*", "e|d")}

<===> namespace/explicit/and_type/explicit/unequal/output.css
a {
  b: false;
}

<===>
================================================================================
<===> namespace/explicit/and_type/implicit/input.scss
@use "sass:selector";
a {b: selector.is-superselector("c|*", "d")}

<===> namespace/explicit/and_type/implicit/output.css
a {
  b: false;
}

<===>
================================================================================
<===> namespace/explicit/and_type/empty/input.scss
@use "sass:selector";
a {b: selector.is-superselector("c|*", "|d")}

<===> namespace/explicit/and_type/empty/output.css
a {
  b: false;
}

<===>
================================================================================
<===> namespace/explicit/and_universal/explicit/equal/options.yml
---
:todo:

<===> namespace/explicit/and_universal/explicit/equal/input.scss
@use "sass:selector";
a {b: selector.is-superselector("c|*", "c|*")}

<===> namespace/explicit/and_universal/explicit/equal/output.css
a {
  b: true;
}

<===>
================================================================================
<===> namespace/explicit/and_universal/explicit/unequal/input.scss
@use "sass:selector";
a {b: selector.is-superselector("c|*", "d|*")}

<===> namespace/explicit/and_universal/explicit/unequal/output.css
a {
  b: false;
}

<===>
================================================================================
<===> namespace/explicit/and_universal/implicit/input.scss
@use "sass:selector";
a {b: selector.is-superselector("c|*", "*")}

<===> namespace/explicit/and_universal/implicit/output.css
a {
  b: false;
}

<===>
================================================================================
<===> namespace/explicit/and_universal/empty/input.scss
@use "sass:selector";
a {b: selector.is-superselector("c|*", "|*")}

<===> namespace/explicit/and_universal/empty/output.css
a {
  b: false;
}

<===>
================================================================================
<===> namespace/explicit/and_universal/universal/input.scss
@use "sass:selector";
a {b: selector.is-superselector("c|*", "*|*")}

<===> namespace/explicit/and_universal/universal/output.css
a {
  b: false;
}

<===>
================================================================================
<===> namespace/explicit/and_class/input.scss
@use "sass:selector";
a {b: selector.is-superselector("c|*", ".d")}

<===> namespace/explicit/and_class/output.css
a {
  b: false;
}

<===>
================================================================================
<===> namespace/empty/and_type/explicit/input.scss
@use "sass:selector";
a {b: selector.is-superselector("|*", "c|d")}

<===> namespace/empty/and_type/explicit/output.css
a {
  b: false;
}

<===>
================================================================================
<===> namespace/empty/and_type/implicit/input.scss
@use "sass:selector";
a {b: selector.is-superselector("|*", "d")}

<===> namespace/empty/and_type/implicit/output.css
a {
  b: false;
}

<===>
================================================================================
<===> namespace/empty/and_type/empty/input.scss
@use "sass:selector";
a {b: selector.is-superselector("|*", "|d")}

<===> namespace/empty/and_type/empty/output.css
a {
  b: true;
}

<===>
================================================================================
<===> namespace/empty/and_universal/explicit/input.scss
@use "sass:selector";
a {b: selector.is-superselector("|*", "c|*")}

<===> namespace/empty/and_universal/explicit/output.css
a {
  b: false;
}

<===>
================================================================================
<===> namespace/empty/and_universal/implicit/input.scss
@use "sass:selector";
a {b: selector.is-superselector("|*", "*")}

<===> namespace/empty/and_universal/implicit/output.css
a {
  b: false;
}

<===>
================================================================================
<===> namespace/empty/and_universal/empty/input.scss
@use "sass:selector";
a {b: selector.is-superselector("|*", "|*")}

<===> namespace/empty/and_universal/empty/output.css
a {
  b: true;
}

<===>
================================================================================
<===> namespace/empty/and_universal/universal/input.scss
@use "sass:selector";
a {b: selector.is-superselector("|*", "*|*")}

<===> namespace/empty/and_universal/universal/output.css
a {
  b: false;
}

<===>
================================================================================
<===> namespace/empty/and_class/input.scss
@use "sass:selector";
a {b: selector.is-superselector("|*", ".d")}

<===> namespace/empty/and_class/output.css
a {
  b: false;
}

<===>
================================================================================
<===> namespace/universal/and_type/explicit/input.scss
@use "sass:selector";
a {b: selector.is-superselector("*|*", "c|d")}

<===> namespace/universal/and_type/explicit/output.css
a {
  b: true;
}

<===>
================================================================================
<===> namespace/universal/and_type/implicit/input.scss
@use "sass:selector";
a {b: selector.is-superselector("*|*", "d")}

<===> namespace/universal/and_type/implicit/output.css
a {
  b: true;
}

<===>
================================================================================
<===> namespace/universal/and_type/empty/input.scss
@use "sass:selector";
a {b: selector.is-superselector("*|*", "|d")}

<===> namespace/universal/and_type/empty/output.css
a {
  b: true;
}

<===>
================================================================================
<===> namespace/universal/and_universal/explicit/input.scss
@use "sass:selector";
a {b: selector.is-superselector("*|*", "c|*")}

<===> namespace/universal/and_universal/explicit/output.css
a {
  b: true;
}

<===>
================================================================================
<===> namespace/universal/and_universal/implicit/input.scss
@use "sass:selector";
a {b: selector.is-superselector("*|*", "*")}

<===> namespace/universal/and_universal/implicit/output.css
a {
  b: true;
}

<===>
================================================================================
<===> namespace/universal/and_universal/empty/input.scss
@use "sass:selector";
a {b: selector.is-superselector("*|*", "|*")}

<===> namespace/universal/and_universal/empty/output.css
a {
  b: true;
}

<===>
================================================================================
<===> namespace/universal/and_universal/universal/input.scss
@use "sass:selector";
a {b: selector.is-superselector("*|*", "*|*")}

<===> namespace/universal/and_universal/universal/output.css
a {
  b: true;
}

<===>
================================================================================
<===> namespace/universal/and_class/input.scss
@use "sass:selector";
a {b: selector.is-superselector("*|*", ".d")}

<===> namespace/universal/and_class/output.css
a {
  b: true;
}
