<===> red/input.scss
a {b: red(#abcdef)}

<===> red/output.css
a {
  b: 171;
}

<===>
================================================================================
<===> green/input.scss
a {b: green(#abcdef)}

<===> green/output.css
a {
  b: 205;
}

<===>
================================================================================
<===> blue/input.scss
a {b: blue(#abcdef)}

<===> blue/output.css
a {
  b: 239;
}

<===>
================================================================================
<===> hue/input.scss
a {b: hue(#abcdef)}

<===> hue/output.css
a {
  b: 210deg;
}

<===>
================================================================================
<===> saturation/input.scss
a {b: saturation(#abcdef)}

<===> saturation/output.css
a {
  b: 68%;
}

<===>
================================================================================
<===> lightness/input.scss
a {b: lightness(#abcdef)}

<===> lightness/output.css
a {
  b: 80.3921568627%;
}

<===>
================================================================================
<===> mix/input.scss
a {b: mix(#abcdef, #daddee)}

<===> mix/output.css
a {
  b: #c3d5ef;
}

<===>
================================================================================
<===> complement/input.scss
a {b: complement(#abcdef)}

<===> complement/output.css
a {
  b: #efcdab;
}

<===>
================================================================================
<===> darken/input.scss
a {b: darken(#abcdef, 10%)}

<===> darken/output.css
a {
  b: #80b4e7;
}

<===>
================================================================================
<===> desaturate/input.scss
a {b: desaturate(#abcdef, 10%)}

<===> desaturate/output.css
a {
  b: #b0cdea;
}

<===>
================================================================================
<===> fade-in/input.scss
a {b: fade-in(rgba(red, 0.5), 0.3)}

<===> fade-in/output.css
a {
  b: rgba(255, 0, 0, 0.8);
}


<===>
================================================================================
<===> opacify/input.scss
a {b: opacify(rgba(red, 0.5), 0.3)}

<===> opacify/output.css
a {
  b: rgba(255, 0, 0, 0.8);
}

<===>
================================================================================
<===> fade-out/input.scss
a {b: fade-out(rgba(red, 0.5), 0.3)}

<===> fade-out/output.css
a {
  b: rgba(255, 0, 0, 0.2);
}

<===>
================================================================================
<===> transparentize/input.scss
a {b: transparentize(rgba(red, 0.5), 0.3)}

<===> transparentize/output.css
a {
  b: rgba(255, 0, 0, 0.2);
}

<===>
================================================================================
<===> lighten/input.scss
a {b: lighten(#abcdef, 10%)}

<===> lighten/output.css
a {
  b: #d6e7f7;
}

<===>
================================================================================
<===> saturate/input.scss
a {b: saturate(#abcdef, 10%)}

<===> saturate/output.css
a {
  b: #a6cdf4;
}

<===>
================================================================================
<===> alpha/input.scss
a {b: alpha(#abcdef)}

<===> alpha/output.css
a {
  b: 1;
}

<===>
================================================================================
<===> scale/input.scss
a {b: scale-color(#abcdef, $red: 10%)}

<===> scale/output.css
a {
  b: #b3cdef;
}

<===>
================================================================================
<===> change/input.scss
a {b: change-color(#abcdef, $red: 10)}

<===> change/output.css
a {
  b: #0acdef;
}

<===>
================================================================================
<===> ie_hex_str/input.scss
a {b: ie-hex-str(#abcdef)}

<===> ie_hex_str/output.css
a {
  b: #FFABCDEF;
}

<===>
================================================================================
<===> grayscale/with_color/input.scss
a {b: grayscale(red)}

<===> grayscale/with_color/output.css
a {
  b: gray;
}

<===>
================================================================================
<===> grayscale/with_number/input.scss
// A number should produce a plain function string, for CSS filter functions.
a {b: grayscale(15%)}

<===> grayscale/with_number/output.css
a {
  b: grayscale(15%);
}

<===>
================================================================================
<===> grayscale/with_css_var/input.scss
a {b: grayscale(var(--c))}

<===> grayscale/with_css_var/output.css
a {
  b: grayscale(var(--c));
}

<===>
================================================================================
<===> grayscale/with_calc/input.scss
a {b: grayscale(calc(1 + 2))}

<===> grayscale/with_calc/output.css
a {
  b: grayscale(3);
}

<===>
================================================================================
<===> grayscale/with_unquoted_calc/input.scss
@use "sass:string";
a {b: grayscale(string.unquote('calc(1)'))}

<===> grayscale/with_unquoted_calc/output.css
a {
  b: grayscale(calc(1));
}

<===>
================================================================================
<===> invert/with_color/input.scss
a {b: invert(#abcdef)}

<===> invert/with_color/output.css
a {
  b: #543210;
}

<===>
================================================================================
<===> invert/with_number/input.scss
a {b: invert(10%)}

<===> invert/with_number/output.css
a {
  b: invert(10%);
}

<===>
================================================================================
<===> invert/with_css_var/input.scss
a {b: invert(var(--c))}

<===> invert/with_css_var/output.css
a {
  b: invert(var(--c));
}

<===>
================================================================================
<===> invert/with_calc/input.scss
a {b: invert(calc(1 + 2))}

<===> invert/with_calc/output.css
a {
  b: invert(3);
}

<===>
================================================================================
<===> invert/with_unquoted_calc/input.scss
@use "sass:string";
a {b: invert(string.unquote('calc(1)'))}

<===> invert/with_unquoted_calc/output.css
a {
  b: invert(calc(1));
}

<===>
================================================================================
<===> error/too_low/lighten/input.scss
a {b: lighten(red, -0.001)}

<===> error/too_low/lighten/error
Error: $amount: Expected -0.001 to be within 0 and 100.
  ,
1 | a {b: lighten(red, -0.001)}
  |       ^^^^^^^^^^^^^^^^^^^^
  '
  input.scss 1:7  root stylesheet

<===>
================================================================================
<===> error/too_low/darken/input.scss
a {b: darken(red, -0.001)}

<===> error/too_low/darken/error
Error: $amount: Expected -0.001 to be within 0 and 100.
  ,
1 | a {b: darken(red, -0.001)}
  |       ^^^^^^^^^^^^^^^^^^^
  '
  input.scss 1:7  root stylesheet

<===>
================================================================================
<===> error/too_low/saturate/input.scss
a {b: saturate(red, -0.001)}

<===> error/too_low/saturate/error
Error: $amount: Expected -0.001 to be within 0 and 100.
  ,
1 | a {b: saturate(red, -0.001)}
  |       ^^^^^^^^^^^^^^^^^^^^^
  '
  input.scss 1:7  root stylesheet

<===>
================================================================================
<===> error/too_low/desaturate/input.scss
a {b: desaturate(red, -0.001)}

<===> error/too_low/desaturate/error
Error: $amount: Expected -0.001 to be within 0 and 100.
  ,
1 | a {b: desaturate(red, -0.001)}
  |       ^^^^^^^^^^^^^^^^^^^^^^^
  '
  input.scss 1:7  root stylesheet

<===>
================================================================================
<===> error/too_low/fade_in/input.scss
a {b: fade-in(red, -0.001)}

<===> error/too_low/fade_in/error
Error: $amount: Expected -0.001 to be within 0 and 1.
  ,
1 | a {b: fade-in(red, -0.001)}
  |       ^^^^^^^^^^^^^^^^^^^^
  '
  input.scss 1:7  root stylesheet

<===>
================================================================================
<===> error/too_low/fade_out/input.scss
a {b: fade-out(red, -0.001)}

<===> error/too_low/fade_out/error
Error: $amount: Expected -0.001 to be within 0 and 1.
  ,
1 | a {b: fade-out(red, -0.001)}
  |       ^^^^^^^^^^^^^^^^^^^^^
  '
  input.scss 1:7  root stylesheet
