<===> README.md
This function is intended for debugging and as such is not required to have
totally consistent output across different implementations.

<===>
================================================================================
<===> none/input.scss
a {b: unit(1)}

<===> none/output.css
a {
  b: "";
}

<===>
================================================================================
<===> one_numerator/input.scss
a {b: unit(1px)}

<===> one_numerator/output.css
a {
  b: "px";
}

<===>
================================================================================
<===> multiple_numerators/input.scss
a {b: unit(1px * 1em * 1rad)}

<===> multiple_numerators/output.css
a {
  b: "px*em*rad";
}

<===> multiple_numerators/output-libsass.css
a {
  b: "em*px*rad";
}

<===>
================================================================================
<===> one_denominator/options.yml
:warning_todo:
  - sass/libsass#2887

<===> one_denominator/input.scss
a {b: unit(1/1px)}

<===> one_denominator/output.css
a {
  b: "px^-1";
}

<===> one_denominator/output-libsass.css
a {
  b: "/px";
}

<===> one_denominator/warning
DEPRECATION WARNING: Using / for division is deprecated and will be removed in Dart Sass 2.0.0.

Recommendation: math.div(1, 1px)

More info and automated migrator: https://sass-lang.com/d/slash-div

  ,
1 | a {b: unit(1/1px)}
  |            ^^^^^
  '
    input.scss 1:12  root stylesheet

<===>
================================================================================
<===> multiple_denominators/options.yml
:warning_todo:
  - sass/libsass#2887

<===> multiple_denominators/input.scss
a {b: unit(1 / 1px / 3em / 4rad)}

<===> multiple_denominators/output.css
a {
  b: "(px*em*rad)^-1";
}

<===> multiple_denominators/output-libsass.css
a {
  b: "/em*px*rad";
}

<===> multiple_denominators/warning
DEPRECATION WARNING: Using / for division is deprecated and will be removed in Dart Sass 2.0.0.

Recommendation: math.div(math.div(math.div(1, 1px), 3em), 4rad)

More info and automated migrator: https://sass-lang.com/d/slash-div

  ,
1 | a {b: unit(1 / 1px / 3em / 4rad)}
  |            ^^^^^^^^^^^^^^^^^^^^
  '
    input.scss 1:12  root stylesheet

<===>
================================================================================
<===> numerator_and_denominator/single/options.yml
:warning_todo:
  - sass/libsass#2887

<===> numerator_and_denominator/single/input.scss
a {b: unit(1px / 1em)}

<===> numerator_and_denominator/single/output.css
a {
  b: "px/em";
}

<===> numerator_and_denominator/single/warning
DEPRECATION WARNING: Using / for division is deprecated and will be removed in Dart Sass 2.0.0.

Recommendation: math.div(1px, 1em)

More info and automated migrator: https://sass-lang.com/d/slash-div

  ,
1 | a {b: unit(1px / 1em)}
  |            ^^^^^^^^^
  '
    input.scss 1:12  root stylesheet

<===>
================================================================================
<===> numerator_and_denominator/multiple/options.yml
:warning_todo:
  - sass/libsass#2887

<===> numerator_and_denominator/multiple/input.scss
a {b: unit(1px * 1em / 1rad / 1s)}

<===> numerator_and_denominator/multiple/output.css
a {
  b: "px*em/rad*s";
}

<===> numerator_and_denominator/multiple/output-libsass.css
a {
  b: "em*px/rad*s";
}

<===> numerator_and_denominator/multiple/warning
DEPRECATION WARNING: Using / for division outside of calc() is deprecated and will be removed in Dart Sass 2.0.0.

Recommendation: math.div(1px * 1em, 1rad) or calc(1px * 1em / 1rad)

More info and automated migrator: https://sass-lang.com/d/slash-div

  ,
1 | a {b: unit(1px * 1em / 1rad / 1s)}
  |            ^^^^^^^^^^^^^^^^
  '
    input.scss 1:12  root stylesheet

DEPRECATION WARNING: Using / for division outside of calc() is deprecated and will be removed in Dart Sass 2.0.0.

Recommendation: math.div(math.div(1px * 1em, 1rad), 1s) or calc(1px * 1em / 1rad / 1s)

More info and automated migrator: https://sass-lang.com/d/slash-div

  ,
1 | a {b: unit(1px * 1em / 1rad / 1s)}
  |            ^^^^^^^^^^^^^^^^^^^^^
  '
    input.scss 1:12  root stylesheet

<===>
================================================================================
<===> named/input.scss
a {b: unit($number: 1)}

<===> named/output.css
a {
  b: "";
}

<===>
================================================================================
<===> error/type/input.scss
a {b: unit(c)}

<===> error/type/error
Error: $number: c is not a number.
  ,
1 | a {b: unit(c)}
  |       ^^^^^^^
  '
  input.scss 1:7  root stylesheet

<===> error/type/error-libsass
Error: argument `$number` of `unit($number)` must be a number
        on line 1:7 of input.scss, in function `unit`
        from line 1:7 of input.scss
>> a {b: unit(c)}

   ------^

<===>
================================================================================
<===> error/too_few_args/input.scss
a {b: unit()}

<===> error/too_few_args/error
Error: Missing argument $number.
  ,--> input.scss
1 | a {b: unit()}
  |       ^^^^^^ invocation
  '
  ,--> sass:math
1 | @function unit($number) {
  |           ============= declaration
  '
  input.scss 1:7  root stylesheet

<===> error/too_few_args/error-libsass
Error: Function unit is missing argument $number.
        on line 1 of input.scss
>> a {b: unit()}

   ------^

<===>
================================================================================
<===> error/too_many_args/input.scss
a {b: unit(1, 2)}

<===> error/too_many_args/error
Error: Only 1 argument allowed, but 2 were passed.
  ,--> input.scss
1 | a {b: unit(1, 2)}
  |       ^^^^^^^^^^ invocation
  '
  ,--> sass:math
1 | @function unit($number) {
  |           ============= declaration
  '
  input.scss 1:7  root stylesheet

<===> error/too_many_args/error-libsass
Error: wrong number of arguments (2 for 1) for `unit'
        on line 1:7 of input.scss
>> a {b: unit(1, 2)}

   ------^
