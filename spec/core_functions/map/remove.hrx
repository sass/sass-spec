<===> not_found/empty/input.scss
@use "sass:map";
@use "sass:meta";
a {b: meta.inspect(map.remove((), 1))}

<===> not_found/empty/output.css
a {
  b: ();
}

<===>
================================================================================
<===> not_found/non_empty/input.scss
@use "sass:map";
@use "sass:meta";
a {b: meta.inspect(map.remove((c: d), d))}

<===> not_found/non_empty/output.css
a {
  b: (c: d);
}

<===>
================================================================================
<===> not_found/no_keys/input.scss
@use "sass:map";
@use "sass:meta";
a {b: meta.inspect(map.remove((c: d)))}

<===> not_found/no_keys/output.css
a {
  b: (c: d);
}

<===>
================================================================================
<===> not_found/multiple/input.scss
@use "sass:map";
@use "sass:meta";
a {b: meta.inspect(map.remove((c: d), e, f, g))}

<===> not_found/multiple/output.css
a {
  b: (c: d);
}

<===>
================================================================================
<===> found/single/input.scss
@use "sass:map";
@use "sass:meta";
a {b: meta.inspect(map.remove((c: d), c))}

<===> found/single/output.css
a {
  b: ();
}

<===>
================================================================================
<===> found/first/input.scss
@use "sass:map";
@use "sass:meta";
a {b: meta.inspect(map.remove((1: 2, 3: 4, 5: 6), 1))}

<===> found/first/output.css
a {
  b: (3: 4, 5: 6);
}

<===>
================================================================================
<===> found/middle/input.scss
@use "sass:map";
@use "sass:meta";
a {b: meta.inspect(map.remove((1: 2, 3: 4, 5: 6), 3))}

<===> found/middle/output.css
a {
  b: (1: 2, 5: 6);
}

<===>
================================================================================
<===> found/last/input.scss
@use "sass:map";
@use "sass:meta";
a {b: meta.inspect(map.remove((1: 2, 3: 4, 5: 6), 5))}

<===> found/last/output.css
a {
  b: (1: 2, 3: 4);
}

<===>
================================================================================
<===> found/multiple/all/input.scss
@use "sass:map";
@use "sass:meta";
a {b: meta.inspect(map.remove((1: 2, 3: 4, 5: 6, 7: 8, 9: 10), 1, 5, 9))}

<===> found/multiple/all/output.css
a {
  b: (3: 4, 7: 8);
}

<===>
================================================================================
<===> found/multiple/some/input.scss
@use "sass:map";
@use "sass:meta";
a {b: meta.inspect(map.remove((1: 2, 3: 4, 5: 6, 7: 8), 1, 5, 9))}

<===> found/multiple/some/output.css
a {
  b: (3: 4, 7: 8);
}

<===>
================================================================================
<===> named/input.scss
@use "sass:map";
@use "sass:meta";
a {b: meta.inspect(map.remove($map: (c: d), $key: c))}

<===> named/output.css
a {
  b: ();
}

<===>
================================================================================
<===> error/wrong_name/input.scss
@use "sass:map";
a {b: map.map-remove((c: d), c)}

<===> error/wrong_name/error
Error: Undefined function.
  ,
2 | a {b: map.map-remove((c: d), c)}
  |       ^^^^^^^^^^^^^^^^^^^^^^^^^
  '
  input.scss 2:7  root stylesheet

<===>
================================================================================
<===> error/type/map/input.scss
@use "sass:map";
a {b: map.remove(1)}

<===> error/type/map/error
Error: $map: 1 is not a map.
  ,
2 | a {b: map.remove(1)}
  |       ^^^^^^^^^^^^^
  '
  input.scss 2:7  root stylesheet

<===>
================================================================================
<===> error/too_few_args/input.scss
@use "sass:map";
a {b: map.remove()}

<===> error/too_few_args/error
Error: Missing argument $map.
  ,--> input.scss
2 | a {b: map.remove()}
  |       ^^^^^^^^^^^^ invocation
  '
  ,
1 | @function remove($map) {
  |           ============ declaration
  '
  input.scss 2:7  root stylesheet

<===>
================================================================================
<===> error/positional_and_named/input.scss
@use "sass:map";
a {b: map.remove((c: d, e: f), c, $key: e)}

<===> error/positional_and_named/error
Error: Argument $key was passed both by position and by name.
  ,
2 | a {b: map.remove((c: d, e: f), c, $key: e)}
  |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  '
  input.scss 2:7  root stylesheet
