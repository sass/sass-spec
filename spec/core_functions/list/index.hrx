<===> found/single/input.scss
@use "sass:list";
a {b: list.index([c], c)}

<===> found/single/output.css
a {
  b: 1;
}

<===>
================================================================================
<===> found/first/input.scss
@use "sass:list";
a {b: list.index(a b c, a)}

<===> found/first/output.css
a {
  b: 1;
}

<===>
================================================================================
<===> found/last/input.scss
@use "sass:list";
a {b: list.index(a b c, c)}

<===> found/last/output.css
a {
  b: 3;
}

<===>
================================================================================
<===> found/sass_equality/input.scss
@use "sass:list";
a {b: list.index(1px 1in 1cm, 96px)}

<===> found/sass_equality/output.css
a {
  b: 2;
}

<===>
================================================================================
<===> found/multiple/input.scss
@use "sass:list";
a {b: list.index(a b c a b c, b)}

<===> found/multiple/output.css
a {
  b: 2;
}

<===>
================================================================================
<===> found/map/input.scss
@use "sass:list";
a {b: list.index((c: d, e: f, g: h), e f)}

<===> found/map/output.css
a {
  b: 2;
}

<===>
================================================================================
<===> found/non_list/input.scss
@use "sass:list";
a {b: list.index(c, c)}

<===> found/non_list/output.css
a {
  b: 1;
}

<===>
================================================================================
<===> not_found/empty/input.scss
@use "sass:list";
@use "sass:meta";
a {b: meta.inspect(list.index((), c))}

<===> not_found/empty/output.css
a {
  b: null;
}

<===>
================================================================================
<===> not_found/non_empty/input.scss
@use "sass:list";
@use "sass:meta";
a {b: meta.inspect(list.index(c d e, f))}

<===> not_found/non_empty/output.css
a {
  b: null;
}

<===>
================================================================================
<===> not_found/map/empty/input.scss
@use "sass:list";
@use "sass:meta";
@use "core_functions/list/utils";
a {b: meta.inspect(list.index(utils.$empty-map, e))}

<===> not_found/map/empty/output.css
a {
  b: null;
}

<===>
================================================================================
<===> not_found/map/non_empty/input.scss
@use "sass:list";
@use "sass:meta";
a {b: meta.inspect(list.index((c: d, e: f, g: h), e))}

<===> not_found/map/non_empty/output.css
a {
  b: null;
}

<===>
================================================================================
<===> not_found/non_list/input.scss
@use "sass:list";
@use "sass:meta";
a {b: meta.inspect(list.index(c, d))}

<===> not_found/non_list/output.css
a {
  b: null;
}

<===>
================================================================================
<===> named/input.scss
@use "sass:list";
a {b: list.index($list: c d e, $value: d)}

<===> named/output.css
a {
  b: 2;
}

<===>
================================================================================
<===> error/too_few_args/input.scss
@use "sass:list";
a {b: list.index(c d e)}

<===> error/too_few_args/error
Error: Missing argument $value.
  ,--> input.scss
2 | a {b: list.index(c d e)}
  |       ^^^^^^^^^^^^^^^^^ invocation
  '
  ,--> sass:list
1 | @function index($list, $value) {
  |           ==================== declaration
  '
  input.scss 2:7  root stylesheet

<===>
================================================================================
<===> error/too_many_args/input.scss
@use "sass:list";
a {b: list.index(c d e, d, e)}

<===> error/too_many_args/error
Error: Only 2 arguments allowed, but 3 were passed.
  ,--> input.scss
2 | a {b: list.index(c d e, d, e)}
  |       ^^^^^^^^^^^^^^^^^^^^^^^ invocation
  '
  ,--> sass:list
1 | @function index($list, $value) {
  |           ==================== declaration
  '
  input.scss 2:7  root stylesheet
