<===> false/top_level/input.scss
@use "sass:meta";
@mixin a {
  b {c: meta.content-exists()}
}
@include a;

<===> false/top_level/output.css
b {
  c: false;
}

<===>
================================================================================
<===> false/through_content/input.scss
@use "sass:meta";
@mixin call-content {
  @content;
}

@mixin print-content-exists {
  a {b: meta.content-exists()}
}

@include call-content {
  @include print-content-exists;
}

<===> false/through_content/output.css
a {
  b: false;
}

<===>
================================================================================
<===> true/empty/input.scss
@use "sass:meta";
@mixin a {
  b {c: meta.content-exists()}
  @content;
}
@include a {}

<===> true/empty/output.css
b {
  c: true;
}

<===>
================================================================================
<===> true/non_empty/input.scss
@use "sass:meta";
@mixin a {
  b {c: meta.content-exists()}
  @content;
}
@include a {
  d {e: f}
}

<===> true/non_empty/output.css
b {
  c: true;
}

d {
  e: f;
}

<===>
================================================================================
<===> controls/true/input.scss
@use "sass:meta";
// Regression test for sass/libsass#2842
@mixin test-content-exists() {
  @if meta.content-exists() {
    @content;
  }
  @else {
    content-exists: false;
  }
}

a {
  @include test-content-exists() {
    content: present;
  }
}

<===> controls/true/output.css
a {
  content: present;
}

<===>
================================================================================
<===> controls/false/input.scss
@use "sass:meta";
// Regression test for sass/libsass#2842
@mixin test-content-exists() {
  @if meta.content-exists() {
    @content;
  }
  @else {
    content-exists: false;
  }
}

a {
  @include test-content-exists();
}

<===> controls/false/output.css
a {
  content-exists: false;
}

<===>
================================================================================
<===> error/too_many_args/input.scss
@use "sass:meta";
@mixin a {
  b {c: meta.content-exists(1)}
}
@include a;

<===> error/too_many_args/error
Error: Only 0 arguments allowed, but 1 was passed.
  ,--> input.scss
3 |   b {c: meta.content-exists(1)}
  |         ^^^^^^^^^^^^^^^^^^^^^^ invocation
  '
  ,--> sass:meta
1 | @function content-exists() {
  |           ================ declaration
  '
  input.scss 3:9  a()
  input.scss 5:1  root stylesheet

<===>
================================================================================
<===> error/outside_mixin/input.scss
@use "sass:meta";
a {b: meta.content-exists()}

<===> error/outside_mixin/error
Error: content-exists() may only be called within a mixin.
  ,
2 | a {b: meta.content-exists()}
  |       ^^^^^^^^^^^^^^^^^^^^^
  '
  input.scss 2:7  root stylesheet

<===>
================================================================================
<===> error/in_content/input.scss
@use "sass:meta";
@mixin call-content {
  @content;
}

@include call-content {
  a {b: meta.content-exists()}
}

<===> error/in_content/error
Error: content-exists() may only be called within a mixin.
  ,
7 |   a {b: meta.content-exists()}
  |         ^^^^^^^^^^^^^^^^^^^^^
  '
  input.scss 7:9  @content
  input.scss 3:3  call-content()
  input.scss 6:1  root stylesheet

<===>
================================================================================
<===> error/in_function_called_by_mixin/input.scss
@use "sass:meta";
@function call-content-exists() {
  @return meta.content-exists();
}

@mixin call-function {
  a {b: call-content-exists()};
}

@include call-function;

<===> error/in_function_called_by_mixin/error
Error: content-exists() may only be called within a mixin.
  ,
3 |   @return meta.content-exists();
  |           ^^^^^^^^^^^^^^^^^^^^^
  '
  input.scss 3:11  call-content-exists()
  input.scss 7:9   call-function()
  input.scss 10:1  root stylesheet
