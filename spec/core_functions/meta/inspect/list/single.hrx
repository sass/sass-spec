<===> space/input.scss
@use "sass:list";
@use "sass:meta";
$result: meta.inspect(list.append((), 1, space));
a {
  value: $result;
  type: meta.type-of($result);
}

<===> space/output.css
a {
  value: 1;
  type: string;
}

<===>
================================================================================
<===> comma/input.scss
@use "sass:meta";
$result: meta.inspect((1,));
a {
  value: $result;
  type: meta.type-of($result);
}

<===> comma/output.css
a {
  value: (1,);
  type: string;
}

<===>
================================================================================
<===> slash/input.scss
@use "sass:list";
@use "sass:meta";
$result: meta.inspect(list.append((), 1, slash));
a {
  value: $result;
  type: meta.type-of($result);
}

<===> slash/output.css
a {
  value: (1/);
  type: string;
}

<===>
================================================================================
<===> bracketed/undecided/input.scss
@use "sass:meta";
$result: meta.inspect([1]);
a {
  value: $result;
  type: meta.type-of($result);
}

<===> bracketed/undecided/output.css
a {
  value: [1];
  type: string;
}

<===>
================================================================================
<===> bracketed/comma/input.scss
@use "sass:meta";
$result: meta.inspect([1,]);
a {
  value: $result;
  type: meta.type-of($result);
}

<===> bracketed/comma/output.css
a {
  value: [1,];
  type: string;
}
