<===> options.yml
---
:todo:
- sass/libsass#2807

<===>
================================================================================
<===> use_as_function/input.scss
@use "sass:meta";

@mixin a {}
$a: meta.get-mixin("a");

a {b: meta.apply($a)}

<===> use_as_function/error
Error: Undefined function.
  ,
6 | a {b: meta.apply($a)}
  |       ^^^^^^^^^^^^^^
  '
  input.scss 6:7  root stylesheet

<===>
================================================================================
<===> no_args/input.scss
@use "sass:meta";

a {@include meta.apply()}

<===> no_args/error
Error: Missing argument $mixin.
  ,--> input.scss
3 | a {@include meta.apply()}
  |    ^^^^^^^^^^^^^^^^^^^^^ invocation
  '
  ,--> sass:meta
1 | @mixin apply($mixin, $args...) {
  |        ======================= declaration
  '
  input.scss 3:4  root stylesheet

<===>
================================================================================
<===> wrong_arg_type/input.scss
@use "sass:meta";

a {@include meta.apply(2px)}

<===> wrong_arg_type/error
Error: $mixin: 2px is not a mixin reference.
  ,
3 | a {@include meta.apply(2px)}
  |    ^^^^^^^^^^^^^^^^^^^^^^^^
  '
  input.scss 3:4  root stylesheet

<===>
================================================================================
<===> too_many_args/input.scss
@use "sass:meta";

@mixin a {}
$a: meta.get-mixin("a");

a {@include meta.apply($a, 2px)}

<===> too_many_args/error
Error: Only 0 arguments allowed, but 1 was passed.
    ,
3   | @mixin a {}
    |        = declaration
... |
6   | a {@include meta.apply($a, 2px)}
    |    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invocation
    '
  input.scss 6:4  a()
  input.scss 6:4  root stylesheet

<===>
================================================================================
<===> missing_mixin_args/input.scss
@use "sass:meta";

@mixin a($a) {}
$a: meta.get-mixin("a");

a {@include meta.apply($a)}

<===> missing_mixin_args/error
Error: Missing argument $a.
    ,
3   | @mixin a($a) {}
    |        ===== declaration
... |
6   | a {@include meta.apply($a)}
    |    ^^^^^^^^^^^^^^^^^^^^^^^ invocation
    '
  input.scss 6:4  a()
  input.scss 6:4  root stylesheet

<===>
================================================================================
<===> too_many_args_mixin_accepts_args/input.scss
@use "sass:meta";

@mixin a($a) {}
$a: meta.get-mixin("a");

a {@include meta.apply($a, 2px, 3px)}

<===> too_many_args_mixin_accepts_args/error
Error: Only 1 argument allowed, but 2 were passed.
    ,
3   | @mixin a($a) {}
    |        ===== declaration
... |
6   | a {@include meta.apply($a, 2px, 3px)}
    |    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invocation
    '
  input.scss 6:4  a()
  input.scss 6:4  root stylesheet
