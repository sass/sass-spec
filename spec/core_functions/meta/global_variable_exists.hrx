<===> same_module/global/input.scss
@use "sass:meta";
$global-variable: null;

a {b: meta.global-variable-exists(global-variable)}

<===> same_module/global/output.css
a {
  b: true;
}

<===>
================================================================================
<===> same_module/local/input.scss
@use "sass:meta";
a {
  $local-variable: null;
  b: meta.global-variable-exists(local-variable);
}

<===> same_module/local/output.css
a {
  b: false;
}

<===>
================================================================================
<===> same_module/through_import/input.scss
@use "sass:meta";
@import "other";
a {b: meta.global-variable-exists(global-variable)}

<===> same_module/through_import/other.scss
$global-variable: null;

<===> same_module/through_import/output.css
a {
  b: true;
}

<===> same_module/through_import/warning
DEPRECATION WARNING: Sass @import rules are deprecated and will be removed in Dart Sass 3.0.0.

More info and automated migrator: https://sass-lang.com/d/import

  ,
2 | @import "other";
  |         ^^^^^^^
  '
    input.scss 2:9  root stylesheet

<===>
================================================================================
<===> same_module/non_existent/input.scss
@use "sass:meta";
a {
  b: meta.global-variable-exists(non-existent);
}

<===> same_module/non_existent/output.css
a {
  b: false;
}

<===>
================================================================================
<===> dash_insensitive/dash_to_underscore/input.scss
@use "sass:meta";
$a_b: null;

c {d: meta.global-variable-exists(a-b)}

<===> dash_insensitive/dash_to_underscore/output.css
c {
  d: true;
}

<===>
================================================================================
<===> dash_insensitive/underscore_to_dash/input.scss
@use "sass:meta";
$a-b: null;

c {d: meta.global-variable-exists(a_b)}

<===> dash_insensitive/underscore_to_dash/output.css
c {
  d: true;
}

<===>
================================================================================
<===> different_module/undefined/input.scss
@use "sass:meta";
@use "sass:color";
a {b: meta.global-variable-exists("c", "color")}

<===> different_module/undefined/output.css
a {
  b: false;
}

<===>
================================================================================
<===> different_module/defined/input.scss
@use "sass:meta";
@use "other";
a {b: meta.global-variable-exists("c", "other")}

<===> different_module/defined/_other.scss
$c: null;

<===> different_module/defined/output.css
a {
  b: true;
}

<===>
================================================================================
<===> different_module/chosen_prefix/input.scss
@use "sass:meta";
@use "other" as a;
b {c: meta.global-variable-exists("d", "a")}

<===> different_module/chosen_prefix/_other.scss
$d: null;

<===> different_module/chosen_prefix/output.css
b {
  c: true;
}

<===>
================================================================================
<===> different_module/through_use/input.scss
@use "sass:meta";
@use "other" as *;
a {b: meta.global-variable-exists(global-variable)}

<===> different_module/through_use/other.scss
$global-variable: null;

<===> different_module/through_use/output.css
a {
  b: true;
}

<===>
================================================================================
<===> different_module/through_forward/bare/input.scss
@use "sass:meta";
@use "midstream" as *;
a {b: meta.variable-exists(c)}

<===> different_module/through_forward/bare/_midstream.scss
@forward "upstream";

<===> different_module/through_forward/bare/_upstream.scss
$c: null;

<===> different_module/through_forward/bare/output.css
a {
  b: true;
}

<===>
================================================================================
<===> different_module/through_forward/as/input.scss
@use "sass:meta";
@use "midstream" as *;
a {
  with-prefix: meta.global-variable-exists(b-c);
  without-prefix: meta.global-variable-exists(c);
}

<===> different_module/through_forward/as/_midstream.scss
@forward "upstream" as b-*;

<===> different_module/through_forward/as/_upstream.scss
$c: null;

<===> different_module/through_forward/as/output.css
a {
  with-prefix: true;
  without-prefix: false;
}

<===>
================================================================================
<===> different_module/through_forward/show/input.scss
@use "sass:meta";
@use "midstream" as *;
a {
  shown: meta.global-variable-exists(b);
  not-shown: meta.global-variable-exists(c);
}

<===> different_module/through_forward/show/_midstream.scss
@forward "upstream" show $b;

<===> different_module/through_forward/show/_upstream.scss
$b: null;
$c: null;

<===> different_module/through_forward/show/output.css
a {
  shown: true;
  not-shown: false;
}

<===>
================================================================================
<===> different_module/through_forward/hide/input.scss
@use "sass:meta";
@use "midstream" as *;
a {
  hidden: meta.global-variable-exists(b);
  not-hidden: meta.global-variable-exists(c);
}

<===> different_module/through_forward/hide/_midstream.scss
@forward "upstream" hide $b;

<===> different_module/through_forward/hide/_upstream.scss
$b: null;
$c: null;

<===> different_module/through_forward/hide/output.css
a {
  hidden: false;
  not-hidden: true;
}

<===>
================================================================================
<===> named/input.scss
@use "sass:meta";
@use "other";
a {b: meta.global-variable-exists($name: "c", $module: "other")}

<===> named/_other.scss
$c: null;

<===> named/output.css
a {
  b: true;
}

<===>
================================================================================
<===> error/argument/type/name/input.scss
@use "sass:meta";
a {b: meta.global-variable-exists(12px)}

<===> error/argument/type/name/error
Error: $name: 12px is not a string.
  ,
2 | a {b: meta.global-variable-exists(12px)}
  |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  '
  input.scss 2:7  root stylesheet

<===>
================================================================================
<===> error/argument/type/module/input.scss
@use "sass:meta";
a {b: meta.global-variable-exists("c", 1)}

<===> error/argument/type/module/error
Error: $module: 1 is not a string.
  ,
2 | a {b: meta.global-variable-exists("c", 1)}
  |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  '
  input.scss 2:7  root stylesheet

<===>
================================================================================
<===> error/argument/too_few/input.scss
@use "sass:meta";
a {b: meta.global-variable-exists()}

<===> error/argument/too_few/error
Error: Missing argument $name.
  ,--> input.scss
2 | a {b: meta.global-variable-exists()}
  |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invocation
  '
  ,--> sass:meta
1 | @function global-variable-exists($name, $module: null) {
  |           ============================================ declaration
  '
  input.scss 2:7  root stylesheet

<===>
================================================================================
<===> error/argument/too_many/input.scss
@use "sass:meta";
a {b: meta.global-variable-exists(c, d, e)}

<===> error/argument/too_many/error
Error: Only 2 arguments allowed, but 3 were passed.
  ,--> input.scss
2 | a {b: meta.global-variable-exists(c, d, e)}
  |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invocation
  '
  ,--> sass:meta
1 | @function global-variable-exists($name, $module: null) {
  |           ============================================ declaration
  '
  input.scss 2:7  root stylesheet

<===>
================================================================================
<===> error/conflict/input.scss
@use "sass:meta";
@use "other1" as *;
@use "other2" as *;

a {b: meta.global-variable-exists(member)}

<===> error/conflict/other1.scss
$member: from other1;

<===> error/conflict/other2.scss
$member: from other2;

<===> error/conflict/error
Error: This variable is available from multiple global modules.
    ,
2   | @use "other1" as *;
    | ================== includes variable
3   | @use "other2" as *;
    | ================== includes variable
... |
5   | a {b: meta.global-variable-exists(member)}
    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ variable use
    '
  input.scss 5:7  root stylesheet

<===>
================================================================================
<===> error/module/non_existent/input.scss
@use "sass:meta";
a {b: meta.global-variable-exists("c", "d")}

<===> error/module/non_existent/error
Error: There is no module with the namespace "d".
  ,
2 | a {b: meta.global-variable-exists("c", "d")}
  |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  '
  input.scss 2:7  root stylesheet

<===>
================================================================================
<===> error/module/built_in_but_not_loaded/input.scss
@use "sass:meta";
a {b: meta.global-variable-exists("c", "color")}

<===> error/module/built_in_but_not_loaded/error
Error: There is no module with the namespace "color".
  ,
2 | a {b: meta.global-variable-exists("c", "color")}
  |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  '
  input.scss 2:7  root stylesheet

<===>
================================================================================
<===> error/module/dash_sensitive/input.scss
@use "sass:meta";
@use "sass:color" as a-b;
c {d: meta.global-variable-exists("c", $module: "a_b")}

<===> error/module/dash_sensitive/error
Error: There is no module with the namespace "a_b".
  ,
3 | c {d: meta.global-variable-exists("c", $module: "a_b")}
  |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  '
  input.scss 3:7  root stylesheet
