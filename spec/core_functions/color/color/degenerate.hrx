<===> arg1/positive_infinity/input.scss
a {b: color(srgb calc(infinity) 0 0)}

<===> arg1/positive_infinity/output.css
a {
  b: color(srgb calc(infinity) 0 0);
}

<===>
================================================================================
<===> arg1/negative_infinity/input.scss
a {b: color(srgb calc(-infinity) 0 0)}

<===> arg1/negative_infinity/output.css
a {
  b: color(srgb calc(-infinity) 0 0);
}

<===>
================================================================================
<===> arg1/nan/input.scss
a {b: color(srgb calc(NaN) 0 0)}

<===> arg1/nan/output.css
a {
  b: color(srgb calc(NaN) 0 0);
}

<===>
================================================================================
<===> before_alpha/positive_infinity/input.scss
a {b: color(srgb 0 0 calc(infinity) / 0.5)}

<===> before_alpha/positive_infinity/output.css
a {
  b: color(srgb 0 0 calc(infinity) / 0.5);
}

<===>
================================================================================
<===> before_alpha/negative_infinity/input.scss
a {b: color(srgb 0 0 calc(-infinity) / 0.5)}

<===> before_alpha/negative_infinity/output.css
a {
  b: color(srgb 0 0 calc(-infinity) / 0.5);
}

<===>
================================================================================
<===> before_alpha/nan/input.scss
a {b: color(srgb 0 0 calc(NaN) / 0.5)}

<===> before_alpha/nan/output.css
a {
  b: color(srgb 0 0 calc(NaN) / 0.5);
}

<===>
================================================================================
<===> alpha/positive_infinity/input.scss
a {b: color(srgb 0 0 0 / calc(infinity))}

<===> alpha/positive_infinity/output.css
a {
  b: color(srgb 0 0 0);
}

<===>
================================================================================
<===> alpha/negative_infinity/input.scss
a {b: color(srgb 0 0 0 / calc(-infinity))}

<===> alpha/negative_infinity/output.css
a {
  b: color(srgb 0 0 0 / 0);
}

<===>
================================================================================
<===> alpha/nan/input.scss
a {b: color(srgb 0 0 0 / calc(NaN))}

<===> alpha/nan/output.css
a {
  b: color(srgb 0 0 0 / 0);
}
