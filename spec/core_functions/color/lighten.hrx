<===> max/input.scss
@use "sass:color";
a {b: color.adjust(red, $lightness: 100%)}

<===> max/output.css
a {
  b: white;
}

<===>
================================================================================
<===> max_remaining/input.scss
@use "sass:color";
a {b: color.adjust(red, $lightness: 50%)}

<===> max_remaining/output.css
a {
  b: white;
}

<===>
================================================================================
<===> min/input.scss
@use "sass:color";
a {b: color.adjust(red, $lightness: 0%)}

<===> min/output.css
a {
  b: red;
}

<===>
================================================================================
<===> middle/input.scss
@use "sass:color";
a {b: color.adjust(red, $lightness: 14%)}

<===> middle/output.css
a {
  b: #ff4747;
}

<===>
================================================================================
<===> fraction/input.scss
@use "sass:color";
a {b: color.adjust(red, $lightness: 0.5%)}

<===> fraction/output.css
a {
  b: #ff0303;
}

<===>
================================================================================
<===> alpha/input.scss
@use "sass:color";
a {b: color.adjust(rgba(red, 0.4), $lightness: 100%)}

<===> alpha/output.css
a {
  b: rgba(255, 255, 255, 0.4);
}

<===>
================================================================================
<===> named/input.scss
@use "sass:color";
a {b: color.adjust($color: red, $lightness: 14%)}

<===> named/output.css
a {
  b: #ff4747;
}

<===>
================================================================================
<===> error/too_few_args/input.scss
a {b: lighten(red)}

<===> error/too_few_args/error
Error: Missing argument $amount.
  ,--> input.scss
1 | a {b: lighten(red)}
  |       ^^^^^^^^^^^^ invocation
  '
  ,--> sass:color
1 | @function lighten($color, $amount) {
  |           ======================== declaration
  '
  input.scss 1:7  root stylesheet

<===>
================================================================================
<===> error/too_many_args/input.scss
a {b: lighten(red, 1%, 2)}

<===> error/too_many_args/error
Error: Only 2 arguments allowed, but 3 were passed.
  ,--> input.scss
1 | a {b: lighten(red, 1%, 2)}
  |       ^^^^^^^^^^^^^^^^^^^ invocation
  '
  ,--> sass:color
1 | @function lighten($color, $amount) {
  |           ======================== declaration
  '
  input.scss 1:7  root stylesheet

<===>
================================================================================
<===> error/type/color/input.scss
@use "sass:color";
a {b: color.adjust(1, $lightness: 2)}

<===> error/type/color/error
Error: $color: 1 is not a color.
  ,
2 | a {b: color.adjust(1, $lightness: 2)}
  |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  '
  input.scss 2:7  root stylesheet

<===>
================================================================================
<===> error/type/lightness/input.scss
@use "sass:color";
a {b: color.adjust(red, $lightness: blue)}

<===> error/type/lightness/error
Error: $lightness: blue is not a number.
  ,
2 | a {b: color.adjust(red, $lightness: blue)}
  |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  '
  input.scss 2:7  root stylesheet

<===>
================================================================================
<===> error/bounds/too_high/input.scss
@use "sass:color";
a {b: color.adjust(red, $lightness: 100.001%)}

<===> error/bounds/too_high/error
Error: $lightness: Expected 100.001% to be within -100% and 100%.
  ,
2 | a {b: color.adjust(red, $lightness: 100.001%)}
  |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  '
  input.scss 2:7  root stylesheet
