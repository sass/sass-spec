<===> too_few_args/input.scss
@use 'sass:color';
a {b: color.invert()}

<===> too_few_args/error
Error: Missing argument $color.
  ,--> input.scss
2 | a {b: color.invert()}
  |       ^^^^^^^^^^^^^^ invocation
  '
  ,--> sass:color
1 | @function invert($color, $weight: 100%, $space: null) {
  |           =========================================== declaration
  '
  input.scss 2:7  root stylesheet

<===>
================================================================================
<===> too_many_args/input.scss
@use 'sass:color';
a {b: color.invert(turquoise, 0%, hsl, 1)}

<===> too_many_args/error
Error: Only 3 arguments allowed, but 4 were passed.
  ,--> input.scss
2 | a {b: color.invert(turquoise, 0%, hsl, 1)}
  |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invocation
  '
  ,--> sass:color
1 | @function invert($color, $weight: 100%, $space: null) {
  |           =========================================== declaration
  '
  input.scss 2:7  root stylesheet

<===>
================================================================================
<===> global/number_with_weight/input.scss
a {b: invert(1, 50%)}

<===> global/number_with_weight/error
Error: Only one argument may be passed to the plain-CSS invert() function.
  ,
1 | a {b: invert(1, 50%)}
  |       ^^^^^^^^^^^^^^
  '
  input.scss 1:7  root stylesheet

<===>
================================================================================
<===> global/type/color/input.scss
a {b: invert(c)}

<===> global/type/color/error
Error: $color: c is not a color.
  ,
1 | a {b: invert(c)}
  |       ^^^^^^^^^
  '
  input.scss 1:7  root stylesheet

<===>
================================================================================
<===> type/color/input.scss
@use 'sass:color';
a {b: color.invert(c)}

<===> type/color/error
Error: $color: c is not a color.
  ,
2 | a {b: color.invert(c)}
  |       ^^^^^^^^^^^^^^^
  '
  input.scss 2:7  root stylesheet

<===>
================================================================================
<===> type/weight/input.scss
@use 'sass:color';
a {b: color.invert(red, c)}

<===> type/weight/error
Error: $weight: c is not a number.
  ,
2 | a {b: color.invert(red, c)}
  |       ^^^^^^^^^^^^^^^^^^^^
  '
  input.scss 2:7  root stylesheet

<===>
================================================================================
<===> type/space/input.scss
@use 'sass:color';
a {b: color.invert(red, 10%, 1)}

<===> type/space/error
Error: $space: 1 is not a string.
  ,
2 | a {b: color.invert(red, 10%, 1)}
  |       ^^^^^^^^^^^^^^^^^^^^^^^^^
  '
  input.scss 2:7  root stylesheet

<===>
================================================================================
<===> space/quoted/input.scss
@use 'sass:color';
a {b: color.invert(red, 10%, "lch")}

<===> space/quoted/error
Error: $space: Expected "lch" to be an unquoted string.
  ,
2 | a {b: color.invert(red, 10%, "lch")}
  |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  '
  input.scss 2:7  root stylesheet

<===>
================================================================================
<===> space/unknown/input.scss
@use 'sass:color';
a {b: color.invert(red, 10%, c)}

<===> space/unknown/error
Error: $space: Unknown color space "c".
  ,
2 | a {b: color.invert(red, 10%, c)}
  |       ^^^^^^^^^^^^^^^^^^^^^^^^^
  '
  input.scss 2:7  root stylesheet

<===>
================================================================================
<===> bounds/too_low/input.scss
@use 'sass:color';
a {b: color.invert(red, -0.001%)}

<===> bounds/too_low/error
Error: $weight: Expected -0.001% to be within 0% and 100%.
  ,
2 | a {b: color.invert(red, -0.001%)}
  |       ^^^^^^^^^^^^^^^^^^^^^^^^^^
  '
  input.scss 2:7  root stylesheet

<===>
================================================================================
<===> bounds/too_high/input.scss
@use 'sass:color';
a {b: color.invert(red, 100.001%)}

<===> bounds/too_high/error
Error: $weight: Expected 100.001% to be within 0% and 100%.
  ,
2 | a {b: color.invert(red, 100.001%)}
  |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  '
  input.scss 2:7  root stylesheet
