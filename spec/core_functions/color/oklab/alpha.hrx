<===> transparent/input.scss
@use 'core_functions/color/oklab/utils';
@include utils.inspect(oklab(0 255 127 / 0));

<===> transparent/output.css
a {
  value: oklab(0% 255 127 / 0);
  channels: 0% 255 127 / 0;
}

<===>
================================================================================
<===> opaque/input.scss
@use 'core_functions/color/oklab/utils';
@include utils.inspect(oklab(1% 2 3 / 1));

<===> opaque/output.css
a {
  value: oklab(1% 2 3);
  channels: 1% 2 3 / 1;
}

<===>
================================================================================
<===> partial/input.scss
@use 'core_functions/color/oklab/utils';
@include utils.inspect(oklab(1% 2 3 / 0.4));

<===> partial/output.css
a {
  value: oklab(1% 2 3 / 0.4);
  channels: 1% 2 3 / 0.4;
}

<===>
================================================================================
<===> percent/input.scss
@use 'core_functions/color/oklab/utils';
@include utils.inspect(oklab(1% 2 3 / 40%));

<===> percent/output.css
a {
  value: oklab(1% 2 3 / 0.4);
  channels: 1% 2 3 / 0.4;
}

<===>
================================================================================
<===> named/input.scss
@use 'core_functions/color/oklab/utils';
@include utils.inspect(oklab($channels: 1% 2 3 / 0.4));

<===> named/output.css
a {
  value: oklab(1% 2 3 / 0.4);
  channels: 1% 2 3 / 0.4;
}

<===>
================================================================================
<===> slash_list/input.scss
@use "sass:list";
@use 'core_functions/color/oklab/utils';
@include utils.inspect(oklab(list.slash(1% 2 3, 0.4)));

<===> slash_list/output.css
a {
  value: oklab(1% 2 3 / 0.4);
  channels: 1% 2 3 / 0.4;
}

<===>
================================================================================
<===> none/slash/b/input.scss
@use 'core_functions/color/oklab/utils';
@include utils.inspect(oklab(1% 2 none / 0.4));

<===> none/slash/b/output.css
a {
  value: oklab(1% 2 none / 0.4);
  channels: 1% 2 none / 0.4;
}

<===>
================================================================================
<===> none/slash/alpha/input.scss
@use 'core_functions/color/oklab/utils';
@include utils.inspect(oklab(1% 2 3 / none));

<===> none/slash/alpha/output.css
a {
  value: oklab(1% 2 3 / none);
  channels: 1% 2 3 / none;
}

<===>
================================================================================
<===> none/slash_list/b/input.scss
@use 'sass:list';
@use 'core_functions/color/oklab/utils';
@include utils.inspect(oklab(list.slash(1% 2 none, 0.4)));

<===> none/slash_list/b/output.css
a {
  value: oklab(1% 2 none / 0.4);
  channels: 1% 2 none / 0.4;
}

<===>
================================================================================
<===> none/slash_list/alpha/input.scss
@use 'sass:list';
@use 'core_functions/color/oklab/utils';
@include utils.inspect(oklab(list.slash(1% 2 3, none)));

<===> none/slash_list/alpha/output.css
a {
  value: oklab(1% 2 3 / none);
  channels: 1% 2 3 / none;
}

<===>
================================================================================
<===> relative_color/slash/input.scss
@use 'core_functions/color/oklab/utils';
@include utils.inspect(oklab(from #aaa l a b / 25%));

<===> relative_color/slash/output.css
a {
  value: oklab(from #aaa l a b/25%);
  type: string;
}

<===>
================================================================================
<===> relative_color/slash_list/input.scss
@use 'sass:list';
@use 'core_functions/color/oklab/utils';
@include utils.inspect(oklab(list.slash(from #aaa l a b, 25%)));

<===> relative_color/slash_list/output.css
a {
  value: oklab(from #aaa l a b / 25%);
  type: string;
}
