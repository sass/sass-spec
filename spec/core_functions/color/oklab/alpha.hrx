<===> transparent/input.scss
@use 'core_functions/color/utils';
@include utils.inspect(oklab(0 255 127 / 0));

<===> transparent/output.css
a {
  value: oklab(0% 255 127 / 0);
  space: oklab;
  channels: 0% 255 127 / 0;
}

<===>
================================================================================
<===> opaque/input.scss
@use 'core_functions/color/utils';
@include utils.inspect(oklab(1% 2 3 / 1));

<===> opaque/output.css
a {
  value: oklab(1% 2 3);
  space: oklab;
  channels: 1% 2 3 / 1;
}

<===>
================================================================================
<===> partial/input.scss
@use 'core_functions/color/utils';
@include utils.inspect(oklab(1% 2 3 / 0.4));

<===> partial/output.css
a {
  value: oklab(1% 2 3 / 0.4);
  space: oklab;
  channels: 1% 2 3 / 0.4;
}

<===>
================================================================================
<===> percent/input.scss
@use 'core_functions/color/utils';
@include utils.inspect(oklab(1% 2 3 / 40%));

<===> percent/output.css
a {
  value: oklab(1% 2 3 / 0.4);
  space: oklab;
  channels: 1% 2 3 / 0.4;
}

<===>
================================================================================
<===> degenerate/positive_infinity/input.scss
@use 'core_functions/color/utils';
@include utils.inspect(oklab(1% 2 -3 / calc(infinity)));

<===> degenerate/positive_infinity/output.css
a {
  value: oklab(1% 2 -3);
  space: oklab;
  channels: 1% 2 -3 / 1;
}

<===>
================================================================================
<===> degenerate/negative_infinity/input.scss
@use 'core_functions/color/utils';
@include utils.inspect(oklab(1% 2 -3 / calc(-infinity)));

<===> degenerate/negative_infinity/output.css
a {
  value: oklab(1% 2 -3 / 0);
  space: oklab;
  channels: 1% 2 -3 / 0;
}

<===>
================================================================================
<===> degenerate/nan/input.scss
@use 'core_functions/color/utils';
@include utils.inspect(oklab(1% 2 -3 / calc(NaN)));

<===> degenerate/nan/output.css
a {
  value: oklab(1% 2 -3 / 0);
  space: oklab;
  channels: 1% 2 -3 / 0;
}

<===>
================================================================================
<===> named/input.scss
@use 'core_functions/color/utils';
@include utils.inspect(oklab($channels: 1% 2 3 / 0.4));

<===> named/output.css
a {
  value: oklab(1% 2 3 / 0.4);
  space: oklab;
  channels: 1% 2 3 / 0.4;
}

<===>
================================================================================
<===> none/slash/b/input.scss
@use 'core_functions/color/utils';
@include utils.inspect(oklab(1% 2 none / 0.4));

<===> none/slash/b/output.css
a {
  value: oklab(1% 2 none / 0.4);
  space: oklab;
  channels: 1% 2 none / 0.4;
}

<===>
================================================================================
<===> none/slash/alpha/input.scss
@use 'core_functions/color/utils';
@include utils.inspect(oklab(1% 2 3 / none));

<===> none/slash/alpha/output.css
a {
  value: oklab(1% 2 3 / none);
  space: oklab;
  channels: 1% 2 3 / none;
}

<===>
================================================================================
<===> relative_color/slash/input.scss
@use 'core_functions/color/utils';
@include utils.inspect(oklab(from #aaa l a b / 25%));

<===> relative_color/slash/output.css
a {
  value: oklab(from #aaa l a b / 25%);
  type: string;
}
