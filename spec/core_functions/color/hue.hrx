<===> max/input.scss
@use "sass:color";
a {b: color.hue(hsl(359, 50%, 50%))}

<===> max/output.css
a {
  b: 359deg;
}

<===> max/warning
DEPRECATION WARNING: color.hue() is deprecated. Suggestion:

color.channel($color, "hue", $space: hsl)

More info: https://sass-lang.com/d/color-functions

  ,
2 | a {b: color.hue(hsl(359, 50%, 50%))}
  |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  '
    input.scss 2:7  root stylesheet

<===>
================================================================================
<===> above_max/input.scss
@use "sass:color";
a {b: color.hue(hsl(540, 50%, 50%))}

<===> above_max/output.css
a {
  b: 180deg;
}

<===> above_max/warning
DEPRECATION WARNING: color.hue() is deprecated. Suggestion:

color.channel($color, "hue", $space: hsl)

More info: https://sass-lang.com/d/color-functions

  ,
2 | a {b: color.hue(hsl(540, 50%, 50%))}
  |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  '
    input.scss 2:7  root stylesheet

<===>
================================================================================
<===> min/input.scss
@use "sass:color";
a {b: color.hue(hsl(0, 50%, 50%))}

<===> min/output.css
a {
  b: 0deg;
}

<===> min/warning
DEPRECATION WARNING: color.hue() is deprecated. Suggestion:

color.channel($color, "hue", $space: hsl)

More info: https://sass-lang.com/d/color-functions

  ,
2 | a {b: color.hue(hsl(0, 50%, 50%))}
  |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  '
    input.scss 2:7  root stylesheet

<===>
================================================================================
<===> negative/input.scss
@use "sass:color";
a {b: color.hue(hsl(-180, 50%, 50%))}

<===> negative/output.css
a {
  b: 180deg;
}

<===> negative/warning
DEPRECATION WARNING: color.hue() is deprecated. Suggestion:

color.channel($color, "hue", $space: hsl)

More info: https://sass-lang.com/d/color-functions

  ,
2 | a {b: color.hue(hsl(-180, 50%, 50%))}
  |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  '
    input.scss 2:7  root stylesheet

<===>
================================================================================
<===> middle/input.scss
@use "sass:color";
a {b: color.hue(hsl(123, 50%, 50%))}

<===> middle/output.css
a {
  b: 123deg;
}

<===> middle/warning
DEPRECATION WARNING: color.hue() is deprecated. Suggestion:

color.channel($color, "hue", $space: hsl)

More info: https://sass-lang.com/d/color-functions

  ,
2 | a {b: color.hue(hsl(123, 50%, 50%))}
  |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  '
    input.scss 2:7  root stylesheet

<===>
================================================================================
<===> fraction/input.scss
@use "sass:color";
a {b: color.hue(hsl(0.5, 50%, 50%))}

<===> fraction/output.css
a {
  b: 0.5deg;
}

<===> fraction/warning
DEPRECATION WARNING: color.hue() is deprecated. Suggestion:

color.channel($color, "hue", $space: hsl)

More info: https://sass-lang.com/d/color-functions

  ,
2 | a {b: color.hue(hsl(0.5, 50%, 50%))}
  |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  '
    input.scss 2:7  root stylesheet

<===>
================================================================================
<===> named/input.scss
@use "sass:color";
a {b: color.hue($color: hsl(234, 50%, 50%))}

<===> named/output.css
a {
  b: 234deg;
}

<===> named/warning
DEPRECATION WARNING: color.hue() is deprecated. Suggestion:

color.channel($color, "hue", $space: hsl)

More info: https://sass-lang.com/d/color-functions

  ,
2 | a {b: color.hue($color: hsl(234, 50%, 50%))}
  |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  '
    input.scss 2:7  root stylesheet

<===>
================================================================================
<===> error/too_few_args/input.scss
@use "sass:color";
a {b: color.hue()}

<===> error/too_few_args/error
Error: Missing argument $color.
  ,--> input.scss
2 | a {b: color.hue()}
  |       ^^^^^^^^^^^ invocation
  '
  ,--> sass:color
1 | @function hue($color) {
  |           =========== declaration
  '
  input.scss 2:7  root stylesheet

<===>
================================================================================
<===> error/too_many_args/input.scss
@use "sass:color";
a {b: color.hue(red, green)}

<===> error/too_many_args/error
Error: Only 1 argument allowed, but 2 were passed.
  ,--> input.scss
2 | a {b: color.hue(red, green)}
  |       ^^^^^^^^^^^^^^^^^^^^^ invocation
  '
  ,--> sass:color
1 | @function hue($color) {
  |           =========== declaration
  '
  input.scss 2:7  root stylesheet

<===>
================================================================================
<===> error/type/input.scss
@use "sass:color";
a {b: color.hue(1)}

<===> error/type/error
Error: $color: 1 is not a color.
  ,
2 | a {b: color.hue(1)}
  |       ^^^^^^^^^^^^
  '
  input.scss 2:7  root stylesheet

<===>
================================================================================
<===> error/non_legacy/input.scss
@use "sass:color";
a {b: color.hue(lch(0% 0 0deg))}

<===> error/non_legacy/error
Error: color.hue() is only supported for legacy colors. Please use color.channel() instead with an explicit $space argument.
  ,
2 | a {b: color.hue(lch(0% 0 0deg))}
  |       ^^^^^^^^^^^^^^^^^^^^^^^^^
  '
  input.scss 2:7  root stylesheet
