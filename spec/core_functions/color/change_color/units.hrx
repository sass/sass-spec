<===> options.yml
---
:warning_todo:
- libsass

<===>
================================================================================
<===> hue/deg/input.scss
a {b: change-color(red, $hue: 60deg)}

<===> hue/deg/output.css
a {
  b: yellow;
}

<===>
================================================================================
<===> hue/unitless/input.scss
a {b: change-color(red, $hue: 60)}

<===> hue/unitless/output.css
a {
  b: yellow;
}

<===>
================================================================================
<===> hue/unknown/input.scss
a {b: change-color(red, $hue: 60in)}

<===> hue/unknown/output.css
a {
  b: yellow;
}

<===> hue/unknown/warning
DEPRECATION WARNING: $hue: Passing a unit other than deg (60in) is deprecated.

To preserve current behavior: calc($hue / 1in)

See https://sass-lang.com/d/function-units

  ,
1 | a {b: change-color(red, $hue: 60in)}
  |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  '
    input.scss 1:7  root stylesheet

<===>
================================================================================
<===> hue/angle/options.yml
:ignore_for:
  - libsass

<===> hue/angle/input.scss
a {b: change-color(red, $hue: 60rad)}

<===> hue/angle/output.css
a {
  b: rgb(0, 179.576224164, 255);
}

<===>
================================================================================
<===> saturation/percent/input.scss
a {b: change-color(red, $saturation: 50%)}

<===> saturation/percent/output.css
a {
  b: rgb(191.25, 63.75, 63.75);
}

<===> saturation/percent/output-libsass.css
a {
  b: #bf4040;
}

<===>
================================================================================
<===> saturation/unitless/input.scss
a {b: change-color(red, $saturation: 50)}

<===> saturation/unitless/output.css
a {
  b: rgb(191.25, 63.75, 63.75);
}

<===> saturation/unitless/output-libsass.css
a {
  b: #bf4040;
}

<===> saturation/unitless/warning
DEPRECATION WARNING: $saturation: Passing a number without unit % (50) is deprecated.

To preserve current behavior: $saturation * 1%

More info: https://sass-lang.com/d/function-units

  ,
1 | a {b: change-color(red, $saturation: 50)}
  |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  '
    input.scss 1:7  root stylesheet

<===> saturation/unitless/warning-libsass

<===>
================================================================================
<===> saturation/unknown/input.scss
a {b: change-color(red, $saturation: 50in)}

<===> saturation/unknown/output.css
a {
  b: rgb(191.25, 63.75, 63.75);
}

<===> saturation/unknown/output-libsass.css
a {
  b: #bf4040;
}

<===> saturation/unknown/warning
DEPRECATION WARNING: $saturation: Passing a number without unit % (50in) is deprecated.

To preserve current behavior: calc($saturation / 1in * 1%)

More info: https://sass-lang.com/d/function-units

  ,
1 | a {b: change-color(red, $saturation: 50in)}
  |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  '
    input.scss 1:7  root stylesheet

<===> saturation/unknown/warning-libsass

<===>
================================================================================
<===> lightness/percent/input.scss
a {b: change-color(red, $lightness: 30%)}

<===> lightness/percent/output.css
a {
  b: #990000;
}

<===>
================================================================================
<===> lightness/unitless/input.scss
a {b: change-color(red, $lightness: 30)}

<===> lightness/unitless/output.css
a {
  b: #990000;
}

<===> lightness/unitless/warning
DEPRECATION WARNING: $lightness: Passing a number without unit % (30) is deprecated.

To preserve current behavior: $lightness * 1%

More info: https://sass-lang.com/d/function-units

  ,
1 | a {b: change-color(red, $lightness: 30)}
  |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  '
    input.scss 1:7  root stylesheet

<===>
================================================================================
<===> lightness/unknown/input.scss
a {b: change-color(red, $lightness: 30in)}

<===> lightness/unknown/output.css
a {
  b: #990000;
}

<===> lightness/unknown/warning
DEPRECATION WARNING: $lightness: Passing a number without unit % (30in) is deprecated.

To preserve current behavior: calc($lightness / 1in * 1%)

More info: https://sass-lang.com/d/function-units

  ,
1 | a {b: change-color(red, $lightness: 30in)}
  |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  '
    input.scss 1:7  root stylesheet

<===>
================================================================================
<===> alpha/unitless/input.scss
a {b: change-color(red, $alpha: 0.5)}

<===> alpha/unitless/output.css
a {
  b: rgba(255, 0, 0, 0.5);
}

<===>
================================================================================
<===> alpha/percent/input.scss
a {b: adjust-color(red, $alpha: 0.5%)}

<===> alpha/percent/output.css
a {
  b: red;
}

<===> alpha/percent/warning
DEPRECATION WARNING: $alpha: Passing a number with unit % is deprecated.

To preserve current behavior: calc($alpha / 1%)

More info: https://sass-lang.com/d/function-units

  ,
1 | a {b: adjust-color(red, $alpha: 0.5%)}
  |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  '
    input.scss 1:7  root stylesheet

<===>
================================================================================
<===> alpha/unknown/input.scss
a {b: adjust-color(red, $alpha: 0.5px)}

<===> alpha/unknown/output.css
a {
  b: red;
}

<===> alpha/unknown/warning
DEPRECATION WARNING: $alpha: Passing a number with unit px is deprecated.

To preserve current behavior: calc($alpha / 1px)

More info: https://sass-lang.com/d/function-units

  ,
1 | a {b: adjust-color(red, $alpha: 0.5px)}
  |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  '
    input.scss 1:7  root stylesheet
