<===> hsl/hue/positive_saturation/input.scss
@use 'sass:color';
a {b: color.is-powerless(hsl(0deg 50% 50%), "hue")}

<===> hsl/hue/positive_saturation/output.css
a {
  b: false;
}

<===>
================================================================================
<===> hsl/hue/zero_saturation/input.scss
@use 'sass:color';
a {b: color.is-powerless(hsl(0deg 0% 50%), "hue")}

<===> hsl/hue/zero_saturation/output.css
a {
  b: true;
}

<===>
================================================================================
<===> hsl/hue/near_zero_saturation/input.scss
@use 'sass:color';
a {b: color.is-powerless(hsl(0deg 0.000000000001% 50%), "hue")}

<===> hsl/hue/near_zero_saturation/output.css
a {
  b: true;
}

<===>
================================================================================
<===> hsl/hue/full_lightness/input.scss
// These used to be considered powerless by the CSS spec, but are no longer, so
// Sass shouldn't consdier it powerless either.
@use 'sass:color';
a {b: color.is-powerless(hsl(0deg 50% 100%), "hue")}

<===> hsl/hue/full_lightness/output.css
a {
  b: false;
}

<===>
================================================================================
<===> hsl/hue/zero_lightness/input.scss
// These used to be considered powerless by the CSS spec, but are no longer, so
// Sass shouldn't consdier it powerless either.
@use 'sass:color';
a {b: color.is-powerless(hsl(0deg 50% 0%), "hue")}

<===> hsl/hue/zero_lightness/output.css
a {
  b: false;
}

<===>
================================================================================
<===> hsl/saturation/README.md
These used to be considered powerless by the CSS spec, but are no longer, so
Sass shouldn't consdier them powerless either.

<===>
================================================================================
<===> hsl/saturation/full_lightness/input.scss
@use 'sass:color';
a {b: color.is-powerless(hsl(0deg 0% 100%), "saturation")}

<===> hsl/saturation/full_lightness/output.css
a {
  b: false;
}

<===>
================================================================================
<===> hsl/saturation/zero_lightness/input.scss
@use 'sass:color';
a {b: color.is-powerless(hsl(0deg 0% 0%), "saturation")}

<===> hsl/saturation/zero_lightness/output.css
a {
  b: false;
}

<===>
================================================================================
<===> hwb/hue/not_greyscale/input.scss
@use 'sass:color';
a {b: color.is-powerless(hwb(0deg 30% 40%), "hue")}

<===> hwb/hue/not_greyscale/output.css
a {
  b: false;
}

<===>
================================================================================
<===> hwb/hue/full_whiteness/input.scss
@use 'sass:color';
a {b: color.is-powerless(hwb(0deg 100% 0%), "hue")}

<===> hwb/hue/full_whiteness/output.css
a {
  b: true;
}

<===>
================================================================================
<===> hwb/hue/full_blackness/input.scss
@use 'sass:color';
a {b: color.is-powerless(hwb(0deg 0% 100%), "hue")}

<===> hwb/hue/full_blackness/output.css
a {
  b: true;
}

<===>
================================================================================
<===> hwb/hue/grey/input.scss
@use 'sass:color';
a {b: color.is-powerless(hwb(0deg 40% 60%), "hue")}

<===> hwb/hue/grey/output.css
a {
  b: true;
}

<===>
================================================================================
<===> hwb/hue/normalized_grey/input.scss
@use 'sass:color';
a {b: color.is-powerless(hwb(0deg 60% 80%), "hue")}

<===> hwb/hue/normalized_grey/output.css
a {
  b: true;
}

<===>
================================================================================
<===> hwb/hue/out_of_gamut/colorful/input.scss
@use 'sass:color';
a {b: color.is-powerless(hwb(0deg -30% 50%), "hue")}

<===> hwb/hue/out_of_gamut/colorful/output.css
a {
  b: false;
}

<===>
================================================================================
<===> hwb/hue/out_of_gamut/grey/input.scss
@use 'sass:color';
a {b: color.is-powerless(hwb(0deg -30% 130%), "hue")}

<===> hwb/hue/out_of_gamut/grey/output.css
a {
  b: true;
}

<===>
================================================================================
<===> lab/README.md
These used to be considered powerless by the CSS spec, but are no longer, so
Sass shouldn't consdier them powerless either.

<===>
================================================================================
<===> lab/a/full_lightness/input.scss
@use 'sass:color';
a {b: color.is-powerless(lab(100% 0 0), "a")}

<===> lab/a/full_lightness/output.css
a {
  b: false;
}

<===>
================================================================================
<===> lab/a/zero_lightness/input.scss
@use 'sass:color';
a {b: color.is-powerless(lab(0% 0 0), "a")}

<===> lab/a/zero_lightness/output.css
a {
  b: false;
}

<===>
================================================================================
<===> lab/b/full_lightness/input.scss
@use 'sass:color';
a {b: color.is-powerless(lab(100% 0 0), "b")}

<===> lab/b/full_lightness/output.css
a {
  b: false;
}

<===>
================================================================================
<===> lab/b/zero_lightness/input.scss
@use 'sass:color';
a {b: color.is-powerless(lab(0% 0 0), "b")}

<===> lab/b/zero_lightness/output.css
a {
  b: false;
}

<===>
================================================================================
<===> oklab/README.md
These used to be considered powerless by the CSS spec, but are no longer, so
Sass shouldn't consdier them powerless either.

<===>
================================================================================
<===> oklab/a/full_lightness/input.scss
@use 'sass:color';
a {b: color.is-powerless(oklab(100% 0 0), "a")}

<===> oklab/a/full_lightness/output.css
a {
  b: false;
}

<===>
================================================================================
<===> oklab/a/zero_lightness/input.scss
@use 'sass:color';
a {b: color.is-powerless(oklab(0% 0 0), "a")}

<===> oklab/a/zero_lightness/output.css
a {
  b: false;
}

<===>
================================================================================
<===> oklab/b/full_lightness/input.scss
@use 'sass:color';
a {b: color.is-powerless(oklab(100% 0 0), "b")}

<===> oklab/b/full_lightness/output.css
a {
  b: false;
}

<===>
================================================================================
<===> oklab/b/zero_lightness/input.scss
@use 'sass:color';
a {b: color.is-powerless(oklab(0% 0 0), "b")}

<===> oklab/b/zero_lightness/output.css
a {
  b: false;
}

<===>
================================================================================
<===> lch/hue/positive_chroma/input.scss
@use 'sass:color';
a {b: color.is-powerless(lch(50% 50% 0deg), "hue")}

<===> lch/hue/positive_chroma/output.css
a {
  b: false;
}

<===>
================================================================================
<===> lch/hue/zero_chroma/input.scss
@use 'sass:color';
a {b: color.is-powerless(lch(50% 0% 0deg), "hue")}

<===> lch/hue/zero_chroma/output.css
a {
  b: true;
}

<===>
================================================================================
<===> lch/hue/near_zero_chroma/input.scss
@use 'sass:color';
a {b: color.is-powerless(lch(50% 0.000000000001% 0deg), "hue")}

<===> lch/hue/near_zero_chroma/output.css
a {
  b: true;
}

<===>
================================================================================
<===> lch/hue/full_lightness/input.scss
// These used to be considered powerless by the CSS spec, but are no longer, so
// Sass shouldn't consdier it powerless either.
@use 'sass:color';
a {b: color.is-powerless(lch(100% 50% 0deg), "hue")}

<===> lch/hue/full_lightness/output.css
a {
  b: false;
}

<===>
================================================================================
<===> lch/hue/zero_lightness/input.scss
// These used to be considered powerless by the CSS spec, but are no longer, so
// Sass shouldn't consdier it powerless either.
@use 'sass:color';
a {b: color.is-powerless(lch(0% 50% 0deg), "hue")}

<===> lch/hue/zero_lightness/output.css
a {
  b: false;
}

<===>
================================================================================
<===> lch/chroma/README.md
These used to be considered powerless by the CSS spec, but are no longer, so
Sass shouldn't consdier them powerless either.

<===>
================================================================================
<===> lch/chroma/full_lightness/input.scss
@use 'sass:color';
a {b: color.is-powerless(lch(100% 0% 0deg), "chroma")}

<===> lch/chroma/full_lightness/output.css
a {
  b: false;
}

<===>
================================================================================
<===> lch/chroma/zero_lightness/input.scss
@use 'sass:color';
a {b: color.is-powerless(lch(0% 0% 0deg), "chroma")}

<===> lch/chroma/zero_lightness/output.css
a {
  b: false;
}

<===>
================================================================================
<===> oklch/hue/positive_chroma/input.scss
@use 'sass:color';
a {b: color.is-powerless(oklch(50% 50% 0deg), "hue")}

<===> oklch/hue/positive_chroma/output.css
a {
  b: false;
}

<===>
================================================================================
<===> oklch/hue/zero_chroma/input.scss
@use 'sass:color';
a {b: color.is-powerless(oklch(50% 0% 0deg), "hue")}

<===> oklch/hue/zero_chroma/output.css
a {
  b: true;
}

<===>
================================================================================
<===> oklch/hue/near_zero_chroma/input.scss
@use 'sass:color';
a {b: color.is-powerless(oklch(50% 0.000000000001% 0deg), "hue")}

<===> oklch/hue/near_zero_chroma/output.css
a {
  b: true;
}

<===>
================================================================================
<===> oklch/hue/full_lightness/input.scss
// These used to be considered powerless by the CSS spec, but are no longer, so
// Sass shouldn't consdier it powerless either.
@use 'sass:color';
a {b: color.is-powerless(oklch(100% 50% 0deg), "hue")}

<===> oklch/hue/full_lightness/output.css
a {
  b: false;
}

<===>
================================================================================
<===> oklch/hue/zero_lightness/input.scss
// These used to be considered powerless by the CSS spec, but are no longer, so
// Sass shouldn't consdier it powerless either.
@use 'sass:color';
a {b: color.is-powerless(oklch(0% 50% 0deg), "hue")}

<===> oklch/hue/zero_lightness/output.css
a {
  b: false;
}

<===>
================================================================================
<===> oklch/chroma/README.md
These used to be considered powerless by the CSS spec, but are no longer, so
Sass shouldn't consdier them powerless either.

<===>
================================================================================
<===> oklch/chroma/full_lightness/input.scss
@use 'sass:color';
a {b: color.is-powerless(oklch(100% 0% 0deg), "chroma")}

<===> oklch/chroma/full_lightness/output.css
a {
  b: false;
}

<===>
================================================================================
<===> oklch/chroma/zero_lightness/input.scss
@use 'sass:color';
a {b: color.is-powerless(oklch(0% 0% 0deg), "chroma")}

<===> oklch/chroma/zero_lightness/output.css
a {
  b: false;
}

<===>
================================================================================
<===> space/powerless/input.scss
@use 'sass:color';
a {b: color.is-powerless(grey, "hue", $space: hsl)}

<===> space/powerless/output.css
a {
  b: true;
}

<===>
================================================================================
<===> space/not_powerless/input.scss
@use 'sass:color';
a {b: color.is-powerless(grey, "a", $space: lab)}

<===> space/not_powerless/output.css
a {
  b: false;
}

<===>
================================================================================
<===> named/input.scss
@use 'sass:color';
a {b: color.is-powerless($color: red, $channel: "a", $space: lab)}

<===> named/output.css
a {
  b: false;
}

<===>
================================================================================
<===> error/too_few_args/input.scss
@use 'sass:color';
a {b: color.is-powerless(black)}

<===> error/too_few_args/error
Error: Missing argument $channel.
  ,--> input.scss
2 | a {b: color.is-powerless(black)}
  |       ^^^^^^^^^^^^^^^^^^^^^^^^^ invocation
  '
  ,--> sass:color
1 | @function is-powerless($color, $channel, $space: null) {
  |           ============================================ declaration
  '
  input.scss 2:7  root stylesheet

<===>
================================================================================
<===> error/too_many_args/input.scss
@use 'sass:color';
a {b: color.is-powerless(black, "red", rgb, c)}

<===> error/too_many_args/error
Error: Only 3 arguments allowed, but 4 were passed.
  ,--> input.scss
2 | a {b: color.is-powerless(black, "red", rgb, c)}
  |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invocation
  '
  ,--> sass:color
1 | @function is-powerless($color, $channel, $space: null) {
  |           ============================================ declaration
  '
  input.scss 2:7  root stylesheet

<===>
================================================================================
<===> error/type/color/input.scss
@use 'sass:color';
a {b: color.is-powerless(c, "red")}

<===> error/type/color/error
Error: $color: c is not a color.
  ,
2 | a {b: color.is-powerless(c, "red")}
  |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  '
  input.scss 2:7  root stylesheet

<===>
================================================================================
<===> error/type/channel/input.scss
@use 'sass:color';
a {b: color.is-powerless(black, 1)}

<===> error/type/channel/error
Error: $channel: 1 is not a string.
  ,
2 | a {b: color.is-powerless(black, 1)}
  |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  '
  input.scss 2:7  root stylesheet

<===>
================================================================================
<===> error/type/space/input.scss
@use 'sass:color';
a {b: color.is-powerless(black, "red", $space: 1)}

<===> error/type/space/error
Error: $space: 1 is not a string.
  ,
2 | a {b: color.is-powerless(black, "red", $space: 1)}
  |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  '
  input.scss 2:7  root stylesheet

<===>
================================================================================
<===> error/channel/unquoted/input.scss
@use 'sass:color';
a {b: color.is-powerless(hsl(0deg 0% 0%), hue)}

<===> error/channel/unquoted/error
Error: $channel: Expected hue to be a quoted string.
  ,
2 | a {b: color.is-powerless(hsl(0deg 0% 0%), hue)}
  |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  '
  input.scss 2:7  root stylesheet

<===>
================================================================================
<===> error/channel/unknown/input.scss
@use 'sass:color';
a {b: color.is-powerless(black, "c")}

<===> error/channel/unknown/error
Error: $channel: Color black doesn't have a channel named "c".
  ,
2 | a {b: color.is-powerless(black, "c")}
  |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  '
  input.scss 2:7  root stylesheet

<===>
================================================================================
<===> error/channel/wrong_space/input.scss
@use 'sass:color';
a {b: color.is-powerless(black, "hue")}

<===> error/channel/wrong_space/error
Error: $channel: Color black doesn't have a channel named "hue".
  ,
2 | a {b: color.is-powerless(black, "hue")}
  |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  '
  input.scss 2:7  root stylesheet

<===>
================================================================================
<===> error/space/quoted/input.scss
@use 'sass:color';
a {b: color.is-powerless(black, "red", $space: "rgb")}

<===> error/space/quoted/error
Error: $space: Expected "rgb" to be an unquoted string.
  ,
2 | a {b: color.is-powerless(black, "red", $space: "rgb")}
  |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  '
  input.scss 2:7  root stylesheet

<===>
================================================================================
<===> error/space/unknown/input.scss
@use 'sass:color';
a {b: color.is-powerless(black, "red", $space: c)}

<===> error/space/unknown/error
Error: $space: Unknown color space "c".
  ,
2 | a {b: color.is-powerless(black, "red", $space: c)}
  |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  '
  input.scss 2:7  root stylesheet
