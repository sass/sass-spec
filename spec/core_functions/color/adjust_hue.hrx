<===> max/options.yml
:warning_todo:
  - libsass

<===> max/input.scss
a {b: adjust-hue(red, 359)}

<===> max/output.css
a {
  b: rgb(255, 0, 4.25);
}

<===> max/output-libsass.css
a {
  b: #ff0004;
}

<===> max/warning
DEPRECATION WARNING: adjust-hue() is deprecated. Suggestion:

color.adjust($color, $hue: 359deg)

More info: https://sass-lang.com/d/color-functions

  ,
1 | a {b: adjust-hue(red, 359)}
  |       ^^^^^^^^^^^^^^^^^^^^
  '
    input.scss 1:7  root stylesheet

<===>
================================================================================
<===> above_max/options.yml
:warning_todo:
  - libsass

<===> above_max/input.scss
a {b: adjust-hue(red, 540)}

<===> above_max/output.css
a {
  b: aqua;
}

<===> above_max/output-libsass.css
a {
  b: cyan;
}

<===> above_max/warning
DEPRECATION WARNING: adjust-hue() is deprecated. Suggestion:

color.adjust($color, $hue: 540deg)

More info: https://sass-lang.com/d/color-functions

  ,
1 | a {b: adjust-hue(red, 540)}
  |       ^^^^^^^^^^^^^^^^^^^^
  '
    input.scss 1:7  root stylesheet

<===>
================================================================================
<===> min/options.yml
:warning_todo:
  - libsass

<===> min/input.scss
a {b: adjust-hue(blue, 0)}

<===> min/output.css
a {
  b: blue;
}

<===> min/warning
DEPRECATION WARNING: adjust-hue() is deprecated. Suggestion:

color.adjust($color, $hue: 0deg)

More info: https://sass-lang.com/d/color-functions

  ,
1 | a {b: adjust-hue(blue, 0)}
  |       ^^^^^^^^^^^^^^^^^^^
  '
    input.scss 1:7  root stylesheet

<===>
================================================================================
<===> negative/options.yml
:warning_todo:
  - libsass

<===> negative/input.scss
a {b: adjust-hue(red, -180)}

<===> negative/output.css
a {
  b: aqua;
}

<===> negative/output-libsass.css
a {
  b: cyan;
}

<===> negative/warning
DEPRECATION WARNING: adjust-hue() is deprecated. Suggestion:

color.adjust($color, $hue: -180deg)

More info: https://sass-lang.com/d/color-functions

  ,
1 | a {b: adjust-hue(red, -180)}
  |       ^^^^^^^^^^^^^^^^^^^^^
  '
    input.scss 1:7  root stylesheet

<===>
================================================================================
<===> middle/options.yml
:warning_todo:
  - libsass

<===> middle/input.scss
a {b: adjust-hue(red, 123)}

<===> middle/output.css
a {
  b: rgb(0, 255, 12.75);
}

<===> middle/output-libsass.css
a {
  b: #00ff0d;
}

<===> middle/warning
DEPRECATION WARNING: adjust-hue() is deprecated. Suggestion:

color.adjust($color, $hue: 123deg)

More info: https://sass-lang.com/d/color-functions

  ,
1 | a {b: adjust-hue(red, 123)}
  |       ^^^^^^^^^^^^^^^^^^^^
  '
    input.scss 1:7  root stylesheet

<===>
================================================================================
<===> fraction/options.yml
:warning_todo:
  - libsass

<===> fraction/input.scss
a {b: adjust-hue(red, 0.5)}

<===> fraction/output.css
a {
  b: rgb(255, 2.125, 0);
}

<===> fraction/output-libsass.css
a {
  b: #ff0200;
}

<===> fraction/warning
DEPRECATION WARNING: adjust-hue() is deprecated. Suggestion:

color.adjust($color, $hue: 0.5deg)

More info: https://sass-lang.com/d/color-functions

  ,
1 | a {b: adjust-hue(red, 0.5)}
  |       ^^^^^^^^^^^^^^^^^^^^
  '
    input.scss 1:7  root stylesheet

<===>
================================================================================
<===> alpha/options.yml
:warning_todo:
  - libsass

<===> alpha/input.scss
a {b: adjust-hue(rgba(red, 0.1), 359)}

<===> alpha/output.css
a {
  b: rgba(255, 0, 4.25, 0.1);
}

<===> alpha/output-libsass.css
a {
  b: rgba(255, 0, 4, 0.1);
}

<===> alpha/warning
DEPRECATION WARNING: adjust-hue() is deprecated. Suggestion:

color.adjust($color, $hue: 359deg)

More info: https://sass-lang.com/d/color-functions

  ,
1 | a {b: adjust-hue(rgba(red, 0.1), 359)}
  |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  '
    input.scss 1:7  root stylesheet

<===>
================================================================================
<===> units/options.yml
---
:warning_todo:
- libsass

<===>
================================================================================
<===> units/deg/input.scss
a {b: adjust-hue(red, 60deg)}

<===> units/deg/output.css
a {
  b: yellow;
}

<===> units/deg/warning
DEPRECATION WARNING: adjust-hue() is deprecated. Suggestion:

color.adjust($color, $hue: 60deg)

More info: https://sass-lang.com/d/color-functions

  ,
1 | a {b: adjust-hue(red, 60deg)}
  |       ^^^^^^^^^^^^^^^^^^^^^^
  '
    input.scss 1:7  root stylesheet

<===>
================================================================================
<===> units/unitless/input.scss
a {b: adjust-hue(red, 60)}

<===> units/unitless/output.css
a {
  b: yellow;
}

<===> units/unitless/warning
DEPRECATION WARNING: adjust-hue() is deprecated. Suggestion:

color.adjust($color, $hue: 60deg)

More info: https://sass-lang.com/d/color-functions

  ,
1 | a {b: adjust-hue(red, 60)}
  |       ^^^^^^^^^^^^^^^^^^^
  '
    input.scss 1:7  root stylesheet

<===>
================================================================================
<===> units/unknown/input.scss
a {b: adjust-hue(red, 60in)}

<===> units/unknown/output.css
a {
  b: yellow;
}

<===> units/unknown/warning
DEPRECATION WARNING: $degrees: Passing a unit other than deg (60in) is deprecated.

To preserve current behavior: calc($degrees / 1in)

See https://sass-lang.com/d/function-units

  ,
1 | a {b: adjust-hue(red, 60in)}
  |       ^^^^^^^^^^^^^^^^^^^^^
  '
    input.scss 1:7  root stylesheet

DEPRECATION WARNING: adjust-hue() is deprecated. Suggestion:

color.adjust($color, $hue: 60deg)

More info: https://sass-lang.com/d/color-functions

  ,
1 | a {b: adjust-hue(red, 60in)}
  |       ^^^^^^^^^^^^^^^^^^^^^
  '
    input.scss 1:7  root stylesheet

<===>
================================================================================
<===> units/angle/options.yml
:ignore_for:
  - libsass

<===> units/angle/input.scss
a {b: adjust-hue(red, 60rad)}

<===> units/angle/output.css
a {
  b: rgb(0, 179.576224164, 255);
}

<===> units/angle/warning
DEPRECATION WARNING: adjust-hue() is deprecated. Suggestion:

color.adjust($color, $hue: 3437.7467707849deg)

More info: https://sass-lang.com/d/color-functions

  ,
1 | a {b: adjust-hue(red, 60rad)}
  |       ^^^^^^^^^^^^^^^^^^^^^^
  '
    input.scss 1:7  root stylesheet

<===>
================================================================================
<===> named/options.yml
:warning_todo:
  - libsass

<===> named/input.scss
a {b: adjust-hue($color: red, $degrees: 123)}

<===> named/output.css
a {
  b: rgb(0, 255, 12.75);
}

<===> named/output-libsass.css
a {
  b: #00ff0d;
}

<===> named/warning
DEPRECATION WARNING: adjust-hue() is deprecated. Suggestion:

color.adjust($color, $hue: 123deg)

More info: https://sass-lang.com/d/color-functions

  ,
1 | a {b: adjust-hue($color: red, $degrees: 123)}
  |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  '
    input.scss 1:7  root stylesheet

<===>
================================================================================
<===> error/too_few_args/input.scss
a {b: adjust-hue(red)}

<===> error/too_few_args/error
Error: Missing argument $degrees.
  ,--> input.scss
1 | a {b: adjust-hue(red)}
  |       ^^^^^^^^^^^^^^^ invocation
  '
  ,--> sass:color
1 | @function adjust-hue($color, $degrees) {
  |           ============================ declaration
  '
  input.scss 1:7  root stylesheet

<===> error/too_few_args/error-libsass
Error: Function adjust-hue is missing argument $degrees.
        on line 1 of input.scss
>> a {b: adjust-hue(red)}

   ------^

<===>
================================================================================
<===> error/too_many_args/input.scss
a {b: adjust-hue(red, 1, 2)}

<===> error/too_many_args/error
Error: Only 2 arguments allowed, but 3 were passed.
  ,--> input.scss
1 | a {b: adjust-hue(red, 1, 2)}
  |       ^^^^^^^^^^^^^^^^^^^^^ invocation
  '
  ,--> sass:color
1 | @function adjust-hue($color, $degrees) {
  |           ============================ declaration
  '
  input.scss 1:7  root stylesheet

<===> error/too_many_args/error-libsass
Error: wrong number of arguments (3 for 2) for `adjust-hue'
        on line 1:7 of input.scss
>> a {b: adjust-hue(red, 1, 2)}

   ------^

<===>
================================================================================
<===> error/type/color/input.scss
a {b: adjust-hue(1, 2)}

<===> error/type/color/error
Error: $color: 1 is not a color.
  ,
1 | a {b: adjust-hue(1, 2)}
  |       ^^^^^^^^^^^^^^^^
  '
  input.scss 1:7  root stylesheet

<===> error/type/color/error-libsass
Error: argument `$color` of `adjust-hue($color, $degrees)` must be a color
        on line 1:7 of input.scss, in function `adjust-hue`
        from line 1:7 of input.scss
>> a {b: adjust-hue(1, 2)}

   ------^

<===>
================================================================================
<===> error/type/hue/input.scss
a {b: adjust-hue(red, blue)}

<===> error/type/hue/error
Error: $degrees: blue is not a number.
  ,
1 | a {b: adjust-hue(red, blue)}
  |       ^^^^^^^^^^^^^^^^^^^^^
  '
  input.scss 1:7  root stylesheet

<===> error/type/hue/error-libsass
Error: argument `$degrees` of `adjust-hue($color, $degrees)` must be a number
        on line 1:7 of input.scss, in function `adjust-hue`
        from line 1:7 of input.scss
>> a {b: adjust-hue(red, blue)}

   ------^
