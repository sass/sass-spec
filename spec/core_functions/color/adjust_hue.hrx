<===> max/input.scss
@use "sass:color";
a {b: color.adjust(red, $hue: 359)}

<===> max/output.css
a {
  b: #ff0004;
}

<===>
================================================================================
<===> above_max/input.scss
@use "sass:color";
a {b: color.adjust(red, $hue: 540)}

<===> above_max/output.css
a {
  b: aqua;
}

<===>
================================================================================
<===> min/input.scss
@use "sass:color";
a {b: color.adjust(blue, $hue: 0)}

<===> min/output.css
a {
  b: blue;
}

<===>
================================================================================
<===> negative/input.scss
@use "sass:color";
a {b: color.adjust(red, $hue: -180)}

<===> negative/output.css
a {
  b: aqua;
}

<===>
================================================================================
<===> middle/input.scss
@use "sass:color";
a {b: color.adjust(red, $hue: 123)}

<===> middle/output.css
a {
  b: #00ff0d;
}

<===>
================================================================================
<===> fraction/input.scss
@use "sass:color";
a {b: color.adjust(red, $hue: 0.5)}

<===> fraction/output.css
a {
  b: #ff0200;
}

<===>
================================================================================
<===> alpha/input.scss
@use "sass:color";
a {b: color.adjust(rgba(red, 0.1), $hue: 359)}

<===> alpha/output.css
a {
  b: rgba(255, 0, 4, 0.1);
}

<===>
================================================================================
<===> units/deg/input.scss
@use "sass:color";
a {b: color.adjust(red, $hue: 60deg)}

<===> units/deg/output.css
a {
  b: yellow;
}

<===>
================================================================================
<===> units/unitless/input.scss
@use "sass:color";
a {b: color.adjust(red, $hue: 60)}

<===> units/unitless/output.css
a {
  b: yellow;
}

<===>
================================================================================
<===> units/unknown/input.scss
@use "sass:color";
a {b: color.adjust(red, $hue: 60in)}

<===> units/unknown/output.css
a {
  b: yellow;
}

<===> units/unknown/warning
DEPRECATION WARNING: $hue: Passing a unit other than deg (60in) is deprecated.

To preserve current behavior: calc($hue / 1in)

See https://sass-lang.com/d/function-units

  ,
2 | a {b: color.adjust(red, $hue: 60in)}
  |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  '
    input.scss 2:7  root stylesheet

<===>
================================================================================
<===> units/angle/input.scss
@use "sass:color";
a {b: color.adjust(red, $hue: 60rad)}

<===> units/angle/output.css
a {
  b: #00b4ff;
}

<===>
================================================================================
<===> named/input.scss
a {b: adjust-hue($color: red, $degrees: 123)}

<===> named/output.css
a {
  b: #00ff0d;
}

<===>
================================================================================
<===> error/too_few_args/input.scss
a {b: adjust-hue(red)}

<===> error/too_few_args/error
Error: Missing argument $degrees.
  ,--> input.scss
1 | a {b: adjust-hue(red)}
  |       ^^^^^^^^^^^^^^^ invocation
  '
  ,--> sass:color
1 | @function adjust-hue($color, $degrees) {
  |           ============================ declaration
  '
  input.scss 1:7  root stylesheet

<===>
================================================================================
<===> error/too_many_args/input.scss
a {b: adjust-hue(red, 1, 2)}

<===> error/too_many_args/error
Error: Only 2 arguments allowed, but 3 were passed.
  ,--> input.scss
1 | a {b: adjust-hue(red, 1, 2)}
  |       ^^^^^^^^^^^^^^^^^^^^^ invocation
  '
  ,--> sass:color
1 | @function adjust-hue($color, $degrees) {
  |           ============================ declaration
  '
  input.scss 1:7  root stylesheet

<===>
================================================================================
<===> error/type/color/input.scss
@use "sass:color";
a {b: color.adjust(1, $hue: 2)}

<===> error/type/color/error
Error: $color: 1 is not a color.
  ,
2 | a {b: color.adjust(1, $hue: 2)}
  |       ^^^^^^^^^^^^^^^^^^^^^^^^
  '
  input.scss 2:7  root stylesheet

<===>
================================================================================
<===> error/type/hue/input.scss
@use "sass:color";
a {b: color.adjust(red, $hue: blue)}

<===> error/type/hue/error
Error: $hue: blue is not a number.
  ,
2 | a {b: color.adjust(red, $hue: blue)}
  |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  '
  input.scss 2:7  root stylesheet
