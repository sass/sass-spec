<===> css_overload/README.md
Sass supports saturate() with one argument for compatibility with [plain CSS][].

[plain CSS]: https://developer.mozilla.org/en-US/docs/Web/CSS/filter-function/saturate

<===>
================================================================================
<===> css_overload/unit/input.scss
a {b: saturate(50%)}

<===> css_overload/unit/output.css
a {
  b: saturate(50%);
}

<===>
================================================================================
<===> css_overload/unitless/input.scss
a {b: saturate(1)}

<===> css_overload/unitless/output.css
a {
  b: saturate(1);
}

<===>
================================================================================
<===> css_overload/with_sass_var/input.scss
$c: 1;
a {b: saturate($c)}

<===> css_overload/with_sass_var/output.css
a {
  b: saturate(1);
}

<===>
================================================================================
<===> css_overload/with_css_var/input.scss
a {b: saturate(var(--c))}

<===> css_overload/with_css_var/output.css
a {
  b: saturate(var(--c));
}

<===>
================================================================================
<===> css_overload/with_calc/input.scss
a {b: saturate(calc(1 + 2))}

<===> css_overload/with_calc/output.css
a {
  b: saturate(3);
}

<===>
================================================================================
<===> css_overload/with_unquoted_calc/input.scss
@use "sass:string";
a {b: saturate(string.unquote('calc(1)'))}

<===> css_overload/with_unquoted_calc/output.css
a {
  b: saturate(calc(1));
}

<===>
================================================================================
<===> css_overload/named/input.scss
a {b: saturate($amount: 50%)}

<===> css_overload/named/output.css
a {
  b: saturate(50%);
}
