<===> calc/string/arg_1/input.scss
a {b: rgb(unquote("calc(1)") 2 3)}

<===> calc/string/arg_1/output.css
a {
  b: rgb(calc(1), 2, 3);
}

<===>
================================================================================
<===> calc/string/arg_2/input.scss
a {b: rgb(1 unquote("calc(2)") 3)}

<===> calc/string/arg_2/output.css
a {
  b: rgb(1, calc(2), 3);
}

<===>
================================================================================
<===> calc/string/arg_3/input.scss
a {b: rgb(1 2 unquote("calc(3)"))}

<===> calc/string/arg_3/output.css
a {
  b: rgb(1, 2, calc(3));
}

<===>
================================================================================
<===> calc/calculation/arg_1/input.scss
a {b: rgb(calc(1px + 1%) 2 3)}

<===> calc/calculation/arg_1/output.css
a {
  b: rgb(calc(1px + 1%), 2, 3);
}

<===>
================================================================================
<===> calc/calculation/arg_2/input.scss
a {b: rgb(1 calc(1px + 1%) 3)}

<===> calc/calculation/arg_2/output.css
a {
  b: rgb(1, calc(1px + 1%), 3);
}

<===>
================================================================================
<===> calc/calculation/arg_3/input.scss
a {b: rgb(1 2 calc(1px + 1%))}

<===> calc/calculation/arg_3/output.css
a {
  b: rgb(1, 2, calc(1px + 1%));
}

<===>
================================================================================
<===> var/arg_1/input.scss
a {b: rgb(var(--foo) 2 3)}

<===> var/arg_1/output.css
a {
  b: rgb(var(--foo), 2, 3);
}

<===>
================================================================================
<===> var/arg_2/input.scss
a {b: rgb(1 var(--foo) 3)}

<===> var/arg_2/output.css
a {
  b: rgb(1, var(--foo), 3);
}

<===>
================================================================================
<===> var/arg_3/input.scss
a {b: rgb(1 2 var(--foo))}

<===> var/arg_3/output.css
a {
  b: rgb(1, 2, var(--foo));
}

<===>
================================================================================
<===> env/arg_1/input.scss
a {b: rgb(env(--foo) 2 3)}

<===> env/arg_1/output.css
a {
  b: rgb(env(--foo), 2, 3);
}

<===>
================================================================================
<===> env/arg_2/input.scss
a {b: rgb(1 env(--foo) 3)}

<===> env/arg_2/output.css
a {
  b: rgb(1, env(--foo), 3);
}

<===>
================================================================================
<===> env/arg_3/input.scss
a {b: rgb(1 2 env(--foo))}

<===> env/arg_3/output.css
a {
  b: rgb(1, 2, env(--foo));
}

<===>
================================================================================
<===> min/string/arg_1/input.scss
a {b: rgb(unquote("min(1)") 2 3)}

<===> min/string/arg_1/output.css
a {
  b: rgb(min(1), 2, 3);
}

<===>
================================================================================
<===> min/string/arg_2/input.scss
a {b: rgb(1 unquote("min(2)") 3)}

<===> min/string/arg_2/output.css
a {
  b: rgb(1, min(2), 3);
}

<===>
================================================================================
<===> min/string/arg_3/input.scss
a {b: rgb(1 2 unquote("min(3)"))}

<===> min/string/arg_3/output.css
a {
  b: rgb(1, 2, min(3));
}

<===>
================================================================================
<===> max/string/arg_1/input.scss
a {b: rgb(unquote("max(1)") 2 3)}

<===> max/string/arg_1/output.css
a {
  b: rgb(max(1), 2, 3);
}

<===>
================================================================================
<===> max/string/arg_2/input.scss
a {b: rgb(1 unquote("max(2)") 3)}

<===> max/string/arg_2/output.css
a {
  b: rgb(1, max(2), 3);
}

<===>
================================================================================
<===> max/string/arg_3/input.scss
a {b: rgb(1 2 unquote("max(3)"))}

<===> max/string/arg_3/output.css
a {
  b: rgb(1, 2, max(3));
}

<===>
================================================================================
<===> clamp/string/arg_1/input.scss
a {b: rgb(unquote("clamp(1, 2, 3)") 2 3)}

<===> clamp/string/arg_1/output.css
a {
  b: rgb(clamp(1, 2, 3), 2, 3);
}

<===>
================================================================================
<===> clamp/string/arg_2/input.scss
a {b: rgb(1 unquote("clamp(2, 3, 4)") 3)}

<===> clamp/string/arg_2/output.css
a {
  b: rgb(1, clamp(2, 3, 4), 3);
}

<===>
================================================================================
<===> clamp/string/arg_3/input.scss
a {b: rgb(1 2 unquote("clamp(3, 4, 5)"))}

<===> clamp/string/arg_3/output.css
a {
  b: rgb(1, 2, clamp(3, 4, 5));
}

<===>
================================================================================
<===> multi_argument_var/1_of_2/input.scss
// var() is substituted before parsing, so it may contain multiple arguments.
a {b: rgb(var(--foo) 2)}

<===> multi_argument_var/1_of_2/output.css
a {
  b: rgb(var(--foo) 2);
}

<===>
================================================================================
<===> multi_argument_var/2_of_2/input.scss
a {b: rgb(1 var(--foo))}

<===> multi_argument_var/2_of_2/output.css
a {
  b: rgb(1 var(--foo));
}

<===>
================================================================================
<===> multi_argument_var/1_of_1/input.scss
a {b: rgb(var(--foo))}

<===> multi_argument_var/1_of_1/output.css
a {
  b: rgb(var(--foo));
}
