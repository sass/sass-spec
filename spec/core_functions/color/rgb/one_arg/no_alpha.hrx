<===> unitless/README.md
Channels may be specified as unitless numbers between 0 and 255.

<===>
================================================================================
<===> unitless/numbers/input.scss
a {b: rgb(18 52 86)}

<===> unitless/numbers/output.css
a {
  b: rgb(18, 52, 86);
}

<===>
================================================================================
<===> unitless/beaded/input.scss
a {b: rgb(190 173 237)}

<===> unitless/beaded/output.css
a {
  b: rgb(190, 173, 237);
}

<===>
================================================================================
<===> unitless/springgreen/input.scss
a {b: rgb(0 255 127)}

<===> unitless/springgreen/output.css
a {
  b: rgb(0, 255, 127);
}

<===>
================================================================================
<===> unitless/named/input.scss
a {b: rgb($channels: 0 255 127)}

<===> unitless/named/output.css
a {
  b: rgb(0, 255, 127);
}

<===>
================================================================================
<===> unitless/clamped/README.md
Channels that are out of bounds are clamped within bounds.

<===>
================================================================================
<===> unitless/clamped/red/options.yml
:todo:
  - dart-sass

<===> unitless/clamped/red/input.scss
a {b: rgb(256 0 0)}

<===> unitless/clamped/red/output.css
a {
  b: rgb(255, 0, 0);
}

<===>
================================================================================
<===> unitless/clamped/green/options.yml
:todo:
  - dart-sass

<===> unitless/clamped/green/input.scss
a {b: rgb(0 -1 0)}

<===> unitless/clamped/green/output.css
a {
  b: rgb(0, 0, 0);
}

<===>
================================================================================
<===> unitless/clamped/blue/options.yml
:todo:
  - dart-sass

<===> unitless/clamped/blue/input.scss
a {b: rgb(0 0 9999)}

<===> unitless/clamped/blue/output.css
a {
  b: rgb(0, 0, 255);
}

<===>
================================================================================
<===> percents/README.md
Channels may also be specified as percents between 0% and 100%, which may be
// mixed with unitless numbers.

<===>
================================================================================
<===> percents/all/percent/input.scss
a {b: rgb(7.1% 20.4% 33.9%)}

<===> percents/all/percent/output.css
a {
  b: rgb(18.105, 52.02, 86.445);
}

<===>
================================================================================
<===> percents/unitless/green/input.scss
a {b: rgb(74.7% 173 93%)}

<===> percents/unitless/green/output.css
a {
  b: rgb(190.485, 173, 237.15);
}

<===>
================================================================================
<===> percents/percent/green/input.scss
a {b: rgb(190 68% 237)}

<===> percents/percent/green/output.css
a {
  b: rgb(190, 173.4, 237);
}

<===>
================================================================================
<===> percents/boundaries/input.scss
a {b: rgb(0% 100% 50%)}

<===> percents/boundaries/output.css
a {
  b: rgb(0, 255, 127.5);
}

<===>
================================================================================
<===> percents/clamped/README.md
Channels that are out of bounds are clamped within bounds.

<===>
================================================================================
<===> percents/clamped/red/options.yml
:todo:
  - dart-sass

<===> percents/clamped/red/input.scss
a {b: rgb(100.1% 0 0)}

<===> percents/clamped/red/output.css
a {
  b: rgb(255, 0, 0);
}

<===>
================================================================================
<===> percents/clamped/green/options.yml
:todo:
  - dart-sass

<===> percents/clamped/green/input.scss
a {b: rgb(0 -0.1% 0)}

<===> percents/clamped/green/output.css
a {
  b: rgb(0, 0, 0);
}

<===>
================================================================================
<===> percents/clamped/blue/options.yml
:todo:
  - dart-sass

<===> percents/clamped/blue/input.scss
a {b: rgb(0 0 200%)}

<===> percents/clamped/blue/output.css
a {
  b: rgb(0, 0, 255);
}
