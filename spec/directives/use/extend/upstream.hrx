<===> near/input.scss
@use "other";

in-input {@extend in-other}

<===> near/_other.scss
in-other {x: y}

<===> near/output.css
in-other, in-input {
  x: y;
}

<===>
================================================================================
<===> far/input.scss
@use "midstream";

in-input {@extend in-upstream}

<===> far/_midstream.scss
@use "upstream";

<===> far/_upstream.scss
in-upstream {x: y}

<===> far/output.css
in-upstream, in-input {
  x: y;
}

<===>
================================================================================
<===> placeholder/input.scss
@use "other";

in-input {@extend %in-other}

<===> placeholder/_other.scss
%in-other {x: y}

<===> placeholder/output.css
in-input {
  x: y;
}

<===>
================================================================================
<===> double/input.scss
// Regression test for sass/dart-sass#1393
@use "other";

downstream {@extend upstream}

<===> double/_other.scss
upstream {a: b}
downstream {@extend upstream}

<===> double/output.css
upstream, downstream {
  a: b;
}

<===>
================================================================================
<===> compound_through_import/input.scss
@import "downstream";

<===> compound_through_import/README.md
Regression test for https://github.com/sass/dart-sass/issues/2616

<===> compound_through_import/_downstream.scss
@use "midstream";

<===> compound_through_import/_midstream.scss
@use "upstream";

.a {
  @extend %b;
}

<===> compound_through_import/_upstream.scss
%b.c {
  d: e;
}

<===> compound_through_import/output.css
.c.a {
  d: e;
}

<===> compound_through_import/warning
DEPRECATION WARNING [import]: Sass @import rules are deprecated and will be removed in Dart Sass 3.0.0.

More info and automated migrator: https://sass-lang.com/d/import

  ,
1 | @import "downstream";
  |         ^^^^^^^^^^^^
  '
    input.scss 1:9  root stylesheet
