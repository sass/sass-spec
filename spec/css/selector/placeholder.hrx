<===> pseudoselectors/is/solo/input.scss
// Since `%b` doesn't exist, no selectors can match it, so this rule should be
// removed.
a:is(%b) {x: y}

<===> pseudoselectors/is/solo/output.css

<===>
================================================================================
<===> pseudoselectors/is/with_real/input.scss
// Since `%b` doesn't exist, an element matches `%b` or `c` iff it matches `c`.
a:is(%b, c) {x: y}

<===> pseudoselectors/is/with_real/output.css
a:is(c) {
  x: y;
}

<===>
================================================================================
<===> pseudoselectors/where/solo/input.scss
// Since `%b` doesn't exist, no selectors can match it, so this rule should be
// removed.
a:where(%b) {x: y}

<===> pseudoselectors/where/solo/output.css

<===>
================================================================================
<===> pseudoselectors/where/with_real/input.scss
// Since `%b` doesn't exist, an element matches `%b` or `c` iff it matches `c`.
a:where(%b, c) {x: y}

<===> pseudoselectors/where/with_real/output.css
a:where(c) {
  x: y;
}

<===>
================================================================================
<===> pseudoselectors/where/nesting/options.yml
:todo:
  - sass/dart-sass#1451

<===> pseudoselectors/where/nesting/input.scss
a {
  :where(&) {
    b: c;
  }
}

<===> pseudoselectors/where/nesting/output.css
:where(a) {
  b: c;
}

<===>
================================================================================
<===> pseudoselectors/matches/solo/input.scss
// Since `%b` doesn't exist, no selectors can match it, so this rule should be
// removed.
a:matches(%b) {x: y}

<===> pseudoselectors/matches/solo/output.css

<===>
================================================================================
<===> pseudoselectors/matches/with_real/input.scss
// Since `%b` doesn't exist, an element matches `%b` or `c` iff it matches `c`.
a:matches(%b, c) {x: y}

<===> pseudoselectors/matches/with_real/output.css
a:matches(c) {
  x: y;
}

<===>
================================================================================
<===> pseudoselectors/not/solo/input.scss
// Since `%b` doesn't exist, all `a` elements match `a:not(%b)`.
a:not(%b) {x: y}

<===> pseudoselectors/not/solo/output.css
a {
  x: y;
}

<===>
================================================================================
<===> pseudoselectors/not/with_real/input.scss
// Since `%b` doesn't exist, it can be removed from the `:not` pseudoselector.
a:not(%b, c) {x: y}

<===> pseudoselectors/not/with_real/output.css
a:not(c) {
  x: y;
}

<===>
================================================================================
<===> pseudoselectors/not/universal/input.scss
// Since `%b` doesn't exist, all elements match `:not(%b)`.
:not(%b) {x: y}

<===> pseudoselectors/not/universal/output.css
* {
  x: y;
}
