<===> bubble/rules/input.scss
a {
  b: c;
  @font-face { d: e }
}

<===> bubble/rules/output.css
a {
  b: c;
}
@font-face {
  d: e;
}

<===>
================================================================================
<===> bubble/empty/input.scss
a {
  @font-face {/**/}
}

<===> bubble/empty/output.css
@font-face { /**/ }

<===>
================================================================================
<===> bubble/in-mixin/input.scss
@mixin a {
  @font-face { b: c }
}
d {
  e: f;
  @include a;
}

<===> bubble/in-mixin/output.css
d {
  e: f;
}
@font-face {
  b: c;
}

<===>
================================================================================
<===> bubble/deeply-nested/input.scss
a { b { c { @font-face { e: f } g: h; } } }

<===> bubble/deeply-nested/output.css
a b c {
  g: h;
}
@font-face {
  e: f;
}

<===> bubble/deeply-nested/warning
DEPRECATION WARNING: Sass's behavior for declarations that appear after nested
rules will be changing to match the behavior specified by CSS in an upcoming
version. To keep the existing behavior, move the declaration above the nested
rule. To opt into the new behavior, wrap the declaration in `& {}`.

More info: https://sass-lang.com/d/mixed-decls

  ,
1 | a { b { c { @font-face { e: f } g: h; } } }
  |                                 ^^^^ declaration
  |             =================== nested rule
  '
    input.scss 1:33  root stylesheet

<===>
================================================================================
<===> bubble/loaded/import/input.scss
c {
  @import 'upstream';
  d: e;
}

<===> bubble/loaded/import/upstream.scss
@font-face { a: b }

<===> bubble/loaded/import/output.css
c {
  d: e;
}
@font-face {
  a: b;
}

<===> bubble/loaded/import/warning
DEPRECATION WARNING: Sass @import rules are deprecated and will be removed in Dart Sass 3.0.0.

More info and automated migrator: https://sass-lang.com/d/import

  ,
2 |   @import 'upstream';
  |           ^^^^^^^^^^
  '
    input.scss 2:11  root stylesheet

DEPRECATION WARNING: Sass's behavior for declarations that appear after nested
rules will be changing to match the behavior specified by CSS in an upcoming
version. To keep the existing behavior, move the declaration above the nested
rule. To opt into the new behavior, wrap the declaration in `& {}`.

More info: https://sass-lang.com/d/mixed-decls

  ,--> input.scss
3 |   d: e;
  |   ^^^^ declaration
  '
  ,--> upstream.scss
1 | @font-face { a: b }
  | =================== nested rule
  '
    input.scss 3:3  root stylesheet

<===>
================================================================================
<===> bubble/loaded/meta-load-css/input.scss
@use 'sass:meta';

c {
  @include meta.load-css('upstream');
  d: e;
}

<===> bubble/loaded/meta-load-css/upstream.scss
@font-face { a: b }

<===> bubble/loaded/meta-load-css/output.css
c {
  d: e;
}
@font-face {
  a: b;
}

<===> bubble/loaded/meta-load-css/warning
DEPRECATION WARNING: Sass's behavior for declarations that appear after nested
rules will be changing to match the behavior specified by CSS in an upcoming
version. To keep the existing behavior, move the declaration above the nested
rule. To opt into the new behavior, wrap the declaration in `& {}`.

More info: https://sass-lang.com/d/mixed-decls

  ,--> input.scss
5 |   d: e;
  |   ^^^^ declaration
  '
  ,--> upstream.scss
1 | @font-face { a: b }
  | =================== nested rule
  '
    input.scss 5:3  root stylesheet
