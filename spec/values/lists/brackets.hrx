<===>
<==============================================================================>
<===> single/input.scss
a { b: [c] }

<===> single/output.css
a {
  b: [c];
}

<===>
<==============================================================================>
<===> multiple/input.scss
a { b: [c, d] }

<===> multiple/output.css
a {
  b: [c, d];
}

<===>
<==============================================================================>
<===> empty/input.scss
a { b: [] }

<===> empty/output.css
a {
  b: [];
}

<===>
<==============================================================================>
<===> nested/single/input.scss
a { b: [[c]] }

<===> nested/single/output.css
a {
  b: [[c]];
}

<===>
<==============================================================================>
<===> nested/multiple/input.scss
a { b: [[c], [d, e]] }

<===> nested/multiple/output.css
a {
  b: [[c], [d, e]];
}

<===>
<==============================================================================>
<===> nested/unbracketed/single/input.scss
a { b: [(c,)] }

<===> nested/unbracketed/single/output.css
a {
  b: [c];
}

<===>
<==============================================================================>
<===> nested/unbracketed/multiple/input.scss
a { b: [(c,), (d, e)] }

<===> nested/unbracketed/multiple/output.css
a {
  b: [c, d, e];
}

<===>
<==============================================================================>
<===> trailing_comma/input.scss
a { b: [c, d,] }

<===> trailing_comma/output.css
a {
  b: [c, d];
}


<===>
<==============================================================================>
<===> space_separated/input.scss
a { b: [c d] }

<===> space_separated/output.css
a {
  b: [c d];
}

<===>
<==============================================================================>
<===> inspect/single/input.scss
a { b: inspect([c]) }

<===> inspect/single/output.css
a {
  b: [c];
}

<===>
<==============================================================================>
<===> inspect/multiple/input.scss
a { b: inspect([c, d]) }

<===> inspect/multiple/output.css
a {
  b: [c, d];
}

<===>
<==============================================================================>
<===> inspect/empty/input.scss
a { b: inspect([]) }

<===> inspect/empty/output.css
a {
  b: [];
}

<===>
<==============================================================================>
<===> inspect/nested/single/input.scss
a { b: inspect([[c]]) }

<===> inspect/nested/single/output.css
a {
  b: [[c]];
}

<===>
<==============================================================================>
<===> inspect/nested/multiple/input.scss
a { b: inspect([[c], [d, e]]) }

<===> inspect/nested/multiple/output.css
a {
  b: [[c], [d, e]];
}

<===>
<==============================================================================>
<===> inspect/nested/unbracketed/single/input.scss
a { b: inspect([(c,)]) }

<===> inspect/nested/unbracketed/single/output.css
a {
  b: [(c,)];
}

<===>
<==============================================================================>
<===> inspect/nested/unbracketed/multiple/input.scss
a { b: inspect([(c,), (d, e)]) }

<===> inspect/nested/unbracketed/multiple/output.css
a {
  b: [(c,), (d, e)];
}

<===>
<==============================================================================>
<===> inspect/nested/unbracketed/trailing_comma/input.scss
a { b: inspect([c d,]) }

<===> inspect/nested/unbracketed/trailing_comma/output.css
a {
  b: [c d,];
}

<===>
<==============================================================================>
<===> list_functions/parse/comma_separated/input.scss
a {
  b: nth([x, y], 2);
  c: list-separator([x, y]);
}

<===> list_functions/parse/comma_separated/output.css
a {
  b: y;
  c: comma;
}

<===>
<==============================================================================>
<===> list_functions/parse/space_separated/input.scss
a {
  b: nth([x y], 2);
  c: list-separator([x y]);
}

<===> list_functions/parse/space_separated/output.css
a {
  b: y;
  c: space;
}

<===>
<==============================================================================>
<===> list_functions/preserve_bracketedness/input.scss
a {
  b: set-nth([x, y], 2, z);
  c: append([x, y], z);
  d: append([x, y], z, $separator: space);
}

<===> list_functions/preserve_bracketedness/output.css
a {
  b: [x, z];
  c: [x, y, z];
  d: [x y z];
}
