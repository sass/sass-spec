<===> README.md
Most of the same behavior tested for `calc()` applies to `abs()`, but for
terseness' sake isn't tested explicitly.

<===>
================================================================================
<===> zero/input.scss
a {b: abs(0)}

<===> zero/output.css
a {
  b: 0;
}

<===>
================================================================================
<===> positive/integer/input.scss
a {b: abs(1)}

<===> positive/integer/output.css
a {
  b: 1;
}

<===>
================================================================================
<===> positive/decimal/input.scss
a {b: abs(5.6)}

<===> positive/decimal/output.css
a {
  b: 5.6;
}

<===>
================================================================================
<===> negative/integer/input.scss
a {b: abs(-17)}

<===> negative/integer/output.css
a {
  b: 17;
}

<===>
================================================================================
<===> negative/decimal/input.scss
a {b: abs(-123.456)}

<===> negative/decimal/output.css
a {
  b: 123.456;
}

<===>
================================================================================
<===> named/input.scss
$number: -3;
a {b: abs($number)}

<===> named/output.css
a {
  b: 3;
}

<===>
================================================================================
<===> preserves_units/input.scss
a {b: abs(-7px / 4em) * 1em}

<===> preserves_units/output.css
a {
  b: 1.75em;
}

<===>
================================================================================
<===> error/too_few_args/input.scss
a {b: abs()}

<===> error/too_few_args/error
Error: Expected number, variable, function, or calculation.
  ,
1 | a {b: abs()}
  |           ^
  '
  input.scss 1:11  root stylesheet

<===>
================================================================================
<===> error/too_many_args/input.scss
a {b: abs(1, 2)}


<===> error/too_many_args/error
Error: expected "+", "-", "*", "/", or ")".
  ,
1 | a {b: abs(1, 2)}
  |            ^
  '
  input.scss 1:12  root stylesheet

<===>
================================================================================
<===> abs_percentage_warning/input.scss
a {b: abs(-7.5%)}

<===> abs_percentage_warning/output.css
a {
  b: 7.5;
}

<===> abs_percentage_warning/warning
DEPRECATION WARNING: Passing percentage units to the global abs() function is deprecated In the future, this will emit a CSS abs() function to be resolved by the browser.
To preserve current behavior:
math.abs(-7.5%)
To emit a CSS abs() now:
abs(#{-7.5%})
More info: https://sass-lang.com/d/abs-percent
  ,
1 | a {b: abs(-7.5%)}
  | ^^^^^^^^^^^^^^^^^
  '
    input.scss 1:1  root stylesheet

<===>
================================================================================
<===> math/slash_as_division/input.scss
b { 
  a: 2px / abs(1.5);
}

<===> math/slash_as_division/output.css
b {
  a: 1.3333333333px;
}

<===> math/slash_as_division/warning
DEPRECATION WARNING: Using / for division outside of calc() is deprecated and will be removed in Dart Sass 2.0.0.
Recommendation: math.div(2px, abs(1.5)) or calc(2px / abs(1.5))
More info and automated migrator: https://sass-lang.com/d/slash-div
  ,
2 |   a: 2px / abs(1.5);
  |      ^^^^^^^^^^^^^^
  '
    input.scss 2:6  root stylesheet
