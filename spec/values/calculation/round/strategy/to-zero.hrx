<===> README.md
Most of the same behavior tested for `calc()` applies to `round()`, but for
terseness' sake isn't tested explicitly.

<===>
================================================================================
<===> strategy/to-zero/positive/input.scss
a {b: round(to-zero, 120px, 25px)}

<===> strategy/to-zero/positive/output.css
a {
  b: 100px;
}

<===>
================================================================================
<===> strategy/to-zero/negative/input.scss
a {b: round(to-zero, -120px, -25px)}

<===> strategy/to-zero/negative/output.css
a {
  b: -125px;
}

<===>
================================================================================
<===> strategy/to-zero/upper_multiple/number_is_bigger/input.scss
a {b: round(to-zero, 23px, 10px)}

<===> strategy/to-zero/upper_multiple/number_is_bigger/output.css
a {
  b: 20px;
}

<===>
================================================================================
<===> strategy/to-zero/upper_multiple/number_is_smaller/input.scss
a {b: round(to-zero, 18px, 10px)}

<===> strategy/to-zero/upper_multiple/number_is_smaller/output.css
a {
  b: 10px;
}

<===>
================================================================================
<===> strategy/to-zero/upper_multiple/number_is_half/input.scss
a {b: round(to-zero, 15px, 10px)}

<===> strategy/to-zero/upper_multiple/number_is_half/output.css
a {
  b: 10px;
}

<===>
================================================================================
<===> strategy/to-zero/upper_multiple/number_is_negative/input.scss
a {b: round(to-zero, -13px, 10px)}

<===> strategy/to-zero/upper_multiple/number_is_negative/output.css
a {
  b: -10px;
}

<===>
================================================================================
<===> strategy/to-zero/lower_multiple/number_is_bigger/input.scss
a {b: round(to-zero, 13px, 10px)}

<===> strategy/to-zero/lower_multiple/number_is_bigger/output.css
a {
  b: 10px;
}

<===>
================================================================================
<===> strategy/to-zero/lower_multiple/number_is_negative/input.scss
a {b: round(to-zero, -18px, 10px)}

<===> strategy/to-zero/lower_multiple/number_is_negative/output.css
a {
  b: -10px;
}

<===>
================================================================================
<===> strategy/to-zero/negative_zero/positive_infinity/input.scss
@use "sass:math";
a {b: math.div(1, round(to-zero, -5, infinity))}

<===> strategy/to-zero/negative_zero/positive_infinity/output.css
a {
  b: calc(-infinity);
}

<===>
================================================================================
<===> strategy/to-zero/negative_zero/negative_infinity/input.scss
@use "sass:math";
a {b: math.div(1, round(to-zero, -5, -infinity))}

<===> strategy/to-zero/negative_zero/negative_infinity/output.css
a {
  b: calc(-infinity);
}

<===>
================================================================================
<===> strategy/to-zero/positive_zero/positive_infinity/input.scss
@use "sass:math";
a {b: math.div(1, round(to-zero, 5, infinity))}

<===> strategy/to-zero/positive_zero/positive_infinity/output.css
a {
  b: calc(infinity);
}

<===>
================================================================================
<===> strategy/to-zero/positive_zero/negative_infinity/input.scss
@use "sass:math";
a {b: math.div(1, round(to-zero, 5, -infinity))}

<===> strategy/to-zero/positive_zero/negative_infinity/output.css
a {
  b: calc(infinity);
}
