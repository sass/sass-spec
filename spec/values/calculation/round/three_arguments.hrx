<===> README.md
Most of the same behavior tested for `calc()` applies to `round()`, but for
terseness' sake isn't tested explicitly.

<===>
================================================================================
<===> strategy/nearest/simplification/input.scss
a {
  b: round(nearest, 3.8px - 1px + var(--test), 1.1px + 4px)}

<===> strategy/nearest/simplification/output.css
a {
  b: round(nearest, 2.8px + var(--test), 5.1px);
}

<===>
================================================================================
<===> strategy/nearest/positive/input.scss
a {b: round(nearest, 117px, 25px)}

<===> strategy/nearest/positive/output.css
a {
  b: 125px;
}

<===>
================================================================================
<===> strategy/nearest/negative/input.scss
a {b: round(nearest, -101, -25)}

<===> strategy/nearest/negative/output.css
a {
  b: -100;
}

<===>
================================================================================
<===> strategy/nearest/negative_and_positive/input.scss
a {b: round(nearest, -10, 5)}

<===> strategy/nearest/negative_and_positive/output.css
a {
  b: -10;
}

<===>
================================================================================
<===> strategy/nearest/positive_and_negative/input.scss
a {b: round(nearest, 12px, -7px)}

<===> strategy/nearest/positive_and_negative/output.css
a {
  b: 14px;
}

<===>
================================================================================
<===> strategy/nearest/step_is_zero/input.scss
a {b: round(nearest, 10px, 0px)}

<===> strategy/nearest/step_is_zero/output.css
a {
  b: calc(NaN * 1px);
}

<===>
================================================================================
<===> strategy/nearest/positive_and_infinity/input.scss
@use "sass:math";
a {b: math.div(1, round(nearest, 10, infinity))}

<===> strategy/nearest/positive_and_infinity/output.css
a {
  b: calc(infinity);
}

<===>
================================================================================
<===> strategy/nearest/negative_and_infinity/input.scss
@use "sass:math";
a {b: math.div(1, round(nearest, -10, infinity))}

<===> strategy/nearest/negative_and_infinity/output.css
a {
  b: calc(-infinity);
}

<===>
================================================================================
<===> strategy/nearest/infinity/input.scss
@use "sass:math";
a {b: round(nearest, infinity, infinity)}

<===> strategy/nearest/infinity/output.css
a {
  b: calc(NaN);
}

<===>
================================================================================
<===> strategy/nearest/step_is_multiple_of_number/input.scss
a {b: round(nearest, 5px, 25px)}

<===> strategy/nearest/step_is_multiple_of_number/output.css
a {
  b: 0px;
}

<===>
================================================================================
<===> strategy/nearest/number_is_multiple_of_step/input.scss
a {b: round(nearest, 25px, 5px)}

<===> strategy/nearest/number_is_multiple_of_step/output.css
a {
  b: 25px;
}

<===>
================================================================================
<===> strategy/up/positive/input.scss
a {b: round(up, 101px, 25px)}

<===> strategy/up/positive/output.css
a {
  b: 125px;
}

<===>
================================================================================
<===> strategy/up/step_is_multiple_of_number/input.scss
a {b: round(up, 5px, 25px)}

<===> strategy/up/step_is_multiple_of_number/output.css
a {
  b: 25px;
}

<===>
================================================================================
<===> strategy/up/number_is_multiple_of_step/input.scss
a {b: round(up, 25px, 5px)}

<===> strategy/up/number_is_multiple_of_step/output.css
a {
  b: 25px;
}

<===>
================================================================================
<===> strategy/up/negative/input.scss
a {b: round(up, -101, -25)}

<===> strategy/up/negative/output.css
a {
  b: -100;
}

<===>
================================================================================
<===> strategy/up/negative_and_positive/input.scss
a {b: round(up, -10, 3)}

<===> strategy/up/negative_and_positive/output.css
a {
  b: -9;
}

<===>
================================================================================
<===> strategy/up/positive_and_negative/input.scss
a {b: round(up, 12px, -7px)}

<===> strategy/up/positive_and_negative/output.css
a {
  b: 14px;
}

<===>
================================================================================
<===> strategy/up/step_is_zero/input.scss
a {b: round(up, 10px, 0px)}

<===> strategy/up/step_is_zero/output.css
a {
  b: calc(NaN * 1px);
}

<===>
================================================================================
<===> strategy/up/positive_and_infinity/input.scss
a {b: round(up, 10, infinity)}

<===> strategy/up/positive_and_infinity/output.css
a {
  b: calc(infinity);
}

<===>
================================================================================
<===> strategy/up/negative_and_infinity/input.scss
@use "sass:math";
a {b: math.div(1, round(up, -10, infinity))}

<===> strategy/up/negative_and_infinity/output.css
a {
  b: calc(-infinity);
}

<===>
================================================================================
<===> strategy/up/infinity/input.scss
@use "sass:math";
a {b: round(up, infinity, infinity)}

<===> strategy/up/infinity/output.css
a {
  b: calc(NaN);
}

<===>
================================================================================
<===> strategy/down/step_is_multiple_of_number/input.scss
a {b: round(down, 5px, 25px)}

<===> strategy/down/step_is_multiple_of_number/output.css
a {
  b: 0px;
}

<===>
================================================================================
<===> strategy/down/number_is_multiple_of_step/input.scss
a {b: round(down, 25px, 5px)}

<===> strategy/down/number_is_multiple_of_step/output.css
a {
  b: 25px;
}

<===>
================================================================================
<===> strategy/down/positive/input.scss
a {b: round(down, 122px, 25px)}

<===> strategy/down/positive/output.css
a {
  b: 100px;
}

<===>
================================================================================
<===> strategy/down/negative/input.scss
a {b: round(down, -101, -25)}

<===> strategy/down/negative/output.css
a {
  b: -125;
}

<===>
================================================================================
<===> strategy/down/negative_and_positive/input.scss
a {b: round(down, -2, 7)}

<===> strategy/down/negative_and_positive/output.css
a {
  b: -7;
}

<===>
================================================================================
<===> strategy/down/positive_and_negative/input.scss
a {b: round(down, 12, -7)}

<===> strategy/down/positive_and_negative/output.css
a {
  b: 7;
}

<===>
================================================================================
<===> strategy/down/infinity/input.scss
a {b: round(down, infinity, infinity)}

<===> strategy/down/infinity/output.css
a {
  b: calc(NaN);
}

<===>
================================================================================
<===> strategy/down/step_is_zero/input.scss
a {b: round(down, 10px, 0px)}

<===> strategy/down/step_is_zero/output.css
a {
  b: calc(NaN * 1px);
}

<===>
================================================================================
<===> strategy/down/positive_and_infinity/input.scss
@use "sass:math";
a {b: math.div(1, round(down, 10, infinity))}

<===> strategy/down/positive_and_infinity/output.css
a {
  b: calc(infinity);
}

<===>
================================================================================
<===> strategy/down/negative_and_infinity/input.scss
@use "sass:math";
a {b: round(down, -10, infinity)}

<===> strategy/down/negative_and_infinity/output.css
a {
  b: calc(-infinity);
}

<===>
================================================================================
<===> strategy/to-zero/positive/input.scss
a {b: round(to-zero, 120px, 25px)}

<===> strategy/to-zero/positive/output.css
a {
  b: 100px;
}

<===>
================================================================================
<===> strategy/to-zero/negative/input.scss
a {b: round(to-zero, -120px, 25px)}

<===> strategy/to-zero/negative/output.css
a {
  b: -100px;
}

<===>
================================================================================
<===> strategy/unknown_variable/input.scss
a {
  e: round(var(--c), 8px, 9px);
}
<===> strategy/unknown_variable/output.css
a {
  e: round(var(--c), 8px, 9px);
}

<===>
================================================================================
<===> step/unknown_variable/input.scss
a {
  d: round(up, 8px, var(--c));
}
<===> step/unknown_variable/output.css
a {
  d: round(up, 8px, var(--c));
}

<===>
================================================================================
<===> preserved/interpolation/input.scss
a {
  e: round(#{"up"}, 3px, 9px);
}

<===> preserved/interpolation/output.css
a {
  e: round(up, 3px, 9px);
}

<===>
================================================================================
<===> units/real_and_unknown/input.scss
a {b: round(nearest, 1px, 10%)}

<===> units/real_and_unknown/output.css
a {
  b: round(nearest, 1px, 10%);
}

<===>
================================================================================
<===> units/unknown/input.scss
a {
  b: round(nearest, 1%, 2%);
}

<===> units/unknown/output.css
a {
  b: 2%;
}
