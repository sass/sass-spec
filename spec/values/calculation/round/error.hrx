<===> README.md
Most of the same behavior tested for `calc()` applies to `round()`, but for
terseness' sake isn't tested explicitly.

<===>
================================================================================
<===> too_few_args/input.scss
a {b: round()}

<===> too_few_args/error
Error: Missing argument.
  ,
1 | a {b: round()}
  |       ^^^^^^^
  '
  input.scss 1:7  root stylesheet

<===>
================================================================================
<===> too_many_args/input.scss
a {b: round(1, 2, 3, 4)}

<===> too_many_args/error
Error: Only 3 arguments allowed, but 4 were passed.
  ,
1 | a {b: round(1, 2, 3, 4)}
  |       ^^^^^^^^^^^^^^^^^
  '
  input.scss 1:7  root stylesheet

<===>
================================================================================
<===> one_argument/sass_script/variable_named_argument/input.scss
a {b: round($number: var(--c))}

<===> one_argument/sass_script/variable_named_argument/error
DEPRECATION WARNING: Global built-in functions are deprecated and will be removed in Dart Sass 3.0.0.
Use math.round instead.

More info and automated migrator: https://sass-lang.com/d/import

  ,
1 | a {b: round($number: var(--c))}
  |       ^^^^^^^^^^^^^^^^^^^^^^^^
  '
    input.scss 1:7  root stylesheet

Error: $number: var(--c) is not a number.
  ,
1 | a {b: round($number: var(--c))}
  |       ^^^^^^^^^^^^^^^^^^^^^^^^
  '
  input.scss 1:7  root stylesheet

<===>
================================================================================
<===> one_argument/unsimplifiable/input.scss
a {b: round(1px + 2px - var(--c))}

<===> one_argument/unsimplifiable/error
Error: Single argument 3px - var(--c) expected to be simplifiable.
  ,
1 | a {b: round(1px + 2px - var(--c))}
  |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  '
  input.scss 1:7  root stylesheet

<===>
================================================================================
<===> one_argument/type/input.scss
a {b: round("0")}

<===> one_argument/type/error
DEPRECATION WARNING: Global built-in functions are deprecated and will be removed in Dart Sass 3.0.0.
Use math.round instead.

More info and automated migrator: https://sass-lang.com/d/import

  ,
1 | a {b: round("0")}
  |       ^^^^^^^^^^
  '
    input.scss 1:7  root stylesheet

Error: $number: "0" is not a number.
  ,
1 | a {b: round("0")}
  |       ^^^^^^^^^^
  '
  input.scss 1:7  root stylesheet

<===>
================================================================================
<===> one_argument/syntax/invalid_arg/input.scss
a {b: round($)}

<===> one_argument/syntax/invalid_arg/error
Error: Expected identifier.
  ,
1 | a {b: round($)}
  |              ^
  '
  input.scss 1:14  root stylesheet

<===>
================================================================================
<===> two_argument/units/real_and_unitless/input.scss
a {b: round(10px, 5)}

<===> two_argument/units/real_and_unitless/error
Error: 10px and 5 are incompatible.
  ,
1 | a {b: round(10px, 5)}
  |             ^^^^ 10px
  |                   = 5
  '
  input.scss 1:13  root stylesheet

<===>
================================================================================
<===> two_argument/units/known_incompatible/input.scss
a {b: round(10deg, 5px)}

<===> two_argument/units/known_incompatible/error
Error: 10deg and 5px are incompatible.
  ,
1 | a {b: round(10deg, 5px)}
  |             ^^^^^ 10deg
  |                    === 5px
  '
  input.scss 1:13  root stylesheet

<===>
================================================================================
<===> two_argument/units/complex_and_unknown/input.scss
a {b: round(1px*2px, 10%)}

<===> two_argument/units/complex_and_unknown/error
Error: Number calc(2px * 1px) isn't compatible with CSS calculations.
  ,
1 | a {b: round(1px*2px, 10%)}
  |             ^^^^^^^
  '
  input.scss 1:13  root stylesheet

<===>
================================================================================
<===> two_argument/missing_step/input.scss
a {b: round(nearest, 5)}

<===> two_argument/missing_step/error
Error: If strategy is not null, step is required.
  ,
1 | a {b: round(nearest, 5)}
  |       ^^^^^^^^^^^^^^^^^
  '
  input.scss 1:7  root stylesheet

<===>
================================================================================
<===> two_argument/x_type/input.scss
a {b: round(0, "0")}

<===> two_argument/x_type/error
Error: Only 1 argument allowed, but 2 were passed.
  ,--> input.scss
1 | a {b: round(0, "0")}
  |       ^^^^^^^^^^^^^ invocation
  '
  ,--> sass:math
1 | @function round($number) {
  |           ============== declaration
  '
  input.scss 1:7  root stylesheet

<===>
================================================================================
<===> two_argument/y_type/input.scss
a {b: round("0", 0)}

<===> two_argument/y_type/error
Error: Only 1 argument allowed, but 2 were passed.
  ,--> input.scss
1 | a {b: round("0", 0)}
  |       ^^^^^^^^^^^^^ invocation
  '
  ,--> sass:math
1 | @function round($number) {
  |           ============== declaration
  '
  input.scss 1:7  root stylesheet

<===>
================================================================================
<===> two_argument/sass_script/input.scss
a {b: round(7 % 3, 1)}

<===> two_argument/sass_script/error
Error: Only 1 argument allowed, but 2 were passed.
  ,--> input.scss
1 | a {b: round(7 % 3, 1)}
  |       ^^^^^^^^^^^^^^^ invocation
  '
  ,--> sass:math
1 | @function round($number) {
  |           ============== declaration
  '
  input.scss 1:7  root stylesheet

<===>
================================================================================
<===> three_argument/strategy/operation/input.scss
a {
  e: round(10px + 2px, 8px, 9px);
}
<===> three_argument/strategy/operation/error
Error: 12px must be either nearest, up, down or to-zero.
  ,
2 |   e: round(10px + 2px, 8px, 9px);
  |      ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  '
  input.scss 2:6  root stylesheet

<===>
================================================================================
<===> three_argument/strategy_type/input.scss
$wrong_input: "nearest";
a {b: round($wrong_input, 0, 0)}

<===> three_argument/strategy_type/error
Error: Value "nearest" can't be used in a calculation.
  ,
2 | a {b: round($wrong_input, 0, 0)}
  |             ^^^^^^^^^^^^
  '
  input.scss 2:13  root stylesheet

<===>
================================================================================
<===> three_argument/number_type/input.scss
$wrong_input: "0";
a {b: round(nearest, $wrong_input, 0)}

<===> three_argument/number_type/error
Error: Value "0" can't be used in a calculation.
  ,
2 | a {b: round(nearest, $wrong_input, 0)}
  |                      ^^^^^^^^^^^^
  '
  input.scss 2:22  root stylesheet

<===>
================================================================================
<===> three_argument/step_type/input.scss
$wrong_input: "0";
a {b: round(nearest, 0, $wrong_input)}

<===> three_argument/step_type/error
Error: Value "0" can't be used in a calculation.
  ,
2 | a {b: round(nearest, 0, $wrong_input)}
  |                         ^^^^^^^^^^^^
  '
  input.scss 2:25  root stylesheet
