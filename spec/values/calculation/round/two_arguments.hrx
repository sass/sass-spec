<===> README.md
Most of the same behavior tested for `calc()` applies to `round()`, but for
terseness' sake isn't tested explicitly.

<===>
================================================================================
<===> units/none/input.scss
a {b: round(117, 25)}

<===> units/none/output.css
a {
  b: 125;
}

<===>
================================================================================
<===> units/compatible/input.scss
a {b: round(117cm, 25mm)}

<===> units/compatible/output.css
a {
  b: 117.5cm;
}

<===>
================================================================================
<===> units/real_and_unknown/input.scss
a {b: round(1px, 10%)}

<===> units/real_and_unknown/output.css
a {
  b: round(1px, 10%);
}

<===>
================================================================================
<===> units/unknown/input.scss
a {
  b: round(1%, 2%);
}

<===> units/unknown/output.css
a {
  b: 2%;
}

<===>
================================================================================
<===> units/fake/input.scss
a {
  b: round(1foo, 2bar);
}

<===> units/fake/output.css
a {
  b: round(1foo, 2bar);
}

<===>
================================================================================
<===> units/same_fake/input.scss
a {
  b: round(1foo, 2foo);
}

<===> units/same_fake/output.css
a {
  b: 2foo;
}

<===>
================================================================================
<===> units/real_and_fake/input.scss
a {
  b: round(1px, 2bar);
}

<===> units/real_and_fake/output.css
a {
  b: round(1px, 2bar);
}

<===>
================================================================================
<===> simplification/input.scss
a {b: round(3.4px + 10%, 1px + 4px)}

<===> simplification/output.css
a {
  b: round(3.4px + 10%, 5px);
}

<===>
================================================================================
<===> step/zero/input.scss
a {b: round(5px, 0px)}

<===> step/zero/output.css
a {
  b: calc(NaN * 1px);
}

<===>
================================================================================
<===> step/negative_and_infinity/input.scss
@use "sass:math";
a {b: math.div(1, round(-0, infinity))}

<===> step/negative_and_infinity/output.css
a {
  b: calc(-infinity);
}

<===>
================================================================================
<===> step/positive_and_infinity/input.scss
@use "sass:math";
a {b: math.div(1, round(0, infinity))}

<===> step/positive_and_infinity/output.css
a {
  b: calc(infinity);
}

<===>
================================================================================
<===> infinity_and_negative/input.scss
a {b: round(infinity, -5)}

<===> infinity_and_negative/output.css
a {
  b: calc(infinity);
}

<===>
================================================================================
<===> infinity/input.scss
a {b: round(infinity, infinity)}

<===> infinity/output.css
a {
  b: calc(NaN);
}

<===>
================================================================================
<===> nan/input.scss
a {b: round(NaN, NaN)}

<===> nan/output.css
a {
  b: calc(NaN);
}

<===>
================================================================================
<===> unknown_variable/input.scss
a {
  c: round(up, var(--c));
}

<===> unknown_variable/output.css
a {
  c: round(up, var(--c));
}

<===>
================================================================================
<===> preserved/interpolation/input.scss
a {
  e: round(#{"5.5px, 1px"});
}

<===> preserved/interpolation/output.css
a {
  e: round(5.5px, 1px);
}
