<===> README.md
Most of the same behavior tested for `calc()` applies to `mod()`, but for
terseness' sake isn't tested explicitly.

<===>
================================================================================
<===> error/syntax/no_arg/input.scss
a {b: mod()}

<===> error/syntax/no_arg/error
Error: Expected number, variable, function, or calculation.
  ,
1 | a {b: mod()}
  |           ^
  '
  input.scss 1:11  root stylesheet

<===>
================================================================================
<===> error/syntax/missing_arg/input.scss
a {b: mod(3)}

<===> error/syntax/missing_arg/error
Error: 2 arguments required, but only 1 was passed.
  ,
1 | a {b: mod(3)}
  |       ^^^^^^
  '
  input.scss 1:7  root stylesheet

<===>
================================================================================
<===> error/syntax/many_args/input.scss
a {b: mod(3, 2, 1)}

<===> error/syntax/many_args/error
Error: expected "+", "-", "*", "/", or ")".
  ,
1 | a {b: mod(3, 2, 1)}
  |               ^
  '
  input.scss 1:15  root stylesheet

<===>
================================================================================
<===> error/syntax/incompatible/input.scss
a {b: mod(16px, 5)}

<===> error/syntax/incompatible/error
Error: 16px and 5 are incompatible.
  ,
1 | a {b: mod(16px, 5)}
  |           ^^^^ 16px
  |                 = 5
  '
  input.scss 1:11  root stylesheet

<===>
================================================================================
<===> error/syntax/operation_incompatible/input.scss
a {b: mod(1 + 16px, 2)}

<===> error/syntax/operation_incompatible/error
Error: 1 and 16px are incompatible.
  ,
1 | a {b: mod(1 + 16px, 2)}
  |           ^^^^^^^^
  '
  input.scss 1:11  root stylesheet

<===>
================================================================================
<===> error/syntax/min_incompatible/input.scss
a {b: mod(min(16, 9px), 6)}

<===> error/syntax/min_incompatible/error
Error: 9px and 6 are incompatible.
  ,
1 | a {b: mod(min(16, 9px), 6)}
  |           ^^^^^^^^^^^^ 9px
  |                         = 6
  '
  input.scss 1:11  root stylesheet

<===>
================================================================================
<===> error/syntax/invalid_arg/input.scss
a {b: mod($)}

<===> error/syntax/invalid_arg/error
Error: Expected identifier.
  ,
1 | a {b: mod($)}
  |            ^
  '
  input.scss 1:12  root stylesheet

<===>
================================================================================
<===> error/syntax/quoted_string/input.scss
a {b: mod("test")}

<===> error/syntax/quoted_string/error
Error: Expected number, variable, function, or calculation.
  ,
1 | a {b: mod("test")}
  |           ^
  '
  input.scss 1:11  root stylesheet

<===>
================================================================================
<===> error/complex_unit/input.scss
a {b: mod(1px*1px, 2)}

<===> error/complex_unit/error
Error: Number 1px*px isn't compatible with CSS calculations.
  ,
1 | a {b: mod(1px*1px, 2)}
  |           ^^^^^^^
  '
  input.scss 1:11  root stylesheet

<===>
================================================================================
<===> error/unit/input.scss
a {b: mod(5%, 3%)}

<===> error/unit/output.css
a {
  b: 2%;
}

<===>
================================================================================
<===> operation/unitless/positive_args/input.scss
a {b: mod(7, 3)}

<===> operation/unitless/positive_args/output.css
a {
  b: 1;
}

<===>
================================================================================
<===> operation/unitless/y_negative/input.scss
a {b: mod(7, -3)}

<===> operation/unitless/y_negative/output.css
a {
  b: -2;
}

<===>
================================================================================
<===> operation/unitless/x_negative/input.scss
a {b: mod(-7, 3)}

<===> operation/unitless/x_negative/output.css
a {
  b: 2;
}

<===>
================================================================================
<===> operation/unitless/negative_args/input.scss
a {b: mod(-7, -3)}

<===> operation/unitless/negative_args/output.css
a {
  b: -1;
}

<===>
================================================================================
<===> operation/y_zero/plus/input.scss
a {b: mod(6, 0)}

<===> operation/y_zero/plus/output.css
a {
  b: calc(NaN);
}

<===>
================================================================================
<===> operation/x_zero/plus/input.scss
a {b: mod(0, 6)}

<===> operation/x_zero/plus/output.css
a {
  b: 0;
}

<===>
================================================================================
<===> operation/zeros/plus/input.scss
a {b: mod(0, 0)}

<===> operation/zeros/plus/output.css
a {
  b: calc(NaN);
}

<===>
================================================================================
<===> operation/y_infinity/plus/input.scss
@use "sass:math";
a {b: mod(math.div(1, 0), 10)}

<===> operation/y_infinity/plus/output.css
a {
  b: calc(NaN);
}

<===>
================================================================================
<===> operation/x_infinity/plus/input.scss
@use "sass:math";
a {b: mod(10, math.div(1, 0))}

<===> operation/x_infinity/plus/output.css
a {
  b: 10;
}

<===>
================================================================================
<===> operation/x_infinity/negative/input.scss
@use "sass:math";
a {b: mod(10, -infinity)}

<===> operation/x_infinity/negative/output.css
a {
  b: calc(NaN);
}

<===>
================================================================================
<===> preserved/variable/input.scss
a {
  --two-args: 2, 3;
  b: mod(var(--two-args));
}

<===> preserved/variable/output.css
a {
  --two-args: 2, 3;
  b: mod(var(--two-args));
}

<===>
================================================================================
<===> preserved/percent/input.scss
a {b: mod(4px, 3px - 1.5px + 5%)}

<===> preserved/percent/output.css
a {
  b: mod(4px, 1.5px + 5%);
}

<===>
================================================================================
<===> preserved/operation/variable/input.scss
a {
  --test: 5;
  b: mod(3px - 1px + var(--test), 4px);
}

<===> preserved/operation/variable/output.css
a {
  --test: 5;
  b: mod(2px + var(--test), 4px);
}
