<===> README.md
Most of the same behavior tested for `calc()` applies to `round()`, but for
terseness' sake isn't tested explicitly.

<===>
================================================================================
<===> error/syntax/no_arg/input.scss
a {b: round()}

<===> error/syntax/no_arg/error
Error: Missing argument $number.
  ,--> input.scss
1 | a {b: round()}
  |       ^^^^^^^ invocation
  '
  ,--> sass:math
1 | @function round($number) {
  |           ============== declaration
  '
  input.scss 1:7  root stylesheet

<===>
================================================================================
<===> error/syntax/two_args/compatibility/input.scss
a {b: round(3.4px + 1px, 1 + 4)}

<===> error/syntax/two_args/compatibility/error
Error: 4.4px and 5 are incompatible.
  ,
1 | a {b: round(3.4px + 1px, 1 + 4)}
  |             ^^^^^^^^^^^ 4.4px
  |                          ===== 5
  '
  input.scss 1:13  root stylesheet

<===>
================================================================================
<===> error/syntax/two_args/wrong_arg/input.scss
a {b: round(nearest, 5)}

<===> error/syntax/two_args/wrong_arg/error
Error: If strategy is not null, step is required.
  ,
1 | a {b: round(nearest, 5)}
  |       ^^^^^^^^^^^^^^^^^
  '
  input.scss 1:7  root stylesheet

<===>
================================================================================
<===> error/syntax/strategy/number/input.scss
a {b: round(3px, 3px, 2px)}

<===> error/syntax/strategy/number/error
Error: 3px must be either nearest, up, down or to-zero.
  ,
1 | a {b: round(3px, 3px, 2px)}
  |       ^^^^^^^^^^^^^^^^^^^^
  '
  input.scss 1:7  root stylesheet

<===>
================================================================================
<===> error/variable/number_and_step/input.scss
a {b: round(4px, test, nearest)}

<===> error/variable/number_and_step/error
Error: 4px must be either nearest, up, down or to-zero.
  ,
1 | a {b: round(4px, test, nearest)}
  |       ^^^^^^^^^^^^^^^^^^^^^^^^^
  '
  input.scss 1:7  root stylesheet

<===>
================================================================================
<===> preserved/unquoted_string/number/input.scss
a {b: round(test)}

<===> preserved/unquoted_string/number/output.css
a {
  b: round(test);
}

<===>
================================================================================
<===> preserved/unquoted_string/two_args/input.scss
a {b: round(test, nearest)}

<===> preserved/unquoted_string/two_args/output.css
a {
  b: round(test, nearest);
}

<===>
================================================================================
<===> preserved/unquoted_string/one_arg/input.scss
a {b: round(test, 5)}

<===> preserved/unquoted_string/one_arg/output.css
a {
  b: round(test, 5);
}

<===>
================================================================================
<===> preserved/unquoted_string/step/input.scss
a {b: round(4px, nearest)}

<===> preserved/unquoted_string/step/output.css
a {
  b: round(4px, nearest);
}

<===>
================================================================================
<===> preserved/operation/two_args/math/input.scss
a {b: round(3.4px + 10%, 1px + 4px)}

<===> preserved/operation/two_args/math/output.css
a {
  b: round(3.4px + 10%, 5px);
}

<===>
================================================================================
<===> preserved/operation/nearest/math/input.scss
a {
  --test: 3;
  b: round(nearest, 3.8px - 1px + var(--test), 1.1px + 4px)}

<===> preserved/operation/nearest/math/output.css
a {
  --test: 3;
  b: round(nearest, 2.8px + var(--test), 5.1px);
}

<===>
================================================================================
<===> step/zero/input.scss
a {b: round(5px, 0px)}

<===> step/zero/output.css
a {
  b: calc(NaN * 1px);
}

<===>
================================================================================
<===> step/infinity/input.scss
@use "sass:math";
a {b: round(-0, infinity)}

<===> step/infinity/output.css
a {
  b: 0;
}

<===>
================================================================================
<===> step/number/input.scss
a {b: round(5px, 5px)}

<===> step/number/output.css
a {
  b: 5px;
}

<===>
================================================================================
<===> step/unitless/input.scss
a {b: round(5, 5)}

<===> step/unitless/output.css
a {
  b: 5;
}

<===>
================================================================================
<===> step/compatible_units/input.scss
a {b: round(100px, 2cm)}

<===> step/compatible_units/output.css
a {
  b: 75.5905511811px;
}

<===>
================================================================================
<===> number/infinity/input.scss
@use "sass:math";
a {b: round(infinity, 5)}

<===> number/infinity/output.css
a {
  b: calc(infinity);
}

<===>
================================================================================
<===> up/negative_zero/input.scss
@use "sass:math";
a {b: math.div(1, round(up, -10, infinity))}

<===> up/negative_zero/output.css
a {
  b: calc(-infinity);
}

<===>
================================================================================
<===> nearest/negative_zero/input.scss
@use "sass:math";
a {b: math.div(1, round(nearest, -10, infinity))}

<===> nearest/negative_zero/output.css
a {
  b: calc(-infinity);
}

<===>
================================================================================
<===> down/negative_zero/input.scss
@use "sass:math";
a {b: math.div(1, round(down, -0, infinity))}

<===> down/negative_zero/output.css
a {
  b: calc(-infinity);
}

<===>
================================================================================
<===> operation/positive/input.scss
a {b: round(up, 10, infinity)}

<===> operation/positive/output.css
a {
  b: calc(infinity);
}

<===>
================================================================================
<===> operation/negative/input.scss
@use "sass:math";
a {b: round(down, -10, infinity)}

<===> operation/negative/output.css
a {
  b: calc(-infinity);
}

<===>
================================================================================
<===> operation/one_arg/simplify/input.scss
a {b: round(3.8px + 4px)}

<===> operation/one_arg/simplify/output.css
a {
  b: 8px;
}

<===>
================================================================================
<===> operation/two_args/simplify/input.scss
$c: 10px;
a {b: round(3.8px + 4px, $c)}

<===> operation/two_args/simplify/output.css
a {
  b: 10px;
}

<===>
================================================================================
<===> operation/nearest/simplify/input.scss
a {b: round(nearest, 115px + 2px, 21px + 4px)}

<===> operation/nearest/simplify/output.css
a {
  b: 125px;
}

<===>
================================================================================
<===> operation/up/input.scss
a {b: round(up, 101px, 25px)}

<===> operation/up/output.css
a {
  b: 125px;
}

<===>
================================================================================
<===> operation/down/input.scss
a {b: round(down, 122px, 25px)}

<===> operation/down/output.css
a {
  b: 100px;
}

<===>
================================================================================
<===> operation/to-zero/positive/input.scss
a {b: round(to-zero, 120px, 25px)}

<===> operation/to-zero/positive/output.css
a {
  b: 100px;
}

<===>
================================================================================
<===> operation/to-zero/negative/input.scss
a {b: round(to-zero, -120px, 25px)}

<===> operation/to-zero/negative/output.css
a {
  b: -100px;
}

<===>
================================================================================
<===> nan/simplify/input.scss
a {b: round(calc(NaN), calc(NaN))}

<===> nan/simplify/output.css
a {
  b: calc(NaN);
}

<===>
================================================================================
<===> infinity/input.scss
@use "sass:math";
a {b: round(up, infinity, infinity)}

<===> infinity/output.css
a {
  b: calc(NaN);
}

<===>
================================================================================
<===> variable/one_arg/input.scss
c {d: round($number: 12.1)}

<===> variable/one_arg/output.css
c {
  d: 12;
}

<===>
================================================================================
<===> unknown_variable/one_arg/input.scss
a {
  --example: 5;
  b: round(var(--example));
}
<===> unknown_variable/one_arg/output.css
a {
  --example: 5;
  b: round(var(--example));
}

<===>
================================================================================
<===> unknown_variable/two_args/second_arg/input.scss
a {
  c: round(up, var(--example));
}
<===> unknown_variable/two_args/second_arg/output.css
a {
  c: round(up, var(--example));
}

<===>
================================================================================
<===> unknown_variable/three_args/first_arg/input.scss
a {
  e: round(var(--example), 8px, 9px);
}
<===> unknown_variable/three_args/first_arg/output.css
a {
  e: round(var(--example), 8px, 9px);
}

<===>
================================================================================
<===> unknown_variable/three_args/third_arg/input.scss
a {
  d: round(up, 8px, var(--example));
}
<===> unknown_variable/three_args/third_arg/output.css
a {
  d: round(up, 8px, var(--example));
}

<===>
================================================================================
<===> math/slash_as_division/input.scss
b { 
  a: 2px / round(1.5);
}

<===> math/slash_as_division/output.css
b {
  a: 1px;
}

<===> math/slash_as_division/warning
DEPRECATION WARNING: Using / for division outside of calc() is deprecated and will be removed in Dart Sass 2.0.0.
Recommendation: math.div(2px, round(1.5)) or calc(2px / round(1.5))
More info and automated migrator: https://sass-lang.com/d/slash-div
  ,
2 |   a: 2px / round(1.5);
  |      ^^^^^^^^^^^^^^^^
  '
    input.scss 2:6  root stylesheet
