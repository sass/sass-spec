<===> input.scss
$i: 9;
$z: 3 !default;
div {
  asd: $i;
  $i: 99 !global;
  $n: 42 !global;
  qwe: $i;
  zapf: $z;
  $z: 84;
  ding: $z;
}
div {
  foo: $n;
  foo: $i;
  $i: 999;
  $n: 999;
  foo: $n;
  foo: $i;
  div {
    $i: 9999;
    $n: 9999 !default;
    bar: $i;
    bar: $n;
  }
  baz: $i;
}
div {
  asd: $i;
  qwe: $n;
  zap: $z;
}
<===> output.css
div {
  asd: 9;
  qwe: 99;
  zapf: 3;
  ding: 84;
}

div {
  foo: 42;
  foo: 99;
  foo: 999;
  foo: 999;
  baz: 9999;
}
div div {
  bar: 9999;
  bar: 999;
}

div {
  asd: 99;
  qwe: 42;
  zap: 3;
}

<===> warning
DEPRECATION WARNING: As of Dart Sass 2.0.0, !global assignments won't be able to declare new variables.

Recommendation: add `$n: null` at the stylesheet root.

  ,
6 |   $n: 42 !global;
  |   ^^^^^^^^^^^^^^
  '
    input.scss 6:3  root stylesheet

DEPRECATION WARNING: Sass's behavior for declarations that appear after nested
rules will be changing to match the behavior specified by CSS in an upcoming
version. To keep the existing behavior, move the declaration above the nested
rule. To opt into the new behavior, wrap the declaration in `& {}`.

More info: https://sass-lang.com/d/mixed-decls

   ,
19 | /   div {
20 | |     $i: 9999;
21 | |     $n: 9999 !default;
22 | |     bar: $i;
23 | |     bar: $n;
24 | |   }
   | '--- nested rule
25 |     baz: $i;
   |     ^^^^^^^ declaration
   '
    input.scss 25:3  root stylesheet
