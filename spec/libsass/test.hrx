<===> input.scss
@use "sass:color";
@use "sass:list";
@use "sass:math";
$x: 3;

div {
	noo: not $x;
	poo: not 3;
	doo: not($x);
	goo: not(3);
	zoo: not 1 + 2;

	roo: not not not $x;
	hoo: not not not 3;
}

@mixin foo($x-1, $x-2) {
  goo: $x-1;
  poo: $x-2;
}
$hux: "blah.css";
span {
  a: rgba(100, 20, 0, 1);
  b: rgba(#abc, 1);
  c: compact(hello, my, false, name, is, false, aaron, false, false);
  d: list.join(1 2 3, 4 5 6, comma);
  e: list.join(a b c, d e f);
  f: color.change(#102030, $blue: 5);
  g: color.change(#102030, $red: 120, $blue: 5);
  h: hsl(25, 100%, 80%);
  h: color.change(#ffc499, $alpha: 0.8, $lightness: 40%);
  h: color.change(hsl(25, 100%, 80%), $alpha: 0.8, $lightness: 40%);
  i: hsla(25, 100%, 40%, 0.8);
  foo: url("http://blah/flah/grah");
  foo: url(http://foo/bar/buzz.css);
  foo: url(hey#{1+3}ho.css);
  foo: url($hux);
  bug: compact(false 1 2 false 3 4 5 false);
  pug: compact(false, 1, 2, false, 3, 4, 5, false);
  mug: compact((flug, false, blug, false, krug, false));
}

@mixin bg($file) {
  background: url($file) no-repeat;
}

div {
  flug: url(bug.mug);
  krug: list.nth(1 2 3, 2px);
  blug: list.nth(a b c d, 3);
  flig: math.compatible(34, 22px) math.compatible(1%, 3) math.compatible(2, 1) math.compatible(4cm, 1in);
  flug: math.compatible(1px, 2.3in) math.compatible(1%, 2pt);
  flib: math.compatible(3ex, 2px) math.compatible(3em, 2cm);
  glib: not(fudge) not(false) not(0) not(red);
  trib: if(red, yellow, not taken);
  trub: if(not(fudge), not taken, here we are);
}

$width: 10px;
$height: 10px;
@media (-webkit-min-device-pixel-ratio: 2), (-moz-min-device-pixel-ratio: 2) {
  div {
    background-image: url(fudge);
    -webkit-background-size: $width $height;
  }
}

span {
  @media foo {
    div {
      blah: blah;
    }
    @media bar {
      p {
        blah: bloo;
      }
    }
  }
}

gudge {
  fudge: 20 + "%";
  mudge: 1 + blang;
}

h1:lang(en) {
  foo: bar;
}
<===> output.css
div {
  noo: false;
  poo: false;
  doo: false;
  goo: false;
  zoo: false2;
  roo: false;
  hoo: false;
}

span {
  a: rgb(100, 20, 0);
  b: #aabbcc;
  c: compact(hello, my, false, name, is, false, aaron, false, false);
  d: 1, 2, 3, 4, 5, 6;
  e: a b c d e f;
  f: #102005;
  g: #782005;
  h: hsl(25, 100%, 80%);
  h: rgba(204, 86, 0, 0.8);
  h: hsla(25, 100%, 40%, 0.8);
  i: hsla(25, 100%, 40%, 0.8);
  foo: url("http://blah/flah/grah");
  foo: url(http://foo/bar/buzz.css);
  foo: url(hey4ho.css);
  foo: url("blah.css");
  bug: compact(false 1 2 false 3 4 5 false);
  pug: compact(false, 1, 2, false, 3, 4, 5, false);
  mug: compact(flug, false, blug, false, krug, false);
}

div {
  flug: url(bug.mug);
  krug: 2;
  blug: c;
  flig: true true true true;
  flug: true false;
  flib: false false;
  glib: false true false false;
  trib: yellow;
  trub: here we are;
}

@media (-webkit-min-device-pixel-ratio: 2), (-moz-min-device-pixel-ratio: 2) {
  div {
    background-image: url(fudge);
    -webkit-background-size: 10px 10px;
  }
}
@media foo {
  span div {
    blah: blah;
  }
}

gudge {
  fudge: "20%";
  mudge: 1blang;
}

h1:lang(en) {
  foo: bar;
}

<===> warning
DEPRECATION WARNING [function-units]: $n: Passing a number with unit px is deprecated.

To preserve current behavior: calc($n / 1px)

More info: https://sass-lang.com/d/function-units

   ,
49 |   krug: list.nth(1 2 3, 2px);
   |         ^^^^^^^^^^^^^^^^^^^^
   '
    input.scss 49:9  root stylesheet
