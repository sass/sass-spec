.result {
  output: (0px + 1px);
  output: (4.2px / 1px);
  output: (4.2px * 1px / 1px);
  output: (0px + 1pt);
  output: (4.2px / 1pt);
  output: (4.2px * 1pt / 1px);
  output: (0px + 1pc);
  output: (4.2px / 1pc);
  output: (4.2px * 1pc / 1px);
  output: (0px + 1mm);
  output: (4.2px / 1mm);
  output: (4.2px * 1mm / 1px);
  output: (0px + 1cm);
  output: (4.2px / 1cm);
  output: (4.2px * 1cm / 1px);
  output: (0px + 1in);
  output: (4.2px / 1in);
  output: (4.2px * 1in / 1px);
  output: (0pt + 1px);
  output: (4.2pt / 1px);
  output: (4.2pt * 1px / 1pt);
  output: (0pt + 1pt);
  output: (4.2pt / 1pt);
  output: (4.2pt * 1pt / 1pt);
  output: (0pt + 1pc);
  output: (4.2pt / 1pc);
  output: (4.2pt * 1pc / 1pt);
  output: (0pt + 1mm);
  output: (4.2pt / 1mm);
  output: (4.2pt * 1mm / 1pt);
  output: (0pt + 1cm);
  output: (4.2pt / 1cm);
  output: (4.2pt * 1cm / 1pt);
  output: (0pt + 1in);
  output: (4.2pt / 1in);
  output: (4.2pt * 1in / 1pt);
  output: (0pc + 1px);
  output: (4.2pc / 1px);
  output: (4.2pc * 1px / 1pc);
  output: (0pc + 1pt);
  output: (4.2pc / 1pt);
  output: (4.2pc * 1pt / 1pc);
  output: (0pc + 1pc);
  output: (4.2pc / 1pc);
  output: (4.2pc * 1pc / 1pc);
  output: (0pc + 1mm);
  output: (4.2pc / 1mm);
  output: (4.2pc * 1mm / 1pc);
  output: (0pc + 1cm);
  output: (4.2pc / 1cm);
  output: (4.2pc * 1cm / 1pc);
  output: (0pc + 1in);
  output: (4.2pc / 1in);
  output: (4.2pc * 1in / 1pc);
  output: (0mm + 1px);
  output: (4.2mm / 1px);
  output: (4.2mm * 1px / 1mm);
  output: (0mm + 1pt);
  output: (4.2mm / 1pt);
  output: (4.2mm * 1pt / 1mm);
  output: (0mm + 1pc);
  output: (4.2mm / 1pc);
  output: (4.2mm * 1pc / 1mm);
  output: (0mm + 1mm);
  output: (4.2mm / 1mm);
  output: (4.2mm * 1mm / 1mm);
  output: (0mm + 1cm);
  output: (4.2mm / 1cm);
  output: (4.2mm * 1cm / 1mm);
  output: (0mm + 1in);
  output: (4.2mm / 1in);
  output: (4.2mm * 1in / 1mm);
  output: (0cm + 1px);
  output: (4.2cm / 1px);
  output: (4.2cm * 1px / 1cm);
  output: (0cm + 1pt);
  output: (4.2cm / 1pt);
  output: (4.2cm * 1pt / 1cm);
  output: (0cm + 1pc);
  output: (4.2cm / 1pc);
  output: (4.2cm * 1pc / 1cm);
  output: (0cm + 1mm);
  output: (4.2cm / 1mm);
  output: (4.2cm * 1mm / 1cm);
  output: (0cm + 1cm);
  output: (4.2cm / 1cm);
  output: (4.2cm * 1cm / 1cm);
  output: (0cm + 1in);
  output: (4.2cm / 1in);
  output: (4.2cm * 1in / 1cm);
  output: (0in + 1px);
  output: (4.2in / 1px);
  output: (4.2in * 1px / 1in);
  output: (0in + 1pt);
  output: (4.2in / 1pt);
  output: (4.2in * 1pt / 1in);
  output: (0in + 1pc);
  output: (4.2in / 1pc);
  output: (4.2in * 1pc / 1in);
  output: (0in + 1mm);
  output: (4.2in / 1mm);
  output: (4.2in * 1mm / 1in);
  output: (0in + 1cm);
  output: (4.2in / 1cm);
  output: (4.2in * 1cm / 1in);
  output: (0in + 1in);
  output: (4.2in / 1in);
  output: (4.2in * 1in / 1in);
}
