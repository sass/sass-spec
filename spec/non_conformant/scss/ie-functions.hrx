<===> options.yml
---
:warning_todo:
- sass/libsass#2887

<===> input.scss
@mixin ie-opacity($opacity) {
  opacity: $opacity / 100;
  filter: alpha(opacity=$opacity);
  bilter: alpha(opacity=$opacity);
  kilter: type-of(opacity=$opacity);
  left: expression(document.body.clientWidth/2-oDiv.offsetWidth/2);
  flop: expression(document.body.clientHeight/2-oDiv.offsetHeight/2);
}

$startColor: red;
$endColor: green;

foo {
  filter: progid:Microsoft.foo.bar.Baz(flip=#{foo + bar}, bang=#00ff00cc);
  something: blah(hux = mumble);
  blah: progid:something.something(flip=foobar, bang=#abc);
  blah: progid:bar.hux();
  blah: type-of(hux = mumble);
  @include ie-opacity(.5);
  left: expression(document.body.clientWidth/4);
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#{ie-hex-str($startColor)}', endColorstr='#{ie-hex-str($endColor)}', GradientType=1);
}

.parser {
    filter: progid:DXImageTransform.Microsoft.Alpha(opacity=20);
    filter: progid:DXImageTransform.Microsoft.MotionBlur(strength=50)
            progid:DXImageTransform.Microsoft.BasicImage(rotation=2, mirror=1);
    filter: progid:DXImageTransform.Microsoft.gradient(startColorstr=#550000FF, endColorstr=#55FFFF00);
    filter: progid:DXImageTransform.Microsoft.BasicImage(rotation=2, mirror=1)
            progid:DXImageTransform.Microsoft.Alpha(opacity=50)
            progid:DXImageTransform.Microsoft.Blur(strength=10);
    filter: progid:DXImageTransform.Microsoft.Wave(strength=100)
            progid:DXImageTransform.Microsoft.CheckerBoard(duration=4);
    filter: progid:DXImageTransform.Microsoft.Wave(strength=100)
            progid:DXImageTransform.Microsoft.BasicImage(rotation=2, mirror=1)
            progid:DXImageTransform.Microsoft.Iris(irisstyle='STAR', duration=4);
    filter: progid:DXImageTransform.Microsoft.MotionBlur(strength=13, direction=310)
            progid:DXImageTransform.Microsoft.Blur(pixelradius=2)
            progid:DXImageTransform.Microsoft.Wheel(duration=3);
    filter: progid:DXImageTransform.Microsoft.gradient(enabled='false',
            startColorstr=#550000FF, endColorstr=#55FFFF00);
}

<===> output.css
foo {
  filter: progid:Microsoft.foo.bar.Baz(flip=foobar, bang=#00ff00cc);
  something: blah(hux=mumble);
  blah: progid:something.something(flip=foobar, bang=#abc);
  blah: progid:bar.hux();
  blah: string;
  opacity: 0.005;
  filter: alpha(opacity=0.5);
  bilter: alpha(opacity=0.5);
  kilter: string;
  left: expression(document.body.clientWidth/2-oDiv.offsetWidth/2);
  flop: expression(document.body.clientHeight/2-oDiv.offsetHeight/2);
  left: expression(document.body.clientWidth/4);
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr="#FFFF0000", endColorstr="#FF008000", GradientType=1);
}

.parser {
  filter: progid:DXImageTransform.Microsoft.Alpha(opacity=20);
  filter: progid:DXImageTransform.Microsoft.MotionBlur(strength=50) progid:DXImageTransform.Microsoft.BasicImage(rotation=2, mirror=1);
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr=#550000FF, endColorstr=#55FFFF00);
  filter: progid:DXImageTransform.Microsoft.BasicImage(rotation=2, mirror=1) progid:DXImageTransform.Microsoft.Alpha(opacity=50) progid:DXImageTransform.Microsoft.Blur(strength=10);
  filter: progid:DXImageTransform.Microsoft.Wave(strength=100) progid:DXImageTransform.Microsoft.CheckerBoard(duration=4);
  filter: progid:DXImageTransform.Microsoft.Wave(strength=100) progid:DXImageTransform.Microsoft.BasicImage(rotation=2, mirror=1) progid:DXImageTransform.Microsoft.Iris(irisstyle="STAR", duration=4);
  filter: progid:DXImageTransform.Microsoft.MotionBlur(strength=13, direction=310) progid:DXImageTransform.Microsoft.Blur(pixelradius=2) progid:DXImageTransform.Microsoft.Wheel(duration=3);
  filter: progid:DXImageTransform.Microsoft.gradient(enabled="false", startColorstr=#550000FF, endColorstr=#55FFFF00);
}

<===> output-libsass.css
foo {
  filter: progid:Microsoft.foo.bar.Baz(flip=foobar, bang=#00ff00cc);
  something: blah(hux=mumble);
  blah: progid:something.something(flip=foobar, bang=#abc);
  blah: progid:bar.hux();
  blah: string;
  opacity: 0.005;
  filter: alpha(opacity=0.5);
  bilter: alpha(opacity=0.5);
  kilter: string;
  left: expression(document.body.clientWidth/2-oDiv.offsetWidth/2);
  flop: expression(document.body.clientHeight/2-oDiv.offsetHeight/2);
  left: expression(document.body.clientWidth/4);
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#FFFF0000', endColorstr='#FF008000', GradientType=1);
}

.parser {
  filter: progid:DXImageTransform.Microsoft.Alpha(opacity=20);
  filter: progid:DXImageTransform.Microsoft.MotionBlur(strength=50) progid:DXImageTransform.Microsoft.BasicImage(rotation=2, mirror=1);
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr=#550000FF, endColorstr=#55FFFF00);
  filter: progid:DXImageTransform.Microsoft.BasicImage(rotation=2, mirror=1) progid:DXImageTransform.Microsoft.Alpha(opacity=50) progid:DXImageTransform.Microsoft.Blur(strength=10);
  filter: progid:DXImageTransform.Microsoft.Wave(strength=100) progid:DXImageTransform.Microsoft.CheckerBoard(duration=4);
  filter: progid:DXImageTransform.Microsoft.Wave(strength=100) progid:DXImageTransform.Microsoft.BasicImage(rotation=2, mirror=1) progid:DXImageTransform.Microsoft.Iris(irisstyle='STAR', duration=4);
  filter: progid:DXImageTransform.Microsoft.MotionBlur(strength=13, direction=310) progid:DXImageTransform.Microsoft.Blur(pixelradius=2) progid:DXImageTransform.Microsoft.Wheel(duration=3);
  filter: progid:DXImageTransform.Microsoft.gradient(enabled='false', startColorstr=#550000FF, endColorstr=#55FFFF00);
}

<===> warning
DEPRECATION WARNING: Using / for division outside of calc() is deprecated and will be removed in Dart Sass 2.0.0.

Recommendation: math.div($opacity, 100) or calc($opacity / 100)

More info and automated migrator: https://sass-lang.com/d/slash-div

  ,
2 |   opacity: $opacity / 100;
  |            ^^^^^^^^^^^^^^
  '
    input.scss 2:12  ie-opacity()
    input.scss 19:3  root stylesheet
