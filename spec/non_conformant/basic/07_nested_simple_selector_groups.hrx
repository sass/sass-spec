<===> input.scss
a, b {
  color: red;
  background: blue;
}

c, d {
  color: gray;
  e, f {
    background: blue;
    padding: 10px 5px;
  }
  g, h {
    blah: blah;
    bloo: bloo;
  }
  i, j {
    foo: goo;
    k, l {
      m, n, o {
        wow: we are far inside;
        but: it still works;
      }
      hoo: boo;
    }
  }
}
<===> output.css
a, b {
  color: red;
  background: blue;
}

c, d {
  color: gray;
}
c e, c f, d e, d f {
  background: blue;
  padding: 10px 5px;
}
c g, c h, d g, d h {
  blah: blah;
  bloo: bloo;
}
c i, c j, d i, d j {
  foo: goo;
}
c i k, c i l, c j k, c j l, d i k, d i l, d j k, d j l {
  hoo: boo;
}
c i k m, c i k n, c i k o, c i l m, c i l n, c i l o, c j k m, c j k n, c j k o, c j l m, c j l n, c j l o, d i k m, d i k n, d i k o, d i l m, d i l n, d i l o, d j k m, d j k n, d j k o, d j l m, d j l n, d j l o {
  wow: we are far inside;
  but: it still works;
}

<===> warning
DEPRECATION WARNING: Sass's behavior for declarations that appear after nested
rules will be changing to match the behavior specified by CSS in an upcoming
version. To keep the existing behavior, move the declaration above the nested
rule. To opt into the new behavior, wrap the declaration in `& {}`.

More info: https://sass-lang.com/d/mixed-decls

   ,
19 | /       m, n, o {
20 | |         wow: we are far inside;
21 | |         but: it still works;
22 | |       }
   | '--- nested rule
23 |         hoo: boo;
   |         ^^^^^^^^ declaration
   '
    input.scss 23:7  root stylesheet
