<===> input.scss
$foo: foo !global !default;

default {
  foo: $foo;
}

$foo: bar;

after {
  @import "import";
  foo: $foo;
}

<===> _import.scss
import-before {
  foo: $foo;
}

$foo: baz !global !default;

import-after {
  foo: $foo;
}

<===> output.css
default {
  foo: foo;
}

after {
  foo: bar;
}
after import-before {
  foo: bar;
}
after import-after {
  foo: bar;
}

<===> warning
DEPRECATION WARNING: As of Dart Sass 2.0.0, !global assignments won't be able to declare new variables.

Since this assignment is at the root of the stylesheet, the !global flag is
unnecessary and can safely be removed.

  ,
1 | $foo: foo !global !default;
  | ^^^^^^^^^^^^^^^^^^^^^^^^^^
  '
    input.scss 1:1  root stylesheet

DEPRECATION WARNING: Sass's behavior for declarations that appear after nested
rules will be changing to match the behavior specified by CSS in an upcoming
version. To keep the existing behavior, move the declaration above the nested
rule. To opt into the new behavior, wrap the declaration in `& {}`.

More info: https://sass-lang.com/d/mixed-decls

  ,--> input.scss
11|     foo: $foo;
  |     ^^^^^^^^^ declaration
  '
  ,--> _import.scss
7 | / import-after {
8 | |   foo: $foo;
9 | | }
  | '--- nested rule
  '
    input.scss 11:3  root stylesheet
